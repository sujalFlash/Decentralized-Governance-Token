{
	"id": "179f4ce750eec50b574440b5d57a6211",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"transc.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract DecentralizedToken is ERC20, Ownable {\r\n    struct Proposal {\r\n        address proposer;\r\n        address target;\r\n        uint256 amount;\r\n        bool executed;\r\n        uint256 votesFor;\r\n        uint256 votesAgainst;\r\n        uint256 creationBlock;\r\n        uint256 executionBlock;  // New field for execution time\r\n        bool isMinting;\r\n        mapping(address => bool) voters;\r\n    }\r\n\r\n    uint256 public proposalCount;\r\n    mapping(uint256 => Proposal) public proposals;\r\n    uint256 public votingPeriodInBlocks = 45000;  // Approx. 1 week worth of blocks\r\n    uint256 public executionDelayInBlocks = 300;   // Approx. 5 minutes worth of blocks\r\n    uint256 public requiredVotes = 1; // Required votes to create a proposal\r\n\r\n    event ProposalCreated(uint256 proposalId, address proposer, address target, uint256 amount, bool isMinting);\r\n    event Voted(uint256 proposalId, address voter, bool support);\r\n    event ProposalExecuted(uint256 proposalId);\r\n\r\n    constructor(uint256 initialSupply) ERC20(\"sujalflash\", \"SI\") Ownable(address(this)) {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n\r\n    function createProposal(address target, uint256 amount, bool isMinting) public {\r\n        require(balanceOf(msg.sender) >= requiredVotes, \"Not enough tokens to create proposal\");\r\n        require(target != address(0), \"Invalid target address\");\r\n\r\n        proposalCount++;\r\n        Proposal storage proposal = proposals[proposalCount];\r\n        proposal.proposer = msg.sender;\r\n        proposal.target = target;\r\n        proposal.amount = amount;\r\n        proposal.creationBlock = block.number;\r\n        proposal.isMinting = isMinting;\r\n        proposal.executionBlock = block.number + executionDelayInBlocks; // Set execution delay\r\n\r\n        emit ProposalCreated(proposalCount, msg.sender, target, amount, isMinting);\r\n    }\r\n\r\n    function vote(uint256 proposalId, bool support) public {\r\n        Proposal storage proposal = proposals[proposalId];\r\n        require(block.number < proposal.creationBlock + votingPeriodInBlocks, \"Voting period has ended\");\r\n        require(balanceOf(msg.sender) > 0, \"No tokens to vote\");\r\n        require(!proposal.voters[msg.sender], \"Already voted\");\r\n\r\n        uint256 voterBalance = balanceOf(msg.sender);\r\n        uint256 votePower = voterBalance;\r\n\r\n        if (support) {\r\n            proposal.votesFor += votePower;\r\n        } else {\r\n            proposal.votesAgainst += votePower;\r\n        }\r\n        proposal.voters[msg.sender] = true;\r\n\r\n        emit Voted(proposalId, msg.sender, support);\r\n    }\r\n\r\n    function executeProposal(uint256 proposalId) public {\r\n        Proposal storage proposal = proposals[proposalId];\r\n        require(block.number >= proposal.executionBlock, \"Execution period has not started\");\r\n        require(!proposal.executed, \"Proposal already executed\");\r\n\r\n        uint256 totalVotes = proposal.votesFor + proposal.votesAgainst;\r\n        uint256 majorityThreshold = (totalVotes * 51) / 100; // 51% of total votes\r\n\r\n        if (proposal.votesFor >= majorityThreshold) {\r\n            if (proposal.isMinting) {\r\n                // Ensure the contract has enough tokens to mint\r\n                require(address(this).balance >= proposal.amount, \"Not enough balance to mint\");\r\n                _mint(proposal.proposer, proposal.amount);\r\n            } else {\r\n                // Ensure the proposer has enough tokens to burn\r\n                require(balanceOf(proposal.proposer) >= proposal.amount, \"Not enough balance to burn\");\r\n                _burn(proposal.proposer, proposal.amount);\r\n            }\r\n        } else {\r\n            // Reject the proposal if majority threshold is not met\r\n            revert(\"Proposal did not meet majority threshold\");\r\n        }\r\n\r\n        proposal.executed = true;\r\n\r\n        emit ProposalExecuted(proposalId);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        require(!isVoting(), \"Cannot transfer during voting\");\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    function isVoting() public view returns (bool) {\r\n        for (uint256 i = 1; i <= proposalCount; i++) {\r\n            if (block.number < proposals[i].creationBlock + votingPeriodInBlocks && !proposals[i].executed) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "petersburg"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"transc.sol": {
				"DecentralizedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isMinting",
									"type": "bool"
								}
							],
							"name": "ProposalCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "support",
									"type": "bool"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isMinting",
									"type": "bool"
								}
							],
							"name": "createProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executionDelayInBlocks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isVoting",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposalCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "votesFor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votesAgainst",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "creationBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "executionBlock",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isMinting",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiredVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "support",
									"type": "bool"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingPeriodInBlocks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"transc.sol\":174:4554  contract DecentralizedToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"transc.sol\":708:713  45000 */\n  0xafc8\n    /* \"transc.sol\":670:713  uint256 public votingPeriodInBlocks = 45000 */\n  0x08\n  sstore\n    /* \"transc.sol\":795:798  300 */\n  0x012c\n    /* \"transc.sol\":755:798  uint256 public executionDelayInBlocks = 300 */\n  0x09\n  sstore\n    /* \"transc.sol\":875:876  1 */\n  0x01\n    /* \"transc.sol\":844:876  uint256 public requiredVotes = 1 */\n  0x0a\n  sstore\n    /* \"transc.sol\":1156:1291  constructor(uint256 initialSupply) ERC20(\"sujalflash\", \"SI\") Ownable(address(this)) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"transc.sol\":1233:1237  this */\n  address\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x73756a616c666c61736800000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5349000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"transc.sol\":1251:1283  _mint(msg.sender, initialSupply) */\n  tag_18\n    /* \"transc.sol\":1257:1267  msg.sender */\n  caller\n    /* \"transc.sol\":1269:1282  initialSupply */\n  dup3\n    /* \"transc.sol\":1251:1256  _mint */\n  shl(0x20, tag_19)\n    /* \"transc.sol\":1251:1283  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"transc.sol\":1156:1291  constructor(uint256 initialSupply) ERC20(\"sujalflash\", \"SI\") Ownable(address(this)) {... */\n  pop\n    /* \"transc.sol\":174:4554  contract DecentralizedToken is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_43:\n    /* \"#utility.yul\":490:514   */\n  tag_75\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_76:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_44:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_78\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_43\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_81\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":781:900   */\ntag_80:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_82\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_44\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_45:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_46:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_47:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_87:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_89\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1758:1842   */\ntag_88:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_49:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_50:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_51:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_52:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_94\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_51\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2473:2512   */\n  tag_95\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_51\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_53:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_54:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_98\n    /* \"#utility.yul\":2779:2813   */\n  tag_99\n    /* \"#utility.yul\":2788:2812   */\n  tag_100\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_42\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2779:2813   */\n  tag_53\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2761:2814   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_55:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_56:\n    /* \"#utility.yul\":3017:3056   */\n  tag_103\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3078:3169   */\n  tag_104\n    /* \"#utility.yul\":3127:3168   */\n  tag_105\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_55\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_52\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_57:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_58:\n    /* \"#utility.yul\":3338:3370   */\n  tag_108\n  tag_57\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3379:3444   */\n  tag_109\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_59:\n    /* \"#utility.yul\":3516:3636   */\ntag_111:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_114\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_60:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_117\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_49\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3867:3896   */\n  tag_118\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_50\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_119:\n    /* \"#utility.yul\":4094:4174   */\n  tag_120\n    /* \"#utility.yul\":4150:4172   */\n  tag_121\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_50\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_59\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_116:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_61:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_62:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_124\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_63:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_126\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_62\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_9:\n    /* \"#utility.yul\":4911:4948   */\n  tag_128\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_45\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_130\n  tag_46\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4999:5055   */\ntag_129:\n    /* \"#utility.yul\":5079:5117   */\n  tag_131\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_48\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5164:5231   */\n  tag_132\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_60\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_135:\n    /* \"#utility.yul\":6105:6172   */\n  tag_136\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_63\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_133)\n    /* \"#utility.yul\":5326:5944   */\ntag_134:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_137\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_138:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_142\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_141:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_133:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_64:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_65:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_145\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_64\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_66:\n    /* \"#utility.yul\":6516:6540   */\n  tag_147\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_65\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_149\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_66\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_67:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_30:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_152\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_42\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_153\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_42\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_155\n  tag_67\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7115:7151   */\ntag_154:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_68:\n    /* \"#utility.yul\":7251:7275   */\n  tag_157\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_42\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_34:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_159\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_66\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7569:7641   */\n  tag_160\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_68\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7651:7723   */\n  tag_161\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_68\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_38:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_163\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_68\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"transc.sol\":174:4554  contract DecentralizedToken is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"transc.sol\":174:4554  contract DecentralizedToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xbd31a4d8\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xbd31a4d8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc9d27afe\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xda35c664\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf15c3fd4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9713de52\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x1bbef399\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x1bbef399\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2615a646\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x013cf08b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0d61b519\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"transc.sol\":618:663  mapping(uint256 => Proposal) public proposals */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":2752:4027  function executeProposal(uint256 proposalId) public {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":4250:4551  function isVoting() public view returns (bool) {... */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":670:713  uint256 public votingPeriodInBlocks = 45000 */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":1299:2025  function createProposal(address target, uint256 amount, bool isMinting) public {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"transc.sol\":4035:4242  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":844:876  uint256 public requiredVotes = 1 */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":2033:2744  function vote(uint256 proposalId, bool support) public {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      stop\n        /* \"transc.sol\":583:611  uint256 public proposalCount */\n    tag_20:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"transc.sol\":755:798  uint256 public executionDelayInBlocks = 300 */\n    tag_22:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"transc.sol\":618:663  mapping(uint256 => Proposal) public proposals */\n    tag_30:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      dup1\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup10\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_110\n      jump\t// in\n    tag_111:\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"transc.sol\":2752:4027  function executeProposal(uint256 proposalId) public {... */\n    tag_45:\n        /* \"transc.sol\":2815:2840  Proposal storage proposal */\n      0x00\n        /* \"transc.sol\":2843:2852  proposals */\n      0x07\n        /* \"transc.sol\":2843:2864  proposals[proposalId] */\n      0x00\n        /* \"transc.sol\":2853:2863  proposalId */\n      dup4\n        /* \"transc.sol\":2843:2864  proposals[proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"transc.sol\":2815:2864  Proposal storage proposal = proposals[proposalId] */\n      swap1\n      pop\n        /* \"transc.sol\":2899:2907  proposal */\n      dup1\n        /* \"transc.sol\":2899:2922  proposal.executionBlock */\n      0x07\n      add\n      sload\n        /* \"transc.sol\":2883:2895  block.number */\n      number\n        /* \"transc.sol\":2883:2922  block.number >= proposal.executionBlock */\n      lt\n      iszero\n        /* \"transc.sol\":2875:2959  require(block.number >= proposal.executionBlock, \"Execution period has not started\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"transc.sol\":2979:2987  proposal */\n      dup1\n        /* \"transc.sol\":2979:2996  proposal.executed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"transc.sol\":2978:2996  !proposal.executed */\n      iszero\n        /* \"transc.sol\":2970:3026  require(!proposal.executed, \"Proposal already executed\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"transc.sol\":3039:3057  uint256 totalVotes */\n      0x00\n        /* \"transc.sol\":3080:3088  proposal */\n      dup2\n        /* \"transc.sol\":3080:3101  proposal.votesAgainst */\n      0x05\n      add\n      sload\n        /* \"transc.sol\":3060:3068  proposal */\n      dup3\n        /* \"transc.sol\":3060:3077  proposal.votesFor */\n      0x04\n      add\n      sload\n        /* \"transc.sol\":3060:3101  proposal.votesFor + proposal.votesAgainst */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"transc.sol\":3039:3101  uint256 totalVotes = proposal.votesFor + proposal.votesAgainst */\n      swap1\n      pop\n        /* \"transc.sol\":3112:3137  uint256 majorityThreshold */\n      0x00\n        /* \"transc.sol\":3160:3163  100 */\n      0x64\n        /* \"transc.sol\":3154:3156  51 */\n      0x33\n        /* \"transc.sol\":3141:3151  totalVotes */\n      dup4\n        /* \"transc.sol\":3141:3156  totalVotes * 51 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"transc.sol\":3140:3163  (totalVotes * 51) / 100 */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"transc.sol\":3112:3163  uint256 majorityThreshold = (totalVotes * 51) / 100 */\n      swap1\n      pop\n        /* \"transc.sol\":3223:3240  majorityThreshold */\n      dup1\n        /* \"transc.sol\":3202:3210  proposal */\n      dup4\n        /* \"transc.sol\":3202:3219  proposal.votesFor */\n      0x04\n      add\n      sload\n        /* \"transc.sol\":3202:3240  proposal.votesFor >= majorityThreshold */\n      lt\n        /* \"transc.sol\":3198:3937  if (proposal.votesFor >= majorityThreshold) {... */\n      tag_133\n      jumpi\n        /* \"transc.sol\":3261:3269  proposal */\n      dup3\n        /* \"transc.sol\":3261:3279  proposal.isMinting */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"transc.sol\":3257:3774  if (proposal.isMinting) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"transc.sol\":3399:3407  proposal */\n      dup3\n        /* \"transc.sol\":3399:3414  proposal.amount */\n      0x02\n      add\n      sload\n        /* \"transc.sol\":3382:3386  this */\n      address\n        /* \"transc.sol\":3374:3395  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"transc.sol\":3374:3414  address(this).balance >= proposal.amount */\n      lt\n      iszero\n        /* \"transc.sol\":3366:3445  require(address(this).balance >= proposal.amount, \"Not enough balance to mint\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"transc.sol\":3464:3505  _mint(proposal.proposer, proposal.amount) */\n      tag_138\n        /* \"transc.sol\":3470:3478  proposal */\n      dup4\n        /* \"transc.sol\":3470:3487  proposal.proposer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"transc.sol\":3489:3497  proposal */\n      dup5\n        /* \"transc.sol\":3489:3504  proposal.amount */\n      0x02\n      add\n      sload\n        /* \"transc.sol\":3464:3469  _mint */\n      tag_139\n        /* \"transc.sol\":3464:3505  _mint(proposal.proposer, proposal.amount) */\n      jump\t// in\n    tag_138:\n        /* \"transc.sol\":3257:3774  if (proposal.isMinting) {... */\n      jump(tag_140)\n    tag_134:\n        /* \"transc.sol\":3652:3660  proposal */\n      dup3\n        /* \"transc.sol\":3652:3667  proposal.amount */\n      0x02\n      add\n      sload\n        /* \"transc.sol\":3620:3648  balanceOf(proposal.proposer) */\n      tag_141\n        /* \"transc.sol\":3630:3638  proposal */\n      dup5\n        /* \"transc.sol\":3630:3647  proposal.proposer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"transc.sol\":3620:3629  balanceOf */\n      tag_68\n        /* \"transc.sol\":3620:3648  balanceOf(proposal.proposer) */\n      jump\t// in\n    tag_141:\n        /* \"transc.sol\":3620:3667  balanceOf(proposal.proposer) >= proposal.amount */\n      lt\n      iszero\n        /* \"transc.sol\":3612:3698  require(balanceOf(proposal.proposer) >= proposal.amount, \"Not enough balance to burn\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"transc.sol\":3717:3758  _burn(proposal.proposer, proposal.amount) */\n      tag_145\n        /* \"transc.sol\":3723:3731  proposal */\n      dup4\n        /* \"transc.sol\":3723:3740  proposal.proposer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"transc.sol\":3742:3750  proposal */\n      dup5\n        /* \"transc.sol\":3742:3757  proposal.amount */\n      0x02\n      add\n      sload\n        /* \"transc.sol\":3717:3722  _burn */\n      tag_146\n        /* \"transc.sol\":3717:3758  _burn(proposal.proposer, proposal.amount) */\n      jump\t// in\n    tag_145:\n        /* \"transc.sol\":3257:3774  if (proposal.isMinting) {... */\n    tag_140:\n        /* \"transc.sol\":3198:3937  if (proposal.votesFor >= majorityThreshold) {... */\n      jump(tag_147)\n    tag_133:\n        /* \"transc.sol\":3875:3925  revert(\"Proposal did not meet majority threshold\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"transc.sol\":3198:3937  if (proposal.votesFor >= majorityThreshold) {... */\n    tag_147:\n        /* \"transc.sol\":3969:3973  true */\n      0x01\n        /* \"transc.sol\":3949:3957  proposal */\n      dup4\n        /* \"transc.sol\":3949:3966  proposal.executed */\n      0x03\n      add\n      0x00\n        /* \"transc.sol\":3949:3973  proposal.executed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":3991:4019  ProposalExecuted(proposalId) */\n      0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f\n        /* \"transc.sol\":4008:4018  proposalId */\n      dup5\n        /* \"transc.sol\":3991:4019  ProposalExecuted(proposalId) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"transc.sol\":2804:4027  {... */\n      pop\n      pop\n      pop\n        /* \"transc.sol\":2752:4027  function executeProposal(uint256 proposalId) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"transc.sol\":4250:4551  function isVoting() public view returns (bool) {... */\n    tag_51:\n        /* \"transc.sol\":4291:4295  bool */\n      0x00\n        /* \"transc.sol\":4313:4322  uint256 i */\n      dup1\n        /* \"transc.sol\":4325:4326  1 */\n      0x01\n        /* \"transc.sol\":4313:4326  uint256 i = 1 */\n      swap1\n      pop\n        /* \"transc.sol\":4308:4521  for (uint256 i = 1; i <= proposalCount; i++) {... */\n    tag_153:\n        /* \"transc.sol\":4333:4346  proposalCount */\n      sload(0x06)\n        /* \"transc.sol\":4328:4329  i */\n      dup2\n        /* \"transc.sol\":4328:4346  i <= proposalCount */\n      gt\n        /* \"transc.sol\":4308:4521  for (uint256 i = 1; i <= proposalCount; i++) {... */\n      tag_154\n      jumpi\n        /* \"transc.sol\":4416:4436  votingPeriodInBlocks */\n      sload(0x08)\n        /* \"transc.sol\":4387:4396  proposals */\n      0x07\n        /* \"transc.sol\":4387:4399  proposals[i] */\n      0x00\n        /* \"transc.sol\":4397:4398  i */\n      dup4\n        /* \"transc.sol\":4387:4399  proposals[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"transc.sol\":4387:4413  proposals[i].creationBlock */\n      0x06\n      add\n      sload\n        /* \"transc.sol\":4387:4436  proposals[i].creationBlock + votingPeriodInBlocks */\n      tag_156\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_156:\n        /* \"transc.sol\":4372:4384  block.number */\n      number\n        /* \"transc.sol\":4372:4436  block.number < proposals[i].creationBlock + votingPeriodInBlocks */\n      lt\n        /* \"transc.sol\":4372:4462  block.number < proposals[i].creationBlock + votingPeriodInBlocks && !proposals[i].executed */\n      dup1\n      iszero\n      tag_157\n      jumpi\n      pop\n        /* \"transc.sol\":4441:4450  proposals */\n      0x07\n        /* \"transc.sol\":4441:4453  proposals[i] */\n      0x00\n        /* \"transc.sol\":4451:4452  i */\n      dup3\n        /* \"transc.sol\":4441:4453  proposals[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"transc.sol\":4441:4462  proposals[i].executed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"transc.sol\":4440:4462  !proposals[i].executed */\n      iszero\n        /* \"transc.sol\":4372:4462  block.number < proposals[i].creationBlock + votingPeriodInBlocks && !proposals[i].executed */\n    tag_157:\n        /* \"transc.sol\":4368:4510  if (block.number < proposals[i].creationBlock + votingPeriodInBlocks && !proposals[i].executed) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"transc.sol\":4490:4494  true */\n      0x01\n        /* \"transc.sol\":4483:4494  return true */\n      swap2\n      pop\n      pop\n      jump(tag_152)\n        /* \"transc.sol\":4368:4510  if (block.number < proposals[i].creationBlock + votingPeriodInBlocks && !proposals[i].executed) {... */\n    tag_158:\n        /* \"transc.sol\":4348:4351  i++ */\n      dup1\n      dup1\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      swap2\n      pop\n      pop\n        /* \"transc.sol\":4308:4521  for (uint256 i = 1; i <= proposalCount; i++) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"transc.sol\":4538:4543  false */\n      0x00\n        /* \"transc.sol\":4531:4543  return false */\n      swap1\n      pop\n        /* \"transc.sol\":4250:4551  function isVoting() public view returns (bool) {... */\n    tag_152:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"transc.sol\":670:713  uint256 public votingPeriodInBlocks = 45000 */\n    tag_59:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_110\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_110\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"transc.sol\":1299:2025  function createProposal(address target, uint256 amount, bool isMinting) public {... */\n    tag_82:\n        /* \"transc.sol\":1422:1435  requiredVotes */\n      sload(0x0a)\n        /* \"transc.sol\":1397:1418  balanceOf(msg.sender) */\n      tag_183\n        /* \"transc.sol\":1407:1417  msg.sender */\n      caller\n        /* \"transc.sol\":1397:1406  balanceOf */\n      tag_68\n        /* \"transc.sol\":1397:1418  balanceOf(msg.sender) */\n      jump\t// in\n    tag_183:\n        /* \"transc.sol\":1397:1435  balanceOf(msg.sender) >= requiredVotes */\n      lt\n      iszero\n        /* \"transc.sol\":1389:1476  require(balanceOf(msg.sender) >= requiredVotes, \"Not enough tokens to create proposal\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"transc.sol\":1513:1514  0 */\n      0x00\n        /* \"transc.sol\":1495:1515  target != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"transc.sol\":1495:1501  target */\n      dup4\n        /* \"transc.sol\":1495:1515  target != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"transc.sol\":1487:1542  require(target != address(0), \"Invalid target address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"transc.sol\":1555:1568  proposalCount */\n      0x06\n      0x00\n        /* \"transc.sol\":1555:1570  proposalCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_190\n      swap1\n      tag_160\n      jump\t// in\n    tag_190:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"transc.sol\":1581:1606  Proposal storage proposal */\n      0x00\n        /* \"transc.sol\":1609:1618  proposals */\n      0x07\n        /* \"transc.sol\":1609:1633  proposals[proposalCount] */\n      0x00\n        /* \"transc.sol\":1619:1632  proposalCount */\n      sload(0x06)\n        /* \"transc.sol\":1609:1633  proposals[proposalCount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"transc.sol\":1581:1633  Proposal storage proposal = proposals[proposalCount] */\n      swap1\n      pop\n        /* \"transc.sol\":1664:1674  msg.sender */\n      caller\n        /* \"transc.sol\":1644:1652  proposal */\n      dup2\n        /* \"transc.sol\":1644:1661  proposal.proposer */\n      0x00\n      add\n      0x00\n        /* \"transc.sol\":1644:1674  proposal.proposer = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":1703:1709  target */\n      dup4\n        /* \"transc.sol\":1685:1693  proposal */\n      dup2\n        /* \"transc.sol\":1685:1700  proposal.target */\n      0x01\n      add\n      0x00\n        /* \"transc.sol\":1685:1709  proposal.target = target */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":1738:1744  amount */\n      dup3\n        /* \"transc.sol\":1720:1728  proposal */\n      dup2\n        /* \"transc.sol\":1720:1735  proposal.amount */\n      0x02\n      add\n        /* \"transc.sol\":1720:1744  proposal.amount = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":1780:1792  block.number */\n      number\n        /* \"transc.sol\":1755:1763  proposal */\n      dup2\n        /* \"transc.sol\":1755:1777  proposal.creationBlock */\n      0x06\n      add\n        /* \"transc.sol\":1755:1792  proposal.creationBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":1824:1833  isMinting */\n      dup2\n        /* \"transc.sol\":1803:1811  proposal */\n      dup2\n        /* \"transc.sol\":1803:1821  proposal.isMinting */\n      0x08\n      add\n      0x00\n        /* \"transc.sol\":1803:1833  proposal.isMinting = isMinting */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":1885:1907  executionDelayInBlocks */\n      sload(0x09)\n        /* \"transc.sol\":1870:1882  block.number */\n      number\n        /* \"transc.sol\":1870:1907  block.number + executionDelayInBlocks */\n      tag_191\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_191:\n        /* \"transc.sol\":1844:1852  proposal */\n      dup2\n        /* \"transc.sol\":1844:1867  proposal.executionBlock */\n      0x07\n      add\n        /* \"transc.sol\":1844:1907  proposal.executionBlock = block.number + executionDelayInBlocks */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":1948:2017  ProposalCreated(proposalCount, msg.sender, target, amount, isMinting) */\n      0xbca082239c403ccd62fa76215509fa481657bc5adf238019415351e5edb6d05d\n        /* \"transc.sol\":1964:1977  proposalCount */\n      sload(0x06)\n        /* \"transc.sol\":1979:1989  msg.sender */\n      caller\n        /* \"transc.sol\":1991:1997  target */\n      dup7\n        /* \"transc.sol\":1999:2005  amount */\n      dup7\n        /* \"transc.sol\":2007:2016  isMinting */\n      dup7\n        /* \"transc.sol\":1948:2017  ProposalCreated(proposalCount, msg.sender, target, amount, isMinting) */\n      mload(0x40)\n      tag_192\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"transc.sol\":1378:2025  {... */\n      pop\n        /* \"transc.sol\":1299:2025  function createProposal(address target, uint256 amount, bool isMinting) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"transc.sol\":4035:4242  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_85:\n        /* \"transc.sol\":4113:4117  bool */\n      0x00\n        /* \"transc.sol\":4139:4149  isVoting() */\n      tag_195\n        /* \"transc.sol\":4139:4147  isVoting */\n      tag_51\n        /* \"transc.sol\":4139:4149  isVoting() */\n      jump\t// in\n    tag_195:\n        /* \"transc.sol\":4138:4149  !isVoting() */\n      iszero\n        /* \"transc.sol\":4130:4183  require(!isVoting(), \"Cannot transfer during voting\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"transc.sol\":4201:4234  super.transfer(recipient, amount) */\n      tag_199\n        /* \"transc.sol\":4216:4225  recipient */\n      dup4\n        /* \"transc.sol\":4227:4233  amount */\n      dup4\n        /* \"transc.sol\":4201:4215  super.transfer */\n      tag_200\n        /* \"transc.sol\":4201:4234  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_199:\n        /* \"transc.sol\":4194:4234  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"transc.sol\":4035:4242  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"transc.sol\":844:876  uint256 public requiredVotes = 1 */\n    tag_88:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"transc.sol\":2033:2744  function vote(uint256 proposalId, bool support) public {... */\n    tag_93:\n        /* \"transc.sol\":2099:2124  Proposal storage proposal */\n      0x00\n        /* \"transc.sol\":2127:2136  proposals */\n      0x07\n        /* \"transc.sol\":2127:2148  proposals[proposalId] */\n      0x00\n        /* \"transc.sol\":2137:2147  proposalId */\n      dup5\n        /* \"transc.sol\":2127:2148  proposals[proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"transc.sol\":2099:2148  Proposal storage proposal = proposals[proposalId] */\n      swap1\n      pop\n        /* \"transc.sol\":2207:2227  votingPeriodInBlocks */\n      sload(0x08)\n        /* \"transc.sol\":2182:2190  proposal */\n      dup2\n        /* \"transc.sol\":2182:2204  proposal.creationBlock */\n      0x06\n      add\n      sload\n        /* \"transc.sol\":2182:2227  proposal.creationBlock + votingPeriodInBlocks */\n      tag_202\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_202:\n        /* \"transc.sol\":2167:2179  block.number */\n      number\n        /* \"transc.sol\":2167:2227  block.number < proposal.creationBlock + votingPeriodInBlocks */\n      lt\n        /* \"transc.sol\":2159:2255  require(block.number < proposal.creationBlock + votingPeriodInBlocks, \"Voting period has ended\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"transc.sol\":2298:2299  0 */\n      0x00\n        /* \"transc.sol\":2274:2295  balanceOf(msg.sender) */\n      tag_206\n        /* \"transc.sol\":2284:2294  msg.sender */\n      caller\n        /* \"transc.sol\":2274:2283  balanceOf */\n      tag_68\n        /* \"transc.sol\":2274:2295  balanceOf(msg.sender) */\n      jump\t// in\n    tag_206:\n        /* \"transc.sol\":2274:2299  balanceOf(msg.sender) > 0 */\n      gt\n        /* \"transc.sol\":2266:2321  require(balanceOf(msg.sender) > 0, \"No tokens to vote\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"transc.sol\":2341:2349  proposal */\n      dup1\n        /* \"transc.sol\":2341:2356  proposal.voters */\n      0x09\n      add\n        /* \"transc.sol\":2341:2368  proposal.voters[msg.sender] */\n      0x00\n        /* \"transc.sol\":2357:2367  msg.sender */\n      caller\n        /* \"transc.sol\":2341:2368  proposal.voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"transc.sol\":2340:2368  !proposal.voters[msg.sender] */\n      iszero\n        /* \"transc.sol\":2332:2386  require(!proposal.voters[msg.sender], \"Already voted\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"transc.sol\":2399:2419  uint256 voterBalance */\n      0x00\n        /* \"transc.sol\":2422:2443  balanceOf(msg.sender) */\n      tag_213\n        /* \"transc.sol\":2432:2442  msg.sender */\n      caller\n        /* \"transc.sol\":2422:2431  balanceOf */\n      tag_68\n        /* \"transc.sol\":2422:2443  balanceOf(msg.sender) */\n      jump\t// in\n    tag_213:\n        /* \"transc.sol\":2399:2443  uint256 voterBalance = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"transc.sol\":2454:2471  uint256 votePower */\n      0x00\n        /* \"transc.sol\":2474:2486  voterBalance */\n      dup2\n        /* \"transc.sol\":2454:2486  uint256 votePower = voterBalance */\n      swap1\n      pop\n        /* \"transc.sol\":2503:2510  support */\n      dup4\n        /* \"transc.sol\":2499:2636  if (support) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"transc.sol\":2548:2557  votePower */\n      dup1\n        /* \"transc.sol\":2527:2535  proposal */\n      dup4\n        /* \"transc.sol\":2527:2544  proposal.votesFor */\n      0x04\n      add\n      0x00\n        /* \"transc.sol\":2527:2557  proposal.votesFor += votePower */\n      dup3\n      dup3\n      sload\n      tag_215\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_215:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":2499:2636  if (support) {... */\n      jump(tag_216)\n    tag_214:\n        /* \"transc.sol\":2615:2624  votePower */\n      dup1\n        /* \"transc.sol\":2590:2598  proposal */\n      dup4\n        /* \"transc.sol\":2590:2611  proposal.votesAgainst */\n      0x05\n      add\n      0x00\n        /* \"transc.sol\":2590:2624  proposal.votesAgainst += votePower */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":2499:2636  if (support) {... */\n    tag_216:\n        /* \"transc.sol\":2676:2680  true */\n      0x01\n        /* \"transc.sol\":2646:2654  proposal */\n      dup4\n        /* \"transc.sol\":2646:2661  proposal.voters */\n      0x09\n      add\n        /* \"transc.sol\":2646:2673  proposal.voters[msg.sender] */\n      0x00\n        /* \"transc.sol\":2662:2672  msg.sender */\n      caller\n        /* \"transc.sol\":2646:2673  proposal.voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"transc.sol\":2646:2680  proposal.voters[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"transc.sol\":2698:2736  Voted(proposalId, msg.sender, support) */\n      0xf2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f\n        /* \"transc.sol\":2704:2714  proposalId */\n      dup6\n        /* \"transc.sol\":2716:2726  msg.sender */\n      caller\n        /* \"transc.sol\":2728:2735  support */\n      dup7\n        /* \"transc.sol\":2698:2736  Voted(proposalId, msg.sender, support) */\n      mload(0x40)\n      tag_218\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"transc.sol\":2088:2744  {... */\n      pop\n      pop\n      pop\n        /* \"transc.sol\":2033:2744  function vote(uint256 proposalId, bool support) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"transc.sol\":583:611  uint256 public proposalCount */\n    tag_95:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"transc.sol\":755:798  uint256 public executionDelayInBlocks = 300 */\n    tag_103:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_272:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_273)\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_277)\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_280:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_282:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_283:\n        /* \"#utility.yul\":490:514   */\n      tag_333\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_282\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_334:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_284:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_336\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_283\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_29:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_339\n      tag_280\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":766:885   */\n    tag_338:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_340\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_284\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_285:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_286:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_343\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_285\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_287:\n        /* \"#utility.yul\":1346:1370   */\n      tag_345\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_286\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1501   */\n    tag_288:\n        /* \"#utility.yul\":1470:1494   */\n      tag_347\n        /* \"#utility.yul\":1488:1493   */\n      dup2\n        /* \"#utility.yul\":1470:1494   */\n      tag_282\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1465:1468   */\n      dup3\n        /* \"#utility.yul\":1458:1495   */\n      mstore\n        /* \"#utility.yul\":1383:1501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1507:1597   */\n    tag_289:\n        /* \"#utility.yul\":1541:1548   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1577:1590   */\n      iszero\n        /* \"#utility.yul\":1570:1591   */\n      iszero\n        /* \"#utility.yul\":1559:1591   */\n      swap1\n      pop\n        /* \"#utility.yul\":1507:1597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1712   */\n    tag_290:\n        /* \"#utility.yul\":1684:1705   */\n      tag_350\n        /* \"#utility.yul\":1699:1704   */\n      dup2\n        /* \"#utility.yul\":1684:1705   */\n      tag_289\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1679:1682   */\n      dup3\n        /* \"#utility.yul\":1672:1706   */\n      mstore\n        /* \"#utility.yul\":1603:1712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:2802   */\n    tag_32:\n        /* \"#utility.yul\":2023:2027   */\n      0x00\n        /* \"#utility.yul\":2061:2064   */\n      0x0120\n        /* \"#utility.yul\":2050:2059   */\n      dup3\n        /* \"#utility.yul\":2046:2065   */\n      add\n        /* \"#utility.yul\":2038:2065   */\n      swap1\n      pop\n        /* \"#utility.yul\":2075:2146   */\n      tag_352\n        /* \"#utility.yul\":2143:2144   */\n      0x00\n        /* \"#utility.yul\":2132:2141   */\n      dup4\n        /* \"#utility.yul\":2128:2145   */\n      add\n        /* \"#utility.yul\":2119:2125   */\n      dup13\n        /* \"#utility.yul\":2075:2146   */\n      tag_287\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2156:2228   */\n      tag_353\n        /* \"#utility.yul\":2224:2226   */\n      0x20\n        /* \"#utility.yul\":2213:2222   */\n      dup4\n        /* \"#utility.yul\":2209:2227   */\n      add\n        /* \"#utility.yul\":2200:2206   */\n      dup12\n        /* \"#utility.yul\":2156:2228   */\n      tag_287\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2238:2310   */\n      tag_354\n        /* \"#utility.yul\":2306:2308   */\n      0x40\n        /* \"#utility.yul\":2295:2304   */\n      dup4\n        /* \"#utility.yul\":2291:2309   */\n      add\n        /* \"#utility.yul\":2282:2288   */\n      dup11\n        /* \"#utility.yul\":2238:2310   */\n      tag_288\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2320:2386   */\n      tag_355\n        /* \"#utility.yul\":2382:2384   */\n      0x60\n        /* \"#utility.yul\":2371:2380   */\n      dup4\n        /* \"#utility.yul\":2367:2385   */\n      add\n        /* \"#utility.yul\":2358:2364   */\n      dup10\n        /* \"#utility.yul\":2320:2386   */\n      tag_290\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2396:2469   */\n      tag_356\n        /* \"#utility.yul\":2464:2467   */\n      0x80\n        /* \"#utility.yul\":2453:2462   */\n      dup4\n        /* \"#utility.yul\":2449:2468   */\n      add\n        /* \"#utility.yul\":2440:2446   */\n      dup9\n        /* \"#utility.yul\":2396:2469   */\n      tag_288\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2479:2552   */\n      tag_357\n        /* \"#utility.yul\":2547:2550   */\n      0xa0\n        /* \"#utility.yul\":2536:2545   */\n      dup4\n        /* \"#utility.yul\":2532:2551   */\n      add\n        /* \"#utility.yul\":2523:2529   */\n      dup8\n        /* \"#utility.yul\":2479:2552   */\n      tag_288\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2562:2635   */\n      tag_358\n        /* \"#utility.yul\":2630:2633   */\n      0xc0\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2634   */\n      add\n        /* \"#utility.yul\":2606:2612   */\n      dup7\n        /* \"#utility.yul\":2562:2635   */\n      tag_288\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2645:2718   */\n      tag_359\n        /* \"#utility.yul\":2713:2716   */\n      0xe0\n        /* \"#utility.yul\":2702:2711   */\n      dup4\n        /* \"#utility.yul\":2698:2717   */\n      add\n        /* \"#utility.yul\":2689:2695   */\n      dup6\n        /* \"#utility.yul\":2645:2718   */\n      tag_288\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2728:2795   */\n      tag_360\n        /* \"#utility.yul\":2790:2793   */\n      0x0100\n        /* \"#utility.yul\":2779:2788   */\n      dup4\n        /* \"#utility.yul\":2775:2794   */\n      add\n        /* \"#utility.yul\":2766:2772   */\n      dup5\n        /* \"#utility.yul\":2728:2795   */\n      tag_290\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1718:2802   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2808:2907   */\n    tag_291:\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2894:2899   */\n      dup2\n        /* \"#utility.yul\":2888:2900   */\n      mload\n        /* \"#utility.yul\":2878:2900   */\n      swap1\n      pop\n        /* \"#utility.yul\":2808:2907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2913:3082   */\n    tag_292:\n        /* \"#utility.yul\":2997:3008   */\n      0x00\n        /* \"#utility.yul\":3031:3037   */\n      dup3\n        /* \"#utility.yul\":3026:3029   */\n      dup3\n        /* \"#utility.yul\":3019:3038   */\n      mstore\n        /* \"#utility.yul\":3071:3075   */\n      0x20\n        /* \"#utility.yul\":3066:3069   */\n      dup3\n        /* \"#utility.yul\":3062:3076   */\n      add\n        /* \"#utility.yul\":3047:3076   */\n      swap1\n      pop\n        /* \"#utility.yul\":2913:3082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3088:3336   */\n    tag_293:\n        /* \"#utility.yul\":3170:3171   */\n      0x00\n        /* \"#utility.yul\":3180:3293   */\n    tag_364:\n        /* \"#utility.yul\":3194:3200   */\n      dup4\n        /* \"#utility.yul\":3191:3192   */\n      dup2\n        /* \"#utility.yul\":3188:3201   */\n      lt\n        /* \"#utility.yul\":3180:3293   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3279:3280   */\n      dup1\n        /* \"#utility.yul\":3274:3277   */\n      dup3\n        /* \"#utility.yul\":3270:3281   */\n      add\n        /* \"#utility.yul\":3264:3282   */\n      mload\n        /* \"#utility.yul\":3260:3261   */\n      dup2\n        /* \"#utility.yul\":3255:3258   */\n      dup5\n        /* \"#utility.yul\":3251:3262   */\n      add\n        /* \"#utility.yul\":3244:3283   */\n      mstore\n        /* \"#utility.yul\":3216:3218   */\n      0x20\n        /* \"#utility.yul\":3213:3214   */\n      dup2\n        /* \"#utility.yul\":3209:3219   */\n      add\n        /* \"#utility.yul\":3204:3219   */\n      swap1\n      pop\n        /* \"#utility.yul\":3180:3293   */\n      jump(tag_364)\n    tag_366:\n        /* \"#utility.yul\":3327:3328   */\n      0x00\n        /* \"#utility.yul\":3318:3324   */\n      dup5\n        /* \"#utility.yul\":3313:3316   */\n      dup5\n        /* \"#utility.yul\":3309:3325   */\n      add\n        /* \"#utility.yul\":3302:3329   */\n      mstore\n        /* \"#utility.yul\":3150:3336   */\n      pop\n        /* \"#utility.yul\":3088:3336   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3342:3444   */\n    tag_294:\n        /* \"#utility.yul\":3383:3389   */\n      0x00\n        /* \"#utility.yul\":3434:3436   */\n      0x1f\n        /* \"#utility.yul\":3430:3437   */\n      not\n        /* \"#utility.yul\":3425:3427   */\n      0x1f\n        /* \"#utility.yul\":3418:3423   */\n      dup4\n        /* \"#utility.yul\":3414:3428   */\n      add\n        /* \"#utility.yul\":3410:3438   */\n      and\n        /* \"#utility.yul\":3400:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3342:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3827   */\n    tag_295:\n        /* \"#utility.yul\":3538:3541   */\n      0x00\n        /* \"#utility.yul\":3566:3605   */\n      tag_369\n        /* \"#utility.yul\":3599:3604   */\n      dup3\n        /* \"#utility.yul\":3566:3605   */\n      tag_291\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3621:3692   */\n      tag_370\n        /* \"#utility.yul\":3685:3691   */\n      dup2\n        /* \"#utility.yul\":3680:3683   */\n      dup6\n        /* \"#utility.yul\":3621:3692   */\n      tag_292\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3614:3692   */\n      swap4\n      pop\n        /* \"#utility.yul\":3701:3766   */\n      tag_371\n        /* \"#utility.yul\":3759:3765   */\n      dup2\n        /* \"#utility.yul\":3754:3757   */\n      dup6\n        /* \"#utility.yul\":3747:3751   */\n      0x20\n        /* \"#utility.yul\":3740:3745   */\n      dup7\n        /* \"#utility.yul\":3736:3752   */\n      add\n        /* \"#utility.yul\":3701:3766   */\n      tag_293\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3791:3820   */\n      tag_372\n        /* \"#utility.yul\":3813:3819   */\n      dup2\n        /* \"#utility.yul\":3791:3820   */\n      tag_294\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3786:3789   */\n      dup5\n        /* \"#utility.yul\":3782:3821   */\n      add\n        /* \"#utility.yul\":3775:3821   */\n      swap2\n      pop\n        /* \"#utility.yul\":3542:3827   */\n      pop\n        /* \"#utility.yul\":3450:3827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:4146   */\n    tag_36:\n        /* \"#utility.yul\":3946:3950   */\n      0x00\n        /* \"#utility.yul\":3984:3986   */\n      0x20\n        /* \"#utility.yul\":3973:3982   */\n      dup3\n        /* \"#utility.yul\":3969:3987   */\n      add\n        /* \"#utility.yul\":3961:3987   */\n      swap1\n      pop\n        /* \"#utility.yul\":4033:4042   */\n      dup2\n        /* \"#utility.yul\":4027:4031   */\n      dup2\n        /* \"#utility.yul\":4023:4043   */\n      sub\n        /* \"#utility.yul\":4019:4020   */\n      0x00\n        /* \"#utility.yul\":4008:4017   */\n      dup4\n        /* \"#utility.yul\":4004:4021   */\n      add\n        /* \"#utility.yul\":3997:4044   */\n      mstore\n        /* \"#utility.yul\":4061:4139   */\n      tag_374\n        /* \"#utility.yul\":4134:4138   */\n      dup2\n        /* \"#utility.yul\":4125:4131   */\n      dup5\n        /* \"#utility.yul\":4061:4139   */\n      tag_295\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4053:4139   */\n      swap1\n      pop\n        /* \"#utility.yul\":3833:4146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4274   */\n    tag_296:\n        /* \"#utility.yul\":4225:4249   */\n      tag_376\n        /* \"#utility.yul\":4243:4248   */\n      dup2\n        /* \"#utility.yul\":4225:4249   */\n      tag_286\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4218:4223   */\n      dup2\n        /* \"#utility.yul\":4215:4250   */\n      eq\n        /* \"#utility.yul\":4205:4268   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":4264:4265   */\n      0x00\n        /* \"#utility.yul\":4261:4262   */\n      dup1\n        /* \"#utility.yul\":4254:4266   */\n      revert\n        /* \"#utility.yul\":4205:4268   */\n    tag_377:\n        /* \"#utility.yul\":4152:4274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4280:4419   */\n    tag_297:\n        /* \"#utility.yul\":4326:4331   */\n      0x00\n        /* \"#utility.yul\":4364:4370   */\n      dup2\n        /* \"#utility.yul\":4351:4371   */\n      calldataload\n        /* \"#utility.yul\":4342:4371   */\n      swap1\n      pop\n        /* \"#utility.yul\":4380:4413   */\n      tag_379\n        /* \"#utility.yul\":4407:4412   */\n      dup2\n        /* \"#utility.yul\":4380:4413   */\n      tag_296\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4280:4419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4425:4899   */\n    tag_39:\n        /* \"#utility.yul\":4493:4499   */\n      0x00\n        /* \"#utility.yul\":4501:4507   */\n      dup1\n        /* \"#utility.yul\":4550:4552   */\n      0x40\n        /* \"#utility.yul\":4538:4547   */\n      dup4\n        /* \"#utility.yul\":4529:4536   */\n      dup6\n        /* \"#utility.yul\":4525:4548   */\n      sub\n        /* \"#utility.yul\":4521:4553   */\n      slt\n        /* \"#utility.yul\":4518:4637   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":4556:4635   */\n      tag_382\n      tag_280\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4518:4637   */\n    tag_381:\n        /* \"#utility.yul\":4676:4677   */\n      0x00\n        /* \"#utility.yul\":4701:4754   */\n      tag_383\n        /* \"#utility.yul\":4746:4753   */\n      dup6\n        /* \"#utility.yul\":4737:4743   */\n      dup3\n        /* \"#utility.yul\":4726:4735   */\n      dup7\n        /* \"#utility.yul\":4722:4744   */\n      add\n        /* \"#utility.yul\":4701:4754   */\n      tag_297\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4691:4754   */\n      swap3\n      pop\n        /* \"#utility.yul\":4647:4764   */\n      pop\n        /* \"#utility.yul\":4803:4805   */\n      0x20\n        /* \"#utility.yul\":4829:4882   */\n      tag_384\n        /* \"#utility.yul\":4874:4881   */\n      dup6\n        /* \"#utility.yul\":4865:4871   */\n      dup3\n        /* \"#utility.yul\":4854:4863   */\n      dup7\n        /* \"#utility.yul\":4850:4872   */\n      add\n        /* \"#utility.yul\":4829:4882   */\n      tag_284\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4819:4882   */\n      swap2\n      pop\n        /* \"#utility.yul\":4774:4892   */\n      pop\n        /* \"#utility.yul\":4425:4899   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4905:5115   */\n    tag_42:\n        /* \"#utility.yul\":4992:4996   */\n      0x00\n        /* \"#utility.yul\":5030:5032   */\n      0x20\n        /* \"#utility.yul\":5019:5028   */\n      dup3\n        /* \"#utility.yul\":5015:5033   */\n      add\n        /* \"#utility.yul\":5007:5033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5043:5108   */\n      tag_386\n        /* \"#utility.yul\":5105:5106   */\n      0x00\n        /* \"#utility.yul\":5094:5103   */\n      dup4\n        /* \"#utility.yul\":5090:5107   */\n      add\n        /* \"#utility.yul\":5081:5087   */\n      dup5\n        /* \"#utility.yul\":5043:5108   */\n      tag_290\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4905:5115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5121:5343   */\n    tag_49:\n        /* \"#utility.yul\":5214:5218   */\n      0x00\n        /* \"#utility.yul\":5252:5254   */\n      0x20\n        /* \"#utility.yul\":5241:5250   */\n      dup3\n        /* \"#utility.yul\":5237:5255   */\n      add\n        /* \"#utility.yul\":5229:5255   */\n      swap1\n      pop\n        /* \"#utility.yul\":5265:5336   */\n      tag_388\n        /* \"#utility.yul\":5333:5334   */\n      0x00\n        /* \"#utility.yul\":5322:5331   */\n      dup4\n        /* \"#utility.yul\":5318:5335   */\n      add\n        /* \"#utility.yul\":5309:5315   */\n      dup5\n        /* \"#utility.yul\":5265:5336   */\n      tag_288\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5121:5343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5349:5968   */\n    tag_55:\n        /* \"#utility.yul\":5426:5432   */\n      0x00\n        /* \"#utility.yul\":5434:5440   */\n      dup1\n        /* \"#utility.yul\":5442:5448   */\n      0x00\n        /* \"#utility.yul\":5491:5493   */\n      0x60\n        /* \"#utility.yul\":5479:5488   */\n      dup5\n        /* \"#utility.yul\":5470:5477   */\n      dup7\n        /* \"#utility.yul\":5466:5489   */\n      sub\n        /* \"#utility.yul\":5462:5494   */\n      slt\n        /* \"#utility.yul\":5459:5578   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":5497:5576   */\n      tag_391\n      tag_280\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5459:5578   */\n    tag_390:\n        /* \"#utility.yul\":5617:5618   */\n      0x00\n        /* \"#utility.yul\":5642:5695   */\n      tag_392\n        /* \"#utility.yul\":5687:5694   */\n      dup7\n        /* \"#utility.yul\":5678:5684   */\n      dup3\n        /* \"#utility.yul\":5667:5676   */\n      dup8\n        /* \"#utility.yul\":5663:5685   */\n      add\n        /* \"#utility.yul\":5642:5695   */\n      tag_297\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5632:5695   */\n      swap4\n      pop\n        /* \"#utility.yul\":5588:5705   */\n      pop\n        /* \"#utility.yul\":5744:5746   */\n      0x20\n        /* \"#utility.yul\":5770:5823   */\n      tag_393\n        /* \"#utility.yul\":5815:5822   */\n      dup7\n        /* \"#utility.yul\":5806:5812   */\n      dup3\n        /* \"#utility.yul\":5795:5804   */\n      dup8\n        /* \"#utility.yul\":5791:5813   */\n      add\n        /* \"#utility.yul\":5770:5823   */\n      tag_297\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5760:5823   */\n      swap3\n      pop\n        /* \"#utility.yul\":5715:5833   */\n      pop\n        /* \"#utility.yul\":5872:5874   */\n      0x40\n        /* \"#utility.yul\":5898:5951   */\n      tag_394\n        /* \"#utility.yul\":5943:5950   */\n      dup7\n        /* \"#utility.yul\":5934:5940   */\n      dup3\n        /* \"#utility.yul\":5923:5932   */\n      dup8\n        /* \"#utility.yul\":5919:5941   */\n      add\n        /* \"#utility.yul\":5898:5951   */\n      tag_284\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5888:5951   */\n      swap2\n      pop\n        /* \"#utility.yul\":5843:5961   */\n      pop\n        /* \"#utility.yul\":5349:5968   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5974:6060   */\n    tag_298:\n        /* \"#utility.yul\":6009:6016   */\n      0x00\n        /* \"#utility.yul\":6049:6053   */\n      0xff\n        /* \"#utility.yul\":6042:6047   */\n      dup3\n        /* \"#utility.yul\":6038:6054   */\n      and\n        /* \"#utility.yul\":6027:6054   */\n      swap1\n      pop\n        /* \"#utility.yul\":5974:6060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6066:6178   */\n    tag_299:\n        /* \"#utility.yul\":6149:6171   */\n      tag_397\n        /* \"#utility.yul\":6165:6170   */\n      dup2\n        /* \"#utility.yul\":6149:6171   */\n      tag_298\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6144:6147   */\n      dup3\n        /* \"#utility.yul\":6137:6172   */\n      mstore\n        /* \"#utility.yul\":6066:6178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6184:6398   */\n    tag_64:\n        /* \"#utility.yul\":6273:6277   */\n      0x00\n        /* \"#utility.yul\":6311:6313   */\n      0x20\n        /* \"#utility.yul\":6300:6309   */\n      dup3\n        /* \"#utility.yul\":6296:6314   */\n      add\n        /* \"#utility.yul\":6288:6314   */\n      swap1\n      pop\n        /* \"#utility.yul\":6324:6391   */\n      tag_399\n        /* \"#utility.yul\":6388:6389   */\n      0x00\n        /* \"#utility.yul\":6377:6386   */\n      dup4\n        /* \"#utility.yul\":6373:6390   */\n      add\n        /* \"#utility.yul\":6364:6370   */\n      dup5\n        /* \"#utility.yul\":6324:6391   */\n      tag_299\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6184:6398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6404:6733   */\n    tag_67:\n        /* \"#utility.yul\":6463:6469   */\n      0x00\n        /* \"#utility.yul\":6512:6514   */\n      0x20\n        /* \"#utility.yul\":6500:6509   */\n      dup3\n        /* \"#utility.yul\":6491:6498   */\n      dup5\n        /* \"#utility.yul\":6487:6510   */\n      sub\n        /* \"#utility.yul\":6483:6515   */\n      slt\n        /* \"#utility.yul\":6480:6599   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":6518:6597   */\n      tag_402\n      tag_280\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":6480:6599   */\n    tag_401:\n        /* \"#utility.yul\":6638:6639   */\n      0x00\n        /* \"#utility.yul\":6663:6716   */\n      tag_403\n        /* \"#utility.yul\":6708:6715   */\n      dup5\n        /* \"#utility.yul\":6699:6705   */\n      dup3\n        /* \"#utility.yul\":6688:6697   */\n      dup6\n        /* \"#utility.yul\":6684:6706   */\n      add\n        /* \"#utility.yul\":6663:6716   */\n      tag_297\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6653:6716   */\n      swap2\n      pop\n        /* \"#utility.yul\":6609:6726   */\n      pop\n        /* \"#utility.yul\":6404:6733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6739:6961   */\n    tag_75:\n        /* \"#utility.yul\":6832:6836   */\n      0x00\n        /* \"#utility.yul\":6870:6872   */\n      0x20\n        /* \"#utility.yul\":6859:6868   */\n      dup3\n        /* \"#utility.yul\":6855:6873   */\n      add\n        /* \"#utility.yul\":6847:6873   */\n      swap1\n      pop\n        /* \"#utility.yul\":6883:6954   */\n      tag_405\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6927:6933   */\n      dup5\n        /* \"#utility.yul\":6883:6954   */\n      tag_287\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6739:6961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6967:7083   */\n    tag_300:\n        /* \"#utility.yul\":7037:7058   */\n      tag_407\n        /* \"#utility.yul\":7052:7057   */\n      dup2\n        /* \"#utility.yul\":7037:7058   */\n      tag_289\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7030:7035   */\n      dup2\n        /* \"#utility.yul\":7027:7059   */\n      eq\n        /* \"#utility.yul\":7017:7077   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7073:7074   */\n      0x00\n        /* \"#utility.yul\":7070:7071   */\n      dup1\n        /* \"#utility.yul\":7063:7075   */\n      revert\n        /* \"#utility.yul\":7017:7077   */\n    tag_408:\n        /* \"#utility.yul\":6967:7083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7222   */\n    tag_301:\n        /* \"#utility.yul\":7132:7137   */\n      0x00\n        /* \"#utility.yul\":7170:7176   */\n      dup2\n        /* \"#utility.yul\":7157:7177   */\n      calldataload\n        /* \"#utility.yul\":7148:7177   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7216   */\n      tag_410\n        /* \"#utility.yul\":7210:7215   */\n      dup2\n        /* \"#utility.yul\":7186:7216   */\n      tag_300\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7089:7222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7228:7841   */\n    tag_81:\n        /* \"#utility.yul\":7302:7308   */\n      0x00\n        /* \"#utility.yul\":7310:7316   */\n      dup1\n        /* \"#utility.yul\":7318:7324   */\n      0x00\n        /* \"#utility.yul\":7367:7369   */\n      0x60\n        /* \"#utility.yul\":7355:7364   */\n      dup5\n        /* \"#utility.yul\":7346:7353   */\n      dup7\n        /* \"#utility.yul\":7342:7365   */\n      sub\n        /* \"#utility.yul\":7338:7370   */\n      slt\n        /* \"#utility.yul\":7335:7454   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":7373:7452   */\n      tag_413\n      tag_280\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7335:7454   */\n    tag_412:\n        /* \"#utility.yul\":7493:7494   */\n      0x00\n        /* \"#utility.yul\":7518:7571   */\n      tag_414\n        /* \"#utility.yul\":7563:7570   */\n      dup7\n        /* \"#utility.yul\":7554:7560   */\n      dup3\n        /* \"#utility.yul\":7543:7552   */\n      dup8\n        /* \"#utility.yul\":7539:7561   */\n      add\n        /* \"#utility.yul\":7518:7571   */\n      tag_297\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7508:7571   */\n      swap4\n      pop\n        /* \"#utility.yul\":7464:7581   */\n      pop\n        /* \"#utility.yul\":7620:7622   */\n      0x20\n        /* \"#utility.yul\":7646:7699   */\n      tag_415\n        /* \"#utility.yul\":7691:7698   */\n      dup7\n        /* \"#utility.yul\":7682:7688   */\n      dup3\n        /* \"#utility.yul\":7671:7680   */\n      dup8\n        /* \"#utility.yul\":7667:7689   */\n      add\n        /* \"#utility.yul\":7646:7699   */\n      tag_284\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7636:7699   */\n      swap3\n      pop\n        /* \"#utility.yul\":7591:7709   */\n      pop\n        /* \"#utility.yul\":7748:7750   */\n      0x40\n        /* \"#utility.yul\":7774:7824   */\n      tag_416\n        /* \"#utility.yul\":7816:7823   */\n      dup7\n        /* \"#utility.yul\":7807:7813   */\n      dup3\n        /* \"#utility.yul\":7796:7805   */\n      dup8\n        /* \"#utility.yul\":7792:7814   */\n      add\n        /* \"#utility.yul\":7774:7824   */\n      tag_301\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7764:7824   */\n      swap2\n      pop\n        /* \"#utility.yul\":7719:7834   */\n      pop\n        /* \"#utility.yul\":7228:7841   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7847:8315   */\n    tag_92:\n        /* \"#utility.yul\":7912:7918   */\n      0x00\n        /* \"#utility.yul\":7920:7926   */\n      dup1\n        /* \"#utility.yul\":7969:7971   */\n      0x40\n        /* \"#utility.yul\":7957:7966   */\n      dup4\n        /* \"#utility.yul\":7948:7955   */\n      dup6\n        /* \"#utility.yul\":7944:7967   */\n      sub\n        /* \"#utility.yul\":7940:7972   */\n      slt\n        /* \"#utility.yul\":7937:8056   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7975:8054   */\n      tag_419\n      tag_280\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7937:8056   */\n    tag_418:\n        /* \"#utility.yul\":8095:8096   */\n      0x00\n        /* \"#utility.yul\":8120:8173   */\n      tag_420\n        /* \"#utility.yul\":8165:8172   */\n      dup6\n        /* \"#utility.yul\":8156:8162   */\n      dup3\n        /* \"#utility.yul\":8145:8154   */\n      dup7\n        /* \"#utility.yul\":8141:8163   */\n      add\n        /* \"#utility.yul\":8120:8173   */\n      tag_284\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8110:8173   */\n      swap3\n      pop\n        /* \"#utility.yul\":8066:8183   */\n      pop\n        /* \"#utility.yul\":8222:8224   */\n      0x20\n        /* \"#utility.yul\":8248:8298   */\n      tag_421\n        /* \"#utility.yul\":8290:8297   */\n      dup6\n        /* \"#utility.yul\":8281:8287   */\n      dup3\n        /* \"#utility.yul\":8270:8279   */\n      dup7\n        /* \"#utility.yul\":8266:8288   */\n      add\n        /* \"#utility.yul\":8248:8298   */\n      tag_301\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8238:8298   */\n      swap2\n      pop\n        /* \"#utility.yul\":8193:8308   */\n      pop\n        /* \"#utility.yul\":7847:8315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8795   */\n    tag_99:\n        /* \"#utility.yul\":8389:8395   */\n      0x00\n        /* \"#utility.yul\":8397:8403   */\n      dup1\n        /* \"#utility.yul\":8446:8448   */\n      0x40\n        /* \"#utility.yul\":8434:8443   */\n      dup4\n        /* \"#utility.yul\":8425:8432   */\n      dup6\n        /* \"#utility.yul\":8421:8444   */\n      sub\n        /* \"#utility.yul\":8417:8449   */\n      slt\n        /* \"#utility.yul\":8414:8533   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":8452:8531   */\n      tag_424\n      tag_280\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8414:8533   */\n    tag_423:\n        /* \"#utility.yul\":8572:8573   */\n      0x00\n        /* \"#utility.yul\":8597:8650   */\n      tag_425\n        /* \"#utility.yul\":8642:8649   */\n      dup6\n        /* \"#utility.yul\":8633:8639   */\n      dup3\n        /* \"#utility.yul\":8622:8631   */\n      dup7\n        /* \"#utility.yul\":8618:8640   */\n      add\n        /* \"#utility.yul\":8597:8650   */\n      tag_297\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8587:8650   */\n      swap3\n      pop\n        /* \"#utility.yul\":8543:8660   */\n      pop\n        /* \"#utility.yul\":8699:8701   */\n      0x20\n        /* \"#utility.yul\":8725:8778   */\n      tag_426\n        /* \"#utility.yul\":8770:8777   */\n      dup6\n        /* \"#utility.yul\":8761:8767   */\n      dup3\n        /* \"#utility.yul\":8750:8759   */\n      dup7\n        /* \"#utility.yul\":8746:8768   */\n      add\n        /* \"#utility.yul\":8725:8778   */\n      tag_297\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8715:8778   */\n      swap2\n      pop\n        /* \"#utility.yul\":8670:8788   */\n      pop\n        /* \"#utility.yul\":8321:8795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8801:8981   */\n    tag_302:\n        /* \"#utility.yul\":8849:8926   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8846:8847   */\n      0x00\n        /* \"#utility.yul\":8839:8927   */\n      mstore\n        /* \"#utility.yul\":8946:8950   */\n      0x22\n        /* \"#utility.yul\":8943:8944   */\n      0x04\n        /* \"#utility.yul\":8936:8951   */\n      mstore\n        /* \"#utility.yul\":8970:8974   */\n      0x24\n        /* \"#utility.yul\":8967:8968   */\n      0x00\n        /* \"#utility.yul\":8960:8975   */\n      revert\n        /* \"#utility.yul\":8987:9307   */\n    tag_110:\n        /* \"#utility.yul\":9031:9037   */\n      0x00\n        /* \"#utility.yul\":9068:9069   */\n      0x02\n        /* \"#utility.yul\":9062:9066   */\n      dup3\n        /* \"#utility.yul\":9058:9070   */\n      div\n        /* \"#utility.yul\":9048:9070   */\n      swap1\n      pop\n        /* \"#utility.yul\":9115:9116   */\n      0x01\n        /* \"#utility.yul\":9109:9113   */\n      dup3\n        /* \"#utility.yul\":9105:9117   */\n      and\n        /* \"#utility.yul\":9136:9154   */\n      dup1\n        /* \"#utility.yul\":9126:9207   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9192:9196   */\n      0x7f\n        /* \"#utility.yul\":9184:9190   */\n      dup3\n        /* \"#utility.yul\":9180:9197   */\n      and\n        /* \"#utility.yul\":9170:9197   */\n      swap2\n      pop\n        /* \"#utility.yul\":9126:9207   */\n    tag_429:\n        /* \"#utility.yul\":9254:9256   */\n      0x20\n        /* \"#utility.yul\":9246:9252   */\n      dup3\n        /* \"#utility.yul\":9243:9257   */\n      lt\n        /* \"#utility.yul\":9223:9241   */\n      dup2\n        /* \"#utility.yul\":9220:9258   */\n      sub\n        /* \"#utility.yul\":9217:9301   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":9273:9291   */\n      tag_431\n      tag_302\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9217:9301   */\n    tag_430:\n        /* \"#utility.yul\":9038:9307   */\n      pop\n        /* \"#utility.yul\":8987:9307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9313:9495   */\n    tag_303:\n        /* \"#utility.yul\":9453:9487   */\n      0x457865637574696f6e20706572696f6420686173206e6f742073746172746564\n        /* \"#utility.yul\":9449:9450   */\n      0x00\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9437:9451   */\n      add\n        /* \"#utility.yul\":9430:9488   */\n      mstore\n        /* \"#utility.yul\":9313:9495   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9501:9867   */\n    tag_304:\n        /* \"#utility.yul\":9643:9646   */\n      0x00\n        /* \"#utility.yul\":9664:9731   */\n      tag_434\n        /* \"#utility.yul\":9728:9730   */\n      0x20\n        /* \"#utility.yul\":9723:9726   */\n      dup4\n        /* \"#utility.yul\":9664:9731   */\n      tag_292\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9657:9731   */\n      swap2\n      pop\n        /* \"#utility.yul\":9740:9833   */\n      tag_435\n        /* \"#utility.yul\":9829:9832   */\n      dup3\n        /* \"#utility.yul\":9740:9833   */\n      tag_303\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9858:9860   */\n      0x20\n        /* \"#utility.yul\":9853:9856   */\n      dup3\n        /* \"#utility.yul\":9849:9861   */\n      add\n        /* \"#utility.yul\":9842:9861   */\n      swap1\n      pop\n        /* \"#utility.yul\":9501:9867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9873:10292   */\n    tag_123:\n        /* \"#utility.yul\":10039:10043   */\n      0x00\n        /* \"#utility.yul\":10077:10079   */\n      0x20\n        /* \"#utility.yul\":10066:10075   */\n      dup3\n        /* \"#utility.yul\":10062:10080   */\n      add\n        /* \"#utility.yul\":10054:10080   */\n      swap1\n      pop\n        /* \"#utility.yul\":10126:10135   */\n      dup2\n        /* \"#utility.yul\":10120:10124   */\n      dup2\n        /* \"#utility.yul\":10116:10136   */\n      sub\n        /* \"#utility.yul\":10112:10113   */\n      0x00\n        /* \"#utility.yul\":10101:10110   */\n      dup4\n        /* \"#utility.yul\":10097:10114   */\n      add\n        /* \"#utility.yul\":10090:10137   */\n      mstore\n        /* \"#utility.yul\":10154:10285   */\n      tag_437\n        /* \"#utility.yul\":10280:10284   */\n      dup2\n        /* \"#utility.yul\":10154:10285   */\n      tag_304\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10146:10285   */\n      swap1\n      pop\n        /* \"#utility.yul\":9873:10292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10298:10473   */\n    tag_305:\n        /* \"#utility.yul\":10438:10465   */\n      0x50726f706f73616c20616c726561647920657865637574656400000000000000\n        /* \"#utility.yul\":10434:10435   */\n      0x00\n        /* \"#utility.yul\":10426:10432   */\n      dup3\n        /* \"#utility.yul\":10422:10436   */\n      add\n        /* \"#utility.yul\":10415:10466   */\n      mstore\n        /* \"#utility.yul\":10298:10473   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10479:10845   */\n    tag_306:\n        /* \"#utility.yul\":10621:10624   */\n      0x00\n        /* \"#utility.yul\":10642:10709   */\n      tag_440\n        /* \"#utility.yul\":10706:10708   */\n      0x19\n        /* \"#utility.yul\":10701:10704   */\n      dup4\n        /* \"#utility.yul\":10642:10709   */\n      tag_292\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10635:10709   */\n      swap2\n      pop\n        /* \"#utility.yul\":10718:10811   */\n      tag_441\n        /* \"#utility.yul\":10807:10810   */\n      dup3\n        /* \"#utility.yul\":10718:10811   */\n      tag_305\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10836:10838   */\n      0x20\n        /* \"#utility.yul\":10831:10834   */\n      dup3\n        /* \"#utility.yul\":10827:10839   */\n      add\n        /* \"#utility.yul\":10820:10839   */\n      swap1\n      pop\n        /* \"#utility.yul\":10479:10845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10851:11270   */\n    tag_126:\n        /* \"#utility.yul\":11017:11021   */\n      0x00\n        /* \"#utility.yul\":11055:11057   */\n      0x20\n        /* \"#utility.yul\":11044:11053   */\n      dup3\n        /* \"#utility.yul\":11040:11058   */\n      add\n        /* \"#utility.yul\":11032:11058   */\n      swap1\n      pop\n        /* \"#utility.yul\":11104:11113   */\n      dup2\n        /* \"#utility.yul\":11098:11102   */\n      dup2\n        /* \"#utility.yul\":11094:11114   */\n      sub\n        /* \"#utility.yul\":11090:11091   */\n      0x00\n        /* \"#utility.yul\":11079:11088   */\n      dup4\n        /* \"#utility.yul\":11075:11092   */\n      add\n        /* \"#utility.yul\":11068:11115   */\n      mstore\n        /* \"#utility.yul\":11132:11263   */\n      tag_443\n        /* \"#utility.yul\":11258:11262   */\n      dup2\n        /* \"#utility.yul\":11132:11263   */\n      tag_306\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11124:11263   */\n      swap1\n      pop\n        /* \"#utility.yul\":10851:11270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11276:11456   */\n    tag_307:\n        /* \"#utility.yul\":11324:11401   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11321:11322   */\n      0x00\n        /* \"#utility.yul\":11314:11402   */\n      mstore\n        /* \"#utility.yul\":11421:11425   */\n      0x11\n        /* \"#utility.yul\":11418:11419   */\n      0x04\n        /* \"#utility.yul\":11411:11426   */\n      mstore\n        /* \"#utility.yul\":11445:11449   */\n      0x24\n        /* \"#utility.yul\":11442:11443   */\n      0x00\n        /* \"#utility.yul\":11435:11450   */\n      revert\n        /* \"#utility.yul\":11462:11653   */\n    tag_128:\n        /* \"#utility.yul\":11502:11505   */\n      0x00\n        /* \"#utility.yul\":11521:11541   */\n      tag_446\n        /* \"#utility.yul\":11539:11540   */\n      dup3\n        /* \"#utility.yul\":11521:11541   */\n      tag_282\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11516:11541   */\n      swap2\n      pop\n        /* \"#utility.yul\":11555:11575   */\n      tag_447\n        /* \"#utility.yul\":11573:11574   */\n      dup4\n        /* \"#utility.yul\":11555:11575   */\n      tag_282\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11550:11575   */\n      swap3\n      pop\n        /* \"#utility.yul\":11598:11599   */\n      dup3\n        /* \"#utility.yul\":11595:11596   */\n      dup3\n        /* \"#utility.yul\":11591:11600   */\n      add\n        /* \"#utility.yul\":11584:11600   */\n      swap1\n      pop\n        /* \"#utility.yul\":11619:11622   */\n      dup1\n        /* \"#utility.yul\":11616:11617   */\n      dup3\n        /* \"#utility.yul\":11613:11623   */\n      gt\n        /* \"#utility.yul\":11610:11646   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":11626:11644   */\n      tag_449\n      tag_307\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11610:11646   */\n    tag_448:\n        /* \"#utility.yul\":11462:11653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11659:12069   */\n    tag_130:\n        /* \"#utility.yul\":11699:11706   */\n      0x00\n        /* \"#utility.yul\":11722:11742   */\n      tag_451\n        /* \"#utility.yul\":11740:11741   */\n      dup3\n        /* \"#utility.yul\":11722:11742   */\n      tag_282\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11717:11742   */\n      swap2\n      pop\n        /* \"#utility.yul\":11756:11776   */\n      tag_452\n        /* \"#utility.yul\":11774:11775   */\n      dup4\n        /* \"#utility.yul\":11756:11776   */\n      tag_282\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11751:11776   */\n      swap3\n      pop\n        /* \"#utility.yul\":11811:11812   */\n      dup3\n        /* \"#utility.yul\":11808:11809   */\n      dup3\n        /* \"#utility.yul\":11804:11813   */\n      mul\n        /* \"#utility.yul\":11833:11863   */\n      tag_453\n        /* \"#utility.yul\":11851:11862   */\n      dup2\n        /* \"#utility.yul\":11833:11863   */\n      tag_282\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11822:11863   */\n      swap2\n      pop\n        /* \"#utility.yul\":12012:12013   */\n      dup3\n        /* \"#utility.yul\":12003:12010   */\n      dup3\n        /* \"#utility.yul\":11999:12014   */\n      div\n        /* \"#utility.yul\":11996:11997   */\n      dup5\n        /* \"#utility.yul\":11993:12015   */\n      eq\n        /* \"#utility.yul\":11973:11974   */\n      dup4\n        /* \"#utility.yul\":11966:11975   */\n      iszero\n        /* \"#utility.yul\":11946:12029   */\n      or\n        /* \"#utility.yul\":11923:12062   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":12042:12060   */\n      tag_455\n      tag_307\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11923:12062   */\n    tag_454:\n        /* \"#utility.yul\":11707:12069   */\n      pop\n        /* \"#utility.yul\":11659:12069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12075:12255   */\n    tag_308:\n        /* \"#utility.yul\":12123:12200   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12120:12121   */\n      0x00\n        /* \"#utility.yul\":12113:12201   */\n      mstore\n        /* \"#utility.yul\":12220:12224   */\n      0x12\n        /* \"#utility.yul\":12217:12218   */\n      0x04\n        /* \"#utility.yul\":12210:12225   */\n      mstore\n        /* \"#utility.yul\":12244:12248   */\n      0x24\n        /* \"#utility.yul\":12241:12242   */\n      0x00\n        /* \"#utility.yul\":12234:12249   */\n      revert\n        /* \"#utility.yul\":12261:12446   */\n    tag_132:\n        /* \"#utility.yul\":12301:12302   */\n      0x00\n        /* \"#utility.yul\":12318:12338   */\n      tag_458\n        /* \"#utility.yul\":12336:12337   */\n      dup3\n        /* \"#utility.yul\":12318:12338   */\n      tag_282\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12313:12338   */\n      swap2\n      pop\n        /* \"#utility.yul\":12352:12372   */\n      tag_459\n        /* \"#utility.yul\":12370:12371   */\n      dup4\n        /* \"#utility.yul\":12352:12372   */\n      tag_282\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12347:12372   */\n      swap3\n      pop\n        /* \"#utility.yul\":12391:12392   */\n      dup3\n        /* \"#utility.yul\":12381:12416   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":12396:12414   */\n      tag_461\n      tag_308\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12381:12416   */\n    tag_460:\n        /* \"#utility.yul\":12438:12439   */\n      dup3\n        /* \"#utility.yul\":12435:12436   */\n      dup3\n        /* \"#utility.yul\":12431:12440   */\n      div\n        /* \"#utility.yul\":12426:12440   */\n      swap1\n      pop\n        /* \"#utility.yul\":12261:12446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12452:12628   */\n    tag_309:\n        /* \"#utility.yul\":12592:12620   */\n      0x4e6f7420656e6f7567682062616c616e636520746f206d696e74000000000000\n        /* \"#utility.yul\":12588:12589   */\n      0x00\n        /* \"#utility.yul\":12580:12586   */\n      dup3\n        /* \"#utility.yul\":12576:12590   */\n      add\n        /* \"#utility.yul\":12569:12621   */\n      mstore\n        /* \"#utility.yul\":12452:12628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12634:13000   */\n    tag_310:\n        /* \"#utility.yul\":12776:12779   */\n      0x00\n        /* \"#utility.yul\":12797:12864   */\n      tag_464\n        /* \"#utility.yul\":12861:12863   */\n      0x1a\n        /* \"#utility.yul\":12856:12859   */\n      dup4\n        /* \"#utility.yul\":12797:12864   */\n      tag_292\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12790:12864   */\n      swap2\n      pop\n        /* \"#utility.yul\":12873:12966   */\n      tag_465\n        /* \"#utility.yul\":12962:12965   */\n      dup3\n        /* \"#utility.yul\":12873:12966   */\n      tag_309\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12991:12993   */\n      0x20\n        /* \"#utility.yul\":12986:12989   */\n      dup3\n        /* \"#utility.yul\":12982:12994   */\n      add\n        /* \"#utility.yul\":12975:12994   */\n      swap1\n      pop\n        /* \"#utility.yul\":12634:13000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13006:13425   */\n    tag_137:\n        /* \"#utility.yul\":13172:13176   */\n      0x00\n        /* \"#utility.yul\":13210:13212   */\n      0x20\n        /* \"#utility.yul\":13199:13208   */\n      dup3\n        /* \"#utility.yul\":13195:13213   */\n      add\n        /* \"#utility.yul\":13187:13213   */\n      swap1\n      pop\n        /* \"#utility.yul\":13259:13268   */\n      dup2\n        /* \"#utility.yul\":13253:13257   */\n      dup2\n        /* \"#utility.yul\":13249:13269   */\n      sub\n        /* \"#utility.yul\":13245:13246   */\n      0x00\n        /* \"#utility.yul\":13234:13243   */\n      dup4\n        /* \"#utility.yul\":13230:13247   */\n      add\n        /* \"#utility.yul\":13223:13270   */\n      mstore\n        /* \"#utility.yul\":13287:13418   */\n      tag_467\n        /* \"#utility.yul\":13413:13417   */\n      dup2\n        /* \"#utility.yul\":13287:13418   */\n      tag_310\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13279:13418   */\n      swap1\n      pop\n        /* \"#utility.yul\":13006:13425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13431:13607   */\n    tag_311:\n        /* \"#utility.yul\":13571:13599   */\n      0x4e6f7420656e6f7567682062616c616e636520746f206275726e000000000000\n        /* \"#utility.yul\":13567:13568   */\n      0x00\n        /* \"#utility.yul\":13559:13565   */\n      dup3\n        /* \"#utility.yul\":13555:13569   */\n      add\n        /* \"#utility.yul\":13548:13600   */\n      mstore\n        /* \"#utility.yul\":13431:13607   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13613:13979   */\n    tag_312:\n        /* \"#utility.yul\":13755:13758   */\n      0x00\n        /* \"#utility.yul\":13776:13843   */\n      tag_470\n        /* \"#utility.yul\":13840:13842   */\n      0x1a\n        /* \"#utility.yul\":13835:13838   */\n      dup4\n        /* \"#utility.yul\":13776:13843   */\n      tag_292\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13769:13843   */\n      swap2\n      pop\n        /* \"#utility.yul\":13852:13945   */\n      tag_471\n        /* \"#utility.yul\":13941:13944   */\n      dup3\n        /* \"#utility.yul\":13852:13945   */\n      tag_311\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13970:13972   */\n      0x20\n        /* \"#utility.yul\":13965:13968   */\n      dup3\n        /* \"#utility.yul\":13961:13973   */\n      add\n        /* \"#utility.yul\":13954:13973   */\n      swap1\n      pop\n        /* \"#utility.yul\":13613:13979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13985:14404   */\n    tag_144:\n        /* \"#utility.yul\":14151:14155   */\n      0x00\n        /* \"#utility.yul\":14189:14191   */\n      0x20\n        /* \"#utility.yul\":14178:14187   */\n      dup3\n        /* \"#utility.yul\":14174:14192   */\n      add\n        /* \"#utility.yul\":14166:14192   */\n      swap1\n      pop\n        /* \"#utility.yul\":14238:14247   */\n      dup2\n        /* \"#utility.yul\":14232:14236   */\n      dup2\n        /* \"#utility.yul\":14228:14248   */\n      sub\n        /* \"#utility.yul\":14224:14225   */\n      0x00\n        /* \"#utility.yul\":14213:14222   */\n      dup4\n        /* \"#utility.yul\":14209:14226   */\n      add\n        /* \"#utility.yul\":14202:14249   */\n      mstore\n        /* \"#utility.yul\":14266:14397   */\n      tag_473\n        /* \"#utility.yul\":14392:14396   */\n      dup2\n        /* \"#utility.yul\":14266:14397   */\n      tag_312\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14258:14397   */\n      swap1\n      pop\n        /* \"#utility.yul\":13985:14404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14410:14637   */\n    tag_313:\n        /* \"#utility.yul\":14550:14584   */\n      0x50726f706f73616c20646964206e6f74206d656574206d616a6f726974792074\n        /* \"#utility.yul\":14546:14547   */\n      0x00\n        /* \"#utility.yul\":14538:14544   */\n      dup3\n        /* \"#utility.yul\":14534:14548   */\n      add\n        /* \"#utility.yul\":14527:14585   */\n      mstore\n        /* \"#utility.yul\":14619:14629   */\n      0x68726573686f6c64000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14614:14616   */\n      0x20\n        /* \"#utility.yul\":14606:14612   */\n      dup3\n        /* \"#utility.yul\":14602:14617   */\n      add\n        /* \"#utility.yul\":14595:14630   */\n      mstore\n        /* \"#utility.yul\":14410:14637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14643:15009   */\n    tag_314:\n        /* \"#utility.yul\":14785:14788   */\n      0x00\n        /* \"#utility.yul\":14806:14873   */\n      tag_476\n        /* \"#utility.yul\":14870:14872   */\n      0x28\n        /* \"#utility.yul\":14865:14868   */\n      dup4\n        /* \"#utility.yul\":14806:14873   */\n      tag_292\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":14799:14873   */\n      swap2\n      pop\n        /* \"#utility.yul\":14882:14975   */\n      tag_477\n        /* \"#utility.yul\":14971:14974   */\n      dup3\n        /* \"#utility.yul\":14882:14975   */\n      tag_313\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15000:15002   */\n      0x40\n        /* \"#utility.yul\":14995:14998   */\n      dup3\n        /* \"#utility.yul\":14991:15003   */\n      add\n        /* \"#utility.yul\":14984:15003   */\n      swap1\n      pop\n        /* \"#utility.yul\":14643:15009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15015:15434   */\n    tag_149:\n        /* \"#utility.yul\":15181:15185   */\n      0x00\n        /* \"#utility.yul\":15219:15221   */\n      0x20\n        /* \"#utility.yul\":15208:15217   */\n      dup3\n        /* \"#utility.yul\":15204:15222   */\n      add\n        /* \"#utility.yul\":15196:15222   */\n      swap1\n      pop\n        /* \"#utility.yul\":15268:15277   */\n      dup2\n        /* \"#utility.yul\":15262:15266   */\n      dup2\n        /* \"#utility.yul\":15258:15278   */\n      sub\n        /* \"#utility.yul\":15254:15255   */\n      0x00\n        /* \"#utility.yul\":15243:15252   */\n      dup4\n        /* \"#utility.yul\":15239:15256   */\n      add\n        /* \"#utility.yul\":15232:15279   */\n      mstore\n        /* \"#utility.yul\":15296:15427   */\n      tag_479\n        /* \"#utility.yul\":15422:15426   */\n      dup2\n        /* \"#utility.yul\":15296:15427   */\n      tag_314\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15288:15427   */\n      swap1\n      pop\n        /* \"#utility.yul\":15015:15434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15440:15673   */\n    tag_160:\n        /* \"#utility.yul\":15479:15482   */\n      0x00\n        /* \"#utility.yul\":15502:15526   */\n      tag_481\n        /* \"#utility.yul\":15520:15525   */\n      dup3\n        /* \"#utility.yul\":15502:15526   */\n      tag_282\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15493:15526   */\n      swap2\n      pop\n        /* \"#utility.yul\":15548:15614   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15541:15546   */\n      dup3\n        /* \"#utility.yul\":15538:15615   */\n      sub\n        /* \"#utility.yul\":15535:15638   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":15618:15636   */\n      tag_483\n      tag_307\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15535:15638   */\n    tag_482:\n        /* \"#utility.yul\":15665:15666   */\n      0x01\n        /* \"#utility.yul\":15658:15663   */\n      dup3\n        /* \"#utility.yul\":15654:15667   */\n      add\n        /* \"#utility.yul\":15647:15667   */\n      swap1\n      pop\n        /* \"#utility.yul\":15440:15673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15679:15902   */\n    tag_315:\n        /* \"#utility.yul\":15819:15853   */\n      0x4e6f7420656e6f75676820746f6b656e7320746f206372656174652070726f70\n        /* \"#utility.yul\":15815:15816   */\n      0x00\n        /* \"#utility.yul\":15807:15813   */\n      dup3\n        /* \"#utility.yul\":15803:15817   */\n      add\n        /* \"#utility.yul\":15796:15854   */\n      mstore\n        /* \"#utility.yul\":15888:15894   */\n      0x6f73616c00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15883:15885   */\n      0x20\n        /* \"#utility.yul\":15875:15881   */\n      dup3\n        /* \"#utility.yul\":15871:15886   */\n      add\n        /* \"#utility.yul\":15864:15895   */\n      mstore\n        /* \"#utility.yul\":15679:15902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15908:16274   */\n    tag_316:\n        /* \"#utility.yul\":16050:16053   */\n      0x00\n        /* \"#utility.yul\":16071:16138   */\n      tag_486\n        /* \"#utility.yul\":16135:16137   */\n      0x24\n        /* \"#utility.yul\":16130:16133   */\n      dup4\n        /* \"#utility.yul\":16071:16138   */\n      tag_292\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16064:16138   */\n      swap2\n      pop\n        /* \"#utility.yul\":16147:16240   */\n      tag_487\n        /* \"#utility.yul\":16236:16239   */\n      dup3\n        /* \"#utility.yul\":16147:16240   */\n      tag_315\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":16265:16267   */\n      0x40\n        /* \"#utility.yul\":16260:16263   */\n      dup3\n        /* \"#utility.yul\":16256:16268   */\n      add\n        /* \"#utility.yul\":16249:16268   */\n      swap1\n      pop\n        /* \"#utility.yul\":15908:16274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16280:16699   */\n    tag_186:\n        /* \"#utility.yul\":16446:16450   */\n      0x00\n        /* \"#utility.yul\":16484:16486   */\n      0x20\n        /* \"#utility.yul\":16473:16482   */\n      dup3\n        /* \"#utility.yul\":16469:16487   */\n      add\n        /* \"#utility.yul\":16461:16487   */\n      swap1\n      pop\n        /* \"#utility.yul\":16533:16542   */\n      dup2\n        /* \"#utility.yul\":16527:16531   */\n      dup2\n        /* \"#utility.yul\":16523:16543   */\n      sub\n        /* \"#utility.yul\":16519:16520   */\n      0x00\n        /* \"#utility.yul\":16508:16517   */\n      dup4\n        /* \"#utility.yul\":16504:16521   */\n      add\n        /* \"#utility.yul\":16497:16544   */\n      mstore\n        /* \"#utility.yul\":16561:16692   */\n      tag_489\n        /* \"#utility.yul\":16687:16691   */\n      dup2\n        /* \"#utility.yul\":16561:16692   */\n      tag_316\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":16553:16692   */\n      swap1\n      pop\n        /* \"#utility.yul\":16280:16699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16705:16877   */\n    tag_317:\n        /* \"#utility.yul\":16845:16869   */\n      0x496e76616c696420746172676574206164647265737300000000000000000000\n        /* \"#utility.yul\":16841:16842   */\n      0x00\n        /* \"#utility.yul\":16833:16839   */\n      dup3\n        /* \"#utility.yul\":16829:16843   */\n      add\n        /* \"#utility.yul\":16822:16870   */\n      mstore\n        /* \"#utility.yul\":16705:16877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16883:17249   */\n    tag_318:\n        /* \"#utility.yul\":17025:17028   */\n      0x00\n        /* \"#utility.yul\":17046:17113   */\n      tag_492\n        /* \"#utility.yul\":17110:17112   */\n      0x16\n        /* \"#utility.yul\":17105:17108   */\n      dup4\n        /* \"#utility.yul\":17046:17113   */\n      tag_292\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":17039:17113   */\n      swap2\n      pop\n        /* \"#utility.yul\":17122:17215   */\n      tag_493\n        /* \"#utility.yul\":17211:17214   */\n      dup3\n        /* \"#utility.yul\":17122:17215   */\n      tag_317\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":17240:17242   */\n      0x20\n        /* \"#utility.yul\":17235:17238   */\n      dup3\n        /* \"#utility.yul\":17231:17243   */\n      add\n        /* \"#utility.yul\":17224:17243   */\n      swap1\n      pop\n        /* \"#utility.yul\":16883:17249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17255:17674   */\n    tag_189:\n        /* \"#utility.yul\":17421:17425   */\n      0x00\n        /* \"#utility.yul\":17459:17461   */\n      0x20\n        /* \"#utility.yul\":17448:17457   */\n      dup3\n        /* \"#utility.yul\":17444:17462   */\n      add\n        /* \"#utility.yul\":17436:17462   */\n      swap1\n      pop\n        /* \"#utility.yul\":17508:17517   */\n      dup2\n        /* \"#utility.yul\":17502:17506   */\n      dup2\n        /* \"#utility.yul\":17498:17518   */\n      sub\n        /* \"#utility.yul\":17494:17495   */\n      0x00\n        /* \"#utility.yul\":17483:17492   */\n      dup4\n        /* \"#utility.yul\":17479:17496   */\n      add\n        /* \"#utility.yul\":17472:17519   */\n      mstore\n        /* \"#utility.yul\":17536:17667   */\n      tag_495\n        /* \"#utility.yul\":17662:17666   */\n      dup2\n        /* \"#utility.yul\":17536:17667   */\n      tag_318\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":17528:17667   */\n      swap1\n      pop\n        /* \"#utility.yul\":17255:17674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17680:18332   */\n    tag_193:\n        /* \"#utility.yul\":17879:17883   */\n      0x00\n        /* \"#utility.yul\":17917:17920   */\n      0xa0\n        /* \"#utility.yul\":17906:17915   */\n      dup3\n        /* \"#utility.yul\":17902:17921   */\n      add\n        /* \"#utility.yul\":17894:17921   */\n      swap1\n      pop\n        /* \"#utility.yul\":17931:18002   */\n      tag_497\n        /* \"#utility.yul\":17999:18000   */\n      0x00\n        /* \"#utility.yul\":17988:17997   */\n      dup4\n        /* \"#utility.yul\":17984:18001   */\n      add\n        /* \"#utility.yul\":17975:17981   */\n      dup9\n        /* \"#utility.yul\":17931:18002   */\n      tag_288\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18012:18084   */\n      tag_498\n        /* \"#utility.yul\":18080:18082   */\n      0x20\n        /* \"#utility.yul\":18069:18078   */\n      dup4\n        /* \"#utility.yul\":18065:18083   */\n      add\n        /* \"#utility.yul\":18056:18062   */\n      dup8\n        /* \"#utility.yul\":18012:18084   */\n      tag_287\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18094:18166   */\n      tag_499\n        /* \"#utility.yul\":18162:18164   */\n      0x40\n        /* \"#utility.yul\":18151:18160   */\n      dup4\n        /* \"#utility.yul\":18147:18165   */\n      add\n        /* \"#utility.yul\":18138:18144   */\n      dup7\n        /* \"#utility.yul\":18094:18166   */\n      tag_287\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":18176:18248   */\n      tag_500\n        /* \"#utility.yul\":18244:18246   */\n      0x60\n        /* \"#utility.yul\":18233:18242   */\n      dup4\n        /* \"#utility.yul\":18229:18247   */\n      add\n        /* \"#utility.yul\":18220:18226   */\n      dup6\n        /* \"#utility.yul\":18176:18248   */\n      tag_288\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":18258:18325   */\n      tag_501\n        /* \"#utility.yul\":18320:18323   */\n      0x80\n        /* \"#utility.yul\":18309:18318   */\n      dup4\n        /* \"#utility.yul\":18305:18324   */\n      add\n        /* \"#utility.yul\":18296:18302   */\n      dup5\n        /* \"#utility.yul\":18258:18325   */\n      tag_290\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17680:18332   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18338:18517   */\n    tag_319:\n        /* \"#utility.yul\":18478:18509   */\n      0x43616e6e6f74207472616e7366657220647572696e6720766f74696e67000000\n        /* \"#utility.yul\":18474:18475   */\n      0x00\n        /* \"#utility.yul\":18466:18472   */\n      dup3\n        /* \"#utility.yul\":18462:18476   */\n      add\n        /* \"#utility.yul\":18455:18510   */\n      mstore\n        /* \"#utility.yul\":18338:18517   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18523:18889   */\n    tag_320:\n        /* \"#utility.yul\":18665:18668   */\n      0x00\n        /* \"#utility.yul\":18686:18753   */\n      tag_504\n        /* \"#utility.yul\":18750:18752   */\n      0x1d\n        /* \"#utility.yul\":18745:18748   */\n      dup4\n        /* \"#utility.yul\":18686:18753   */\n      tag_292\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18679:18753   */\n      swap2\n      pop\n        /* \"#utility.yul\":18762:18855   */\n      tag_505\n        /* \"#utility.yul\":18851:18854   */\n      dup3\n        /* \"#utility.yul\":18762:18855   */\n      tag_319\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":18880:18882   */\n      0x20\n        /* \"#utility.yul\":18875:18878   */\n      dup3\n        /* \"#utility.yul\":18871:18883   */\n      add\n        /* \"#utility.yul\":18864:18883   */\n      swap1\n      pop\n        /* \"#utility.yul\":18523:18889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18895:19314   */\n    tag_198:\n        /* \"#utility.yul\":19061:19065   */\n      0x00\n        /* \"#utility.yul\":19099:19101   */\n      0x20\n        /* \"#utility.yul\":19088:19097   */\n      dup3\n        /* \"#utility.yul\":19084:19102   */\n      add\n        /* \"#utility.yul\":19076:19102   */\n      swap1\n      pop\n        /* \"#utility.yul\":19148:19157   */\n      dup2\n        /* \"#utility.yul\":19142:19146   */\n      dup2\n        /* \"#utility.yul\":19138:19158   */\n      sub\n        /* \"#utility.yul\":19134:19135   */\n      0x00\n        /* \"#utility.yul\":19123:19132   */\n      dup4\n        /* \"#utility.yul\":19119:19136   */\n      add\n        /* \"#utility.yul\":19112:19159   */\n      mstore\n        /* \"#utility.yul\":19176:19307   */\n      tag_507\n        /* \"#utility.yul\":19302:19306   */\n      dup2\n        /* \"#utility.yul\":19176:19307   */\n      tag_320\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":19168:19307   */\n      swap1\n      pop\n        /* \"#utility.yul\":18895:19314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19320:19493   */\n    tag_321:\n        /* \"#utility.yul\":19460:19485   */\n      0x566f74696e6720706572696f642068617320656e646564000000000000000000\n        /* \"#utility.yul\":19456:19457   */\n      0x00\n        /* \"#utility.yul\":19448:19454   */\n      dup3\n        /* \"#utility.yul\":19444:19458   */\n      add\n        /* \"#utility.yul\":19437:19486   */\n      mstore\n        /* \"#utility.yul\":19320:19493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19499:19865   */\n    tag_322:\n        /* \"#utility.yul\":19641:19644   */\n      0x00\n        /* \"#utility.yul\":19662:19729   */\n      tag_510\n        /* \"#utility.yul\":19726:19728   */\n      0x17\n        /* \"#utility.yul\":19721:19724   */\n      dup4\n        /* \"#utility.yul\":19662:19729   */\n      tag_292\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":19655:19729   */\n      swap2\n      pop\n        /* \"#utility.yul\":19738:19831   */\n      tag_511\n        /* \"#utility.yul\":19827:19830   */\n      dup3\n        /* \"#utility.yul\":19738:19831   */\n      tag_321\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":19856:19858   */\n      0x20\n        /* \"#utility.yul\":19851:19854   */\n      dup3\n        /* \"#utility.yul\":19847:19859   */\n      add\n        /* \"#utility.yul\":19840:19859   */\n      swap1\n      pop\n        /* \"#utility.yul\":19499:19865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19871:20290   */\n    tag_205:\n        /* \"#utility.yul\":20037:20041   */\n      0x00\n        /* \"#utility.yul\":20075:20077   */\n      0x20\n        /* \"#utility.yul\":20064:20073   */\n      dup3\n        /* \"#utility.yul\":20060:20078   */\n      add\n        /* \"#utility.yul\":20052:20078   */\n      swap1\n      pop\n        /* \"#utility.yul\":20124:20133   */\n      dup2\n        /* \"#utility.yul\":20118:20122   */\n      dup2\n        /* \"#utility.yul\":20114:20134   */\n      sub\n        /* \"#utility.yul\":20110:20111   */\n      0x00\n        /* \"#utility.yul\":20099:20108   */\n      dup4\n        /* \"#utility.yul\":20095:20112   */\n      add\n        /* \"#utility.yul\":20088:20135   */\n      mstore\n        /* \"#utility.yul\":20152:20283   */\n      tag_513\n        /* \"#utility.yul\":20278:20282   */\n      dup2\n        /* \"#utility.yul\":20152:20283   */\n      tag_322\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":20144:20283   */\n      swap1\n      pop\n        /* \"#utility.yul\":19871:20290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20296:20463   */\n    tag_323:\n        /* \"#utility.yul\":20436:20455   */\n      0x4e6f20746f6b656e7320746f20766f7465000000000000000000000000000000\n        /* \"#utility.yul\":20432:20433   */\n      0x00\n        /* \"#utility.yul\":20424:20430   */\n      dup3\n        /* \"#utility.yul\":20420:20434   */\n      add\n        /* \"#utility.yul\":20413:20456   */\n      mstore\n        /* \"#utility.yul\":20296:20463   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20469:20835   */\n    tag_324:\n        /* \"#utility.yul\":20611:20614   */\n      0x00\n        /* \"#utility.yul\":20632:20699   */\n      tag_516\n        /* \"#utility.yul\":20696:20698   */\n      0x11\n        /* \"#utility.yul\":20691:20694   */\n      dup4\n        /* \"#utility.yul\":20632:20699   */\n      tag_292\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":20625:20699   */\n      swap2\n      pop\n        /* \"#utility.yul\":20708:20801   */\n      tag_517\n        /* \"#utility.yul\":20797:20800   */\n      dup3\n        /* \"#utility.yul\":20708:20801   */\n      tag_323\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":20826:20828   */\n      0x20\n        /* \"#utility.yul\":20821:20824   */\n      dup3\n        /* \"#utility.yul\":20817:20829   */\n      add\n        /* \"#utility.yul\":20810:20829   */\n      swap1\n      pop\n        /* \"#utility.yul\":20469:20835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20841:21260   */\n    tag_209:\n        /* \"#utility.yul\":21007:21011   */\n      0x00\n        /* \"#utility.yul\":21045:21047   */\n      0x20\n        /* \"#utility.yul\":21034:21043   */\n      dup3\n        /* \"#utility.yul\":21030:21048   */\n      add\n        /* \"#utility.yul\":21022:21048   */\n      swap1\n      pop\n        /* \"#utility.yul\":21094:21103   */\n      dup2\n        /* \"#utility.yul\":21088:21092   */\n      dup2\n        /* \"#utility.yul\":21084:21104   */\n      sub\n        /* \"#utility.yul\":21080:21081   */\n      0x00\n        /* \"#utility.yul\":21069:21078   */\n      dup4\n        /* \"#utility.yul\":21065:21082   */\n      add\n        /* \"#utility.yul\":21058:21105   */\n      mstore\n        /* \"#utility.yul\":21122:21253   */\n      tag_519\n        /* \"#utility.yul\":21248:21252   */\n      dup2\n        /* \"#utility.yul\":21122:21253   */\n      tag_324\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":21114:21253   */\n      swap1\n      pop\n        /* \"#utility.yul\":20841:21260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21266:21429   */\n    tag_325:\n        /* \"#utility.yul\":21406:21421   */\n      0x416c726561647920766f74656400000000000000000000000000000000000000\n        /* \"#utility.yul\":21402:21403   */\n      0x00\n        /* \"#utility.yul\":21394:21400   */\n      dup3\n        /* \"#utility.yul\":21390:21404   */\n      add\n        /* \"#utility.yul\":21383:21422   */\n      mstore\n        /* \"#utility.yul\":21266:21429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21435:21801   */\n    tag_326:\n        /* \"#utility.yul\":21577:21580   */\n      0x00\n        /* \"#utility.yul\":21598:21665   */\n      tag_522\n        /* \"#utility.yul\":21662:21664   */\n      0x0d\n        /* \"#utility.yul\":21657:21660   */\n      dup4\n        /* \"#utility.yul\":21598:21665   */\n      tag_292\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21591:21665   */\n      swap2\n      pop\n        /* \"#utility.yul\":21674:21767   */\n      tag_523\n        /* \"#utility.yul\":21763:21766   */\n      dup3\n        /* \"#utility.yul\":21674:21767   */\n      tag_325\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":21792:21794   */\n      0x20\n        /* \"#utility.yul\":21787:21790   */\n      dup3\n        /* \"#utility.yul\":21783:21795   */\n      add\n        /* \"#utility.yul\":21776:21795   */\n      swap1\n      pop\n        /* \"#utility.yul\":21435:21801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21807:22226   */\n    tag_212:\n        /* \"#utility.yul\":21973:21977   */\n      0x00\n        /* \"#utility.yul\":22011:22013   */\n      0x20\n        /* \"#utility.yul\":22000:22009   */\n      dup3\n        /* \"#utility.yul\":21996:22014   */\n      add\n        /* \"#utility.yul\":21988:22014   */\n      swap1\n      pop\n        /* \"#utility.yul\":22060:22069   */\n      dup2\n        /* \"#utility.yul\":22054:22058   */\n      dup2\n        /* \"#utility.yul\":22050:22070   */\n      sub\n        /* \"#utility.yul\":22046:22047   */\n      0x00\n        /* \"#utility.yul\":22035:22044   */\n      dup4\n        /* \"#utility.yul\":22031:22048   */\n      add\n        /* \"#utility.yul\":22024:22071   */\n      mstore\n        /* \"#utility.yul\":22088:22219   */\n      tag_525\n        /* \"#utility.yul\":22214:22218   */\n      dup2\n        /* \"#utility.yul\":22088:22219   */\n      tag_326\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22080:22219   */\n      swap1\n      pop\n        /* \"#utility.yul\":21807:22226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22232:22662   */\n    tag_219:\n        /* \"#utility.yul\":22375:22379   */\n      0x00\n        /* \"#utility.yul\":22413:22415   */\n      0x60\n        /* \"#utility.yul\":22402:22411   */\n      dup3\n        /* \"#utility.yul\":22398:22416   */\n      add\n        /* \"#utility.yul\":22390:22416   */\n      swap1\n      pop\n        /* \"#utility.yul\":22426:22497   */\n      tag_527\n        /* \"#utility.yul\":22494:22495   */\n      0x00\n        /* \"#utility.yul\":22483:22492   */\n      dup4\n        /* \"#utility.yul\":22479:22496   */\n      add\n        /* \"#utility.yul\":22470:22476   */\n      dup7\n        /* \"#utility.yul\":22426:22497   */\n      tag_288\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":22507:22579   */\n      tag_528\n        /* \"#utility.yul\":22575:22577   */\n      0x20\n        /* \"#utility.yul\":22564:22573   */\n      dup4\n        /* \"#utility.yul\":22560:22578   */\n      add\n        /* \"#utility.yul\":22551:22557   */\n      dup6\n        /* \"#utility.yul\":22507:22579   */\n      tag_287\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":22589:22655   */\n      tag_529\n        /* \"#utility.yul\":22651:22653   */\n      0x40\n        /* \"#utility.yul\":22640:22649   */\n      dup4\n        /* \"#utility.yul\":22636:22654   */\n      add\n        /* \"#utility.yul\":22627:22633   */\n      dup5\n        /* \"#utility.yul\":22589:22655   */\n      tag_290\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":22232:22662   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22668:23110   */\n    tag_245:\n        /* \"#utility.yul\":22817:22821   */\n      0x00\n        /* \"#utility.yul\":22855:22857   */\n      0x60\n        /* \"#utility.yul\":22844:22853   */\n      dup3\n        /* \"#utility.yul\":22840:22858   */\n      add\n        /* \"#utility.yul\":22832:22858   */\n      swap1\n      pop\n        /* \"#utility.yul\":22868:22939   */\n      tag_531\n        /* \"#utility.yul\":22936:22937   */\n      0x00\n        /* \"#utility.yul\":22925:22934   */\n      dup4\n        /* \"#utility.yul\":22921:22938   */\n      add\n        /* \"#utility.yul\":22912:22918   */\n      dup7\n        /* \"#utility.yul\":22868:22939   */\n      tag_287\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":22949:23021   */\n      tag_532\n        /* \"#utility.yul\":23017:23019   */\n      0x20\n        /* \"#utility.yul\":23006:23015   */\n      dup4\n        /* \"#utility.yul\":23002:23020   */\n      add\n        /* \"#utility.yul\":22993:22999   */\n      dup6\n        /* \"#utility.yul\":22949:23021   */\n      tag_288\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":23031:23103   */\n      tag_533\n        /* \"#utility.yul\":23099:23101   */\n      0x40\n        /* \"#utility.yul\":23088:23097   */\n      dup4\n        /* \"#utility.yul\":23084:23102   */\n      add\n        /* \"#utility.yul\":23075:23081   */\n      dup5\n        /* \"#utility.yul\":23031:23103   */\n      tag_288\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":22668:23110   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bfabc7d26d2699d252faa8cf14cb848ccfe19c4b6c7f7631a17fbf8646458f3664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1026": {
									"entryPoint": null,
									"id": 1026,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 560,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 362,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 696,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:7",
										"nodeType": "YulBlock",
										"src": "0:7961:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "771:274:7",
													"nodeType": "YulBlock",
													"src": "771:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:7",
																"nodeType": "YulBlock",
																"src": "817:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:7"
																			},
																			"nativeSrc": "819:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:7"
																		},
																		"nativeSrc": "819:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:7"
																		},
																		"nativeSrc": "788:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:7"
																},
																"nativeSrc": "784:32:7",
																"nodeType": "YulFunctionCall",
																"src": "784:32:7"
															},
															"nativeSrc": "781:119:7",
															"nodeType": "YulIf",
															"src": "781:119:7"
														},
														{
															"nativeSrc": "910:128:7",
															"nodeType": "YulBlock",
															"src": "910:128:7",
															"statements": [
																{
																	"nativeSrc": "925:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:7",
																			"nodeType": "YulTypedName",
																			"src": "929:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:7",
																	"nodeType": "YulAssignment",
																	"src": "954:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:7"
																				},
																				"nativeSrc": "996:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:7"
																		},
																		"nativeSrc": "964:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:7",
														"nodeType": "YulTypedName",
														"src": "741:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:7",
														"nodeType": "YulTypedName",
														"src": "752:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:7",
														"nodeType": "YulTypedName",
														"src": "764:6:7",
														"type": ""
													}
												],
												"src": "694:351:7"
											},
											{
												"body": {
													"nativeSrc": "1110:40:7",
													"nodeType": "YulBlock",
													"src": "1110:40:7",
													"statements": [
														{
															"nativeSrc": "1121:22:7",
															"nodeType": "YulAssignment",
															"src": "1121:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:7"
																},
																"nativeSrc": "1131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:7",
														"nodeType": "YulTypedName",
														"src": "1093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:7",
														"nodeType": "YulTypedName",
														"src": "1103:6:7",
														"type": ""
													}
												],
												"src": "1051:99:7"
											},
											{
												"body": {
													"nativeSrc": "1184:152:7",
													"nodeType": "YulBlock",
													"src": "1184:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:7"
															},
															"nativeSrc": "1194:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:7"
																},
																"nativeSrc": "1291:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:7"
															},
															"nativeSrc": "1291:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:7"
																},
																"nativeSrc": "1315:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:7"
															},
															"nativeSrc": "1315:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:7"
											},
											{
												"body": {
													"nativeSrc": "1370:152:7",
													"nodeType": "YulBlock",
													"src": "1370:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:7"
																},
																"nativeSrc": "1380:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:7"
															},
															"nativeSrc": "1380:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:7"
																},
																"nativeSrc": "1477:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:7"
															},
															"nativeSrc": "1477:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:7"
															},
															"nativeSrc": "1501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:7"
											},
											{
												"body": {
													"nativeSrc": "1579:269:7",
													"nodeType": "YulBlock",
													"src": "1579:269:7",
													"statements": [
														{
															"nativeSrc": "1589:22:7",
															"nodeType": "YulAssignment",
															"src": "1589:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:7"
																},
																"nativeSrc": "1599:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:7"
																}
															]
														},
														{
															"nativeSrc": "1620:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:7"
																},
																"nativeSrc": "1646:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:7",
																"nodeType": "YulBlock",
																"src": "1697:51:7",
																"statements": [
																	{
																		"nativeSrc": "1711:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:7"
																			},
																			"nativeSrc": "1721:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:7"
																},
																"nativeSrc": "1670:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:7"
															},
															"nativeSrc": "1667:81:7",
															"nodeType": "YulIf",
															"src": "1667:81:7"
														},
														{
															"body": {
																"nativeSrc": "1800:42:7",
																"nodeType": "YulBlock",
																"src": "1800:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:7"
																			},
																			"nativeSrc": "1814:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:7"
																		},
																		"nativeSrc": "1814:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:7"
																		},
																		"nativeSrc": "1784:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:7"
																},
																"nativeSrc": "1761:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:7"
															},
															"nativeSrc": "1758:84:7",
															"nodeType": "YulIf",
															"src": "1758:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:7",
														"nodeType": "YulTypedName",
														"src": "1563:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:7",
														"nodeType": "YulTypedName",
														"src": "1572:6:7",
														"type": ""
													}
												],
												"src": "1528:320:7"
											},
											{
												"body": {
													"nativeSrc": "1908:87:7",
													"nodeType": "YulBlock",
													"src": "1908:87:7",
													"statements": [
														{
															"nativeSrc": "1918:11:7",
															"nodeType": "YulAssignment",
															"src": "1918:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:7",
																"nodeType": "YulIdentifier",
																"src": "1926:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:7"
																},
																"nativeSrc": "1939:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:7"
															},
															"nativeSrc": "1939:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:7"
														},
														{
															"nativeSrc": "1962:26:7",
															"nodeType": "YulAssignment",
															"src": "1962:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:7"
																},
																"nativeSrc": "1970:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:7",
														"nodeType": "YulTypedName",
														"src": "1895:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:7",
														"nodeType": "YulTypedName",
														"src": "1903:4:7",
														"type": ""
													}
												],
												"src": "1854:141:7"
											},
											{
												"body": {
													"nativeSrc": "2045:49:7",
													"nodeType": "YulBlock",
													"src": "2045:49:7",
													"statements": [
														{
															"nativeSrc": "2055:33:7",
															"nodeType": "YulAssignment",
															"src": "2055:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:7"
																		},
																		"nativeSrc": "2069:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:7"
																},
																"nativeSrc": "2065:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:7",
														"nodeType": "YulTypedName",
														"src": "2028:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:7",
														"nodeType": "YulTypedName",
														"src": "2038:6:7",
														"type": ""
													}
												],
												"src": "2001:93:7"
											},
											{
												"body": {
													"nativeSrc": "2153:54:7",
													"nodeType": "YulBlock",
													"src": "2153:54:7",
													"statements": [
														{
															"nativeSrc": "2163:37:7",
															"nodeType": "YulAssignment",
															"src": "2163:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:7"
																},
																"nativeSrc": "2184:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:7",
														"nodeType": "YulTypedName",
														"src": "2128:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:7",
														"nodeType": "YulTypedName",
														"src": "2134:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:7",
														"nodeType": "YulTypedName",
														"src": "2144:8:7",
														"type": ""
													}
												],
												"src": "2100:107:7"
											},
											{
												"body": {
													"nativeSrc": "2289:317:7",
													"nodeType": "YulBlock",
													"src": "2289:317:7",
													"statements": [
														{
															"nativeSrc": "2299:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:7"
																},
																"nativeSrc": "2316:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:7"
																},
																"nativeSrc": "2355:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:7",
															"nodeType": "YulAssignment",
															"src": "2461:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:7"
																},
																"nativeSrc": "2473:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:7"
																}
															]
														},
														{
															"nativeSrc": "2521:30:7",
															"nodeType": "YulAssignment",
															"src": "2521:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:7"
																		},
																		"nativeSrc": "2541:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:7"
																},
																"nativeSrc": "2530:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:7"
																}
															]
														},
														{
															"nativeSrc": "2560:40:7",
															"nodeType": "YulAssignment",
															"src": "2560:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:7"
																		},
																		"nativeSrc": "2580:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:7"
																},
																"nativeSrc": "2570:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:7",
														"nodeType": "YulTypedName",
														"src": "2250:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:7",
														"nodeType": "YulTypedName",
														"src": "2257:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:7",
														"nodeType": "YulTypedName",
														"src": "2269:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:7",
														"nodeType": "YulTypedName",
														"src": "2282:6:7",
														"type": ""
													}
												],
												"src": "2213:393:7"
											},
											{
												"body": {
													"nativeSrc": "2644:28:7",
													"nodeType": "YulBlock",
													"src": "2644:28:7",
													"statements": [
														{
															"nativeSrc": "2654:12:7",
															"nodeType": "YulAssignment",
															"src": "2654:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:7",
																"nodeType": "YulIdentifier",
																"src": "2661:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:7",
														"nodeType": "YulTypedName",
														"src": "2630:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:7",
														"nodeType": "YulTypedName",
														"src": "2640:3:7",
														"type": ""
													}
												],
												"src": "2612:60:7"
											},
											{
												"body": {
													"nativeSrc": "2738:82:7",
													"nodeType": "YulBlock",
													"src": "2738:82:7",
													"statements": [
														{
															"nativeSrc": "2748:66:7",
															"nodeType": "YulAssignment",
															"src": "2748:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:7"
																				},
																				"nativeSrc": "2788:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:7"
																		},
																		"nativeSrc": "2779:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:7"
																},
																"nativeSrc": "2761:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:7",
														"nodeType": "YulTypedName",
														"src": "2718:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:7",
														"nodeType": "YulTypedName",
														"src": "2728:9:7",
														"type": ""
													}
												],
												"src": "2678:142:7"
											},
											{
												"body": {
													"nativeSrc": "2873:28:7",
													"nodeType": "YulBlock",
													"src": "2873:28:7",
													"statements": [
														{
															"nativeSrc": "2883:12:7",
															"nodeType": "YulAssignment",
															"src": "2883:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:7",
																"nodeType": "YulIdentifier",
																"src": "2890:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:7",
														"nodeType": "YulTypedName",
														"src": "2859:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:7",
														"nodeType": "YulTypedName",
														"src": "2869:3:7",
														"type": ""
													}
												],
												"src": "2826:75:7"
											},
											{
												"body": {
													"nativeSrc": "2983:193:7",
													"nodeType": "YulBlock",
													"src": "2983:193:7",
													"statements": [
														{
															"nativeSrc": "2993:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:7"
																},
																"nativeSrc": "3017:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:7"
																				},
																				"nativeSrc": "3106:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:7"
																				},
																				"nativeSrc": "3127:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:7"
																		},
																		"nativeSrc": "3078:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:7"
																},
																"nativeSrc": "3065:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:7"
															},
															"nativeSrc": "3065:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:7",
														"nodeType": "YulTypedName",
														"src": "2960:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:7",
														"nodeType": "YulTypedName",
														"src": "2966:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:7",
														"nodeType": "YulTypedName",
														"src": "2974:7:7",
														"type": ""
													}
												],
												"src": "2907:269:7"
											},
											{
												"body": {
													"nativeSrc": "3231:24:7",
													"nodeType": "YulBlock",
													"src": "3231:24:7",
													"statements": [
														{
															"nativeSrc": "3241:8:7",
															"nodeType": "YulAssignment",
															"src": "3241:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:7",
																"nodeType": "YulLiteral",
																"src": "3248:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:7",
														"nodeType": "YulTypedName",
														"src": "3227:3:7",
														"type": ""
													}
												],
												"src": "3182:73:7"
											},
											{
												"body": {
													"nativeSrc": "3314:136:7",
													"nodeType": "YulBlock",
													"src": "3314:136:7",
													"statements": [
														{
															"nativeSrc": "3324:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:7"
																},
																"nativeSrc": "3338:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:7"
																},
																"nativeSrc": "3379:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:7"
															},
															"nativeSrc": "3379:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:7",
														"nodeType": "YulTypedName",
														"src": "3300:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"src": "3261:189:7"
											},
											{
												"body": {
													"nativeSrc": "3506:136:7",
													"nodeType": "YulBlock",
													"src": "3506:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:7",
																"nodeType": "YulBlock",
																"src": "3573:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:7"
																			},
																			"nativeSrc": "3587:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:7"
																		},
																		"nativeSrc": "3587:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:7"
																},
																"nativeSrc": "3523:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:7"
															},
															"nativeSrc": "3516:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:7",
																"nodeType": "YulBlock",
																"src": "3538:26:7",
																"statements": [
																	{
																		"nativeSrc": "3540:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:7"
																			},
																			"nativeSrc": "3549:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:7",
																"nodeType": "YulBlock",
																"src": "3520:2:7",
																"statements": []
															},
															"src": "3516:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:7",
														"nodeType": "YulTypedName",
														"src": "3494:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:7",
														"nodeType": "YulTypedName",
														"src": "3501:3:7",
														"type": ""
													}
												],
												"src": "3456:186:7"
											},
											{
												"body": {
													"nativeSrc": "3727:464:7",
													"nodeType": "YulBlock",
													"src": "3727:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:7",
																"nodeType": "YulBlock",
																"src": "3753:431:7",
																"statements": [
																	{
																		"nativeSrc": "3767:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:7"
																			},
																			"nativeSrc": "3783:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:7",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:7"
																					},
																					"nativeSrc": "3867:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:7"
																			},
																			"nativeSrc": "3853:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:7",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:7",
																			"nodeType": "YulBlock",
																			"src": "4054:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:7"
																			},
																			"nativeSrc": "4035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:7"
																		},
																		"nativeSrc": "4032:49:7",
																		"nodeType": "YulIf",
																		"src": "4032:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:7"
																							},
																							"nativeSrc": "4150:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:7"
																					},
																					"nativeSrc": "4136:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:7"
																			},
																			"nativeSrc": "4094:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:7"
																		},
																		"nativeSrc": "4094:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:7"
																},
																"nativeSrc": "3741:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:7"
															},
															"nativeSrc": "3738:446:7",
															"nodeType": "YulIf",
															"src": "3738:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:7",
														"nodeType": "YulTypedName",
														"src": "3703:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:7",
														"nodeType": "YulTypedName",
														"src": "3710:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:7",
														"nodeType": "YulTypedName",
														"src": "3715:10:7",
														"type": ""
													}
												],
												"src": "3648:543:7"
											},
											{
												"body": {
													"nativeSrc": "4260:54:7",
													"nodeType": "YulBlock",
													"src": "4260:54:7",
													"statements": [
														{
															"nativeSrc": "4270:37:7",
															"nodeType": "YulAssignment",
															"src": "4270:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:7"
																},
																"nativeSrc": "4291:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:7",
														"nodeType": "YulTypedName",
														"src": "4235:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:7",
														"nodeType": "YulTypedName",
														"src": "4241:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:7",
														"nodeType": "YulTypedName",
														"src": "4251:8:7",
														"type": ""
													}
												],
												"src": "4197:117:7"
											},
											{
												"body": {
													"nativeSrc": "4371:118:7",
													"nodeType": "YulBlock",
													"src": "4371:118:7",
													"statements": [
														{
															"nativeSrc": "4381:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:7"
																				},
																				"nativeSrc": "4426:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:7"
																				},
																				"nativeSrc": "4441:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:7"
																		},
																		"nativeSrc": "4397:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:7"
																},
																"nativeSrc": "4393:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:7",
															"nodeType": "YulAssignment",
															"src": "4458:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:7"
																},
																"nativeSrc": "4468:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:7",
														"nodeType": "YulTypedName",
														"src": "4348:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:7",
														"nodeType": "YulTypedName",
														"src": "4354:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:7",
														"nodeType": "YulTypedName",
														"src": "4364:6:7",
														"type": ""
													}
												],
												"src": "4320:169:7"
											},
											{
												"body": {
													"nativeSrc": "4575:214:7",
													"nodeType": "YulBlock",
													"src": "4575:214:7",
													"statements": [
														{
															"nativeSrc": "4708:37:7",
															"nodeType": "YulAssignment",
															"src": "4708:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:7"
																},
																"nativeSrc": "4716:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:7"
																}
															]
														},
														{
															"nativeSrc": "4754:29:7",
															"nodeType": "YulAssignment",
															"src": "4754:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:7"
																		},
																		"nativeSrc": "4771:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:7"
																},
																"nativeSrc": "4762:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:7",
														"nodeType": "YulTypedName",
														"src": "4556:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:7",
														"nodeType": "YulTypedName",
														"src": "4562:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:7",
														"nodeType": "YulTypedName",
														"src": "4570:4:7",
														"type": ""
													}
												],
												"src": "4494:295:7"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:7",
													"nodeType": "YulBlock",
													"src": "4886:1303:7",
													"statements": [
														{
															"nativeSrc": "4897:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:7"
																},
																"nativeSrc": "4911:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:7",
																"nodeType": "YulBlock",
																"src": "5033:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:7"
																			},
																			"nativeSrc": "5035:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:7"
																		},
																		"nativeSrc": "5035:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:7"
																},
																"nativeSrc": "5002:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:7"
															},
															"nativeSrc": "4999:56:7",
															"nodeType": "YulIf",
															"src": "4999:56:7"
														},
														{
															"nativeSrc": "5065:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:7"
																		},
																		"nativeSrc": "5105:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:7"
																},
																"nativeSrc": "5079:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:7"
																},
																"nativeSrc": "5164:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:7"
															},
															"nativeSrc": "5164:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:7"
														},
														{
															"nativeSrc": "5241:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:7",
																"nodeType": "YulLiteral",
																"src": "5258:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:7",
															"nodeType": "YulAssignment",
															"src": "5269:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:7",
																"nodeType": "YulLiteral",
																"src": "5282:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:7",
																		"nodeType": "YulBlock",
																		"src": "5333:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:7"
																							},
																							"nativeSrc": "5374:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:7"
																					},
																					"nativeSrc": "5362:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:7"
																					},
																					"nativeSrc": "5412:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:7",
																					"nodeType": "YulBlock",
																					"src": "5530:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:7"
																												},
																												"nativeSrc": "5569:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:7"
																										},
																										"nativeSrc": "5563:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:7"
																								},
																								"nativeSrc": "5548:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:7"
																							},
																							"nativeSrc": "5548:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:7"
																						},
																						{
																							"nativeSrc": "5607:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:7"
																								},
																								"nativeSrc": "5617:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:7"
																								},
																								"nativeSrc": "5661:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:7"
																					},
																					"nativeSrc": "5493:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:7"
																				},
																				"nativeSrc": "5485:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:7",
																					"nodeType": "YulBlock",
																					"src": "5508:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:7"
																								},
																								"nativeSrc": "5515:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:7",
																					"nodeType": "YulBlock",
																					"src": "5489:3:7",
																					"statements": []
																				},
																				"src": "5485:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:7",
																					"nodeType": "YulBlock",
																					"src": "5729:156:7",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:7"
																										},
																										"nativeSrc": "5770:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:7"
																								},
																								"nativeSrc": "5764:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:7",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:7",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:7"
																												},
																												"nativeSrc": "5852:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:7"
																										},
																										"nativeSrc": "5822:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:7"
																								},
																								"nativeSrc": "5807:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:7"
																							},
																							"nativeSrc": "5807:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:7"
																					},
																					"nativeSrc": "5709:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:7"
																				},
																				"nativeSrc": "5706:179:7",
																				"nodeType": "YulIf",
																				"src": "5706:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:7",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:7"
																									},
																									"nativeSrc": "5915:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:7",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:7"
																							},
																							"nativeSrc": "5911:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:7"
																					},
																					"nativeSrc": "5898:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:7"
																				},
																				"nativeSrc": "5898:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:7",
																	"nodeType": "YulCase",
																	"src": "5326:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:7",
																		"nodeType": "YulBlock",
																		"src": "5961:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:7",
																					"nodeType": "YulBlock",
																					"src": "6012:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:7"
																										},
																										"nativeSrc": "6045:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:7"
																								},
																								"nativeSrc": "6039:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:7"
																				},
																				"nativeSrc": "6002:77:7",
																				"nodeType": "YulIf",
																				"src": "6002:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:7"
																							},
																							"nativeSrc": "6105:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:7"
																					},
																					"nativeSrc": "6092:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:7"
																				},
																				"nativeSrc": "6092:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:7"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:7",
																	"nodeType": "YulCase",
																	"src": "5953:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:7"
																},
																"nativeSrc": "5303:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:7"
															},
															"nativeSrc": "5296:887:7",
															"nodeType": "YulSwitch",
															"src": "5296:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:7",
														"nodeType": "YulTypedName",
														"src": "4875:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:7",
														"nodeType": "YulTypedName",
														"src": "4881:3:7",
														"type": ""
													}
												],
												"src": "4794:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6240:81:7",
													"nodeType": "YulBlock",
													"src": "6240:81:7",
													"statements": [
														{
															"nativeSrc": "6250:65:7",
															"nodeType": "YulAssignment",
															"src": "6250:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:7",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:7"
																},
																"nativeSrc": "6261:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:7",
														"nodeType": "YulTypedName",
														"src": "6222:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:7",
														"nodeType": "YulTypedName",
														"src": "6232:7:7",
														"type": ""
													}
												],
												"src": "6195:126:7"
											},
											{
												"body": {
													"nativeSrc": "6372:51:7",
													"nodeType": "YulBlock",
													"src": "6372:51:7",
													"statements": [
														{
															"nativeSrc": "6382:35:7",
															"nodeType": "YulAssignment",
															"src": "6382:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:7"
																},
																"nativeSrc": "6393:24:7",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:7",
														"nodeType": "YulTypedName",
														"src": "6354:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:7",
														"nodeType": "YulTypedName",
														"src": "6364:7:7",
														"type": ""
													}
												],
												"src": "6327:96:7"
											},
											{
												"body": {
													"nativeSrc": "6494:53:7",
													"nodeType": "YulBlock",
													"src": "6494:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:7"
																		},
																		"nativeSrc": "6516:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:7"
																},
																"nativeSrc": "6504:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:7"
															},
															"nativeSrc": "6504:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:7",
														"nodeType": "YulTypedName",
														"src": "6482:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:7",
														"nodeType": "YulTypedName",
														"src": "6489:3:7",
														"type": ""
													}
												],
												"src": "6429:118:7"
											},
											{
												"body": {
													"nativeSrc": "6651:124:7",
													"nodeType": "YulBlock",
													"src": "6651:124:7",
													"statements": [
														{
															"nativeSrc": "6661:26:7",
															"nodeType": "YulAssignment",
															"src": "6661:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:7"
																},
																"nativeSrc": "6669:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:7"
																		},
																		"nativeSrc": "6750:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:7"
																},
																"nativeSrc": "6697:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:7"
															},
															"nativeSrc": "6697:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:7",
														"nodeType": "YulTypedName",
														"src": "6623:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:7",
														"nodeType": "YulTypedName",
														"src": "6635:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:7",
														"nodeType": "YulTypedName",
														"src": "6646:4:7",
														"type": ""
													}
												],
												"src": "6553:222:7"
											},
											{
												"body": {
													"nativeSrc": "6809:152:7",
													"nodeType": "YulBlock",
													"src": "6809:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:7"
																},
																"nativeSrc": "6819:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:7"
															},
															"nativeSrc": "6819:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:7"
																},
																"nativeSrc": "6916:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:7"
															},
															"nativeSrc": "6916:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:7"
																},
																"nativeSrc": "6940:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:7"
															},
															"nativeSrc": "6940:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:7"
											},
											{
												"body": {
													"nativeSrc": "7011:147:7",
													"nodeType": "YulBlock",
													"src": "7011:147:7",
													"statements": [
														{
															"nativeSrc": "7021:25:7",
															"nodeType": "YulAssignment",
															"src": "7021:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:7"
																},
																"nativeSrc": "7026:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:7"
																}
															]
														},
														{
															"nativeSrc": "7055:25:7",
															"nodeType": "YulAssignment",
															"src": "7055:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:7"
																},
																"nativeSrc": "7060:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:7"
																}
															]
														},
														{
															"nativeSrc": "7089:16:7",
															"nodeType": "YulAssignment",
															"src": "7089:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:7"
																},
																"nativeSrc": "7096:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:7",
																"nodeType": "YulBlock",
																"src": "7129:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:7"
																			},
																			"nativeSrc": "7131:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:7"
																		},
																		"nativeSrc": "7131:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:7"
																},
																"nativeSrc": "7118:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:7"
															},
															"nativeSrc": "7115:36:7",
															"nodeType": "YulIf",
															"src": "7115:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:7",
														"nodeType": "YulTypedName",
														"src": "6998:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:7",
														"nodeType": "YulTypedName",
														"src": "7001:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:7",
														"nodeType": "YulTypedName",
														"src": "7007:3:7",
														"type": ""
													}
												],
												"src": "6967:191:7"
											},
											{
												"body": {
													"nativeSrc": "7229:53:7",
													"nodeType": "YulBlock",
													"src": "7229:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:7"
																		},
																		"nativeSrc": "7251:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:7"
																},
																"nativeSrc": "7239:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:7"
															},
															"nativeSrc": "7239:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:7",
														"nodeType": "YulTypedName",
														"src": "7217:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:7",
														"nodeType": "YulTypedName",
														"src": "7224:3:7",
														"type": ""
													}
												],
												"src": "7164:118:7"
											},
											{
												"body": {
													"nativeSrc": "7442:288:7",
													"nodeType": "YulBlock",
													"src": "7442:288:7",
													"statements": [
														{
															"nativeSrc": "7452:26:7",
															"nodeType": "YulAssignment",
															"src": "7452:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:7"
																},
																"nativeSrc": "7460:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:7"
																		},
																		"nativeSrc": "7541:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:7"
																},
																"nativeSrc": "7488:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:7"
															},
															"nativeSrc": "7488:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:7"
																		},
																		"nativeSrc": "7622:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:7"
																},
																"nativeSrc": "7569:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:7"
															},
															"nativeSrc": "7569:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:7"
																		},
																		"nativeSrc": "7704:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:7"
																},
																"nativeSrc": "7651:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:7"
															},
															"nativeSrc": "7651:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:7",
														"nodeType": "YulTypedName",
														"src": "7398:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:7",
														"nodeType": "YulTypedName",
														"src": "7410:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:7",
														"nodeType": "YulTypedName",
														"src": "7418:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:7",
														"nodeType": "YulTypedName",
														"src": "7426:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:7",
														"nodeType": "YulTypedName",
														"src": "7437:4:7",
														"type": ""
													}
												],
												"src": "7288:442:7"
											},
											{
												"body": {
													"nativeSrc": "7834:124:7",
													"nodeType": "YulBlock",
													"src": "7834:124:7",
													"statements": [
														{
															"nativeSrc": "7844:26:7",
															"nodeType": "YulAssignment",
															"src": "7844:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:7"
																},
																"nativeSrc": "7852:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:7"
																		},
																		"nativeSrc": "7933:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:7"
																},
																"nativeSrc": "7880:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:7"
															},
															"nativeSrc": "7880:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:7",
														"nodeType": "YulTypedName",
														"src": "7806:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:7",
														"nodeType": "YulTypedName",
														"src": "7818:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:7",
														"nodeType": "YulTypedName",
														"src": "7829:4:7",
														"type": ""
													}
												],
												"src": "7736:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405261afc860085561012c6009556001600a5534801561002157600080fd5b50604051612d96380380612d9683398181016040528101906100439190610518565b306040518060400160405280600a81526020017f73756a616c666c617368000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f534900000000000000000000000000000000000000000000000000000000000081525081600390816100bf919061078b565b5080600490816100cf919061078b565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101445760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013b919061089e565b60405180910390fd5b6101538161016a60201b60201c565b50610164338261023060201b60201c565b5061097d565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a25760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610299919061089e565b60405180910390fd5b6102b4600083836102b860201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361030a5780600260008282546102fe91906108e8565b925050819055506103dd565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610396578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038d9392919061092b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104265780600260008282540392505081905550610473565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104d09190610962565b60405180910390a3505050565b600080fd5b6000819050919050565b6104f5816104e2565b811461050057600080fd5b50565b600081519050610512816104ec565b92915050565b60006020828403121561052e5761052d6104dd565b5b600061053c84828501610503565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105c657607f821691505b6020821081036105d9576105d861057f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610604565b61064b8683610604565b95508019841693508086168417925050509392505050565b6000819050919050565b600061068861068361067e846104e2565b610663565b6104e2565b9050919050565b6000819050919050565b6106a28361066d565b6106b66106ae8261068f565b848454610611565b825550505050565b600090565b6106cb6106be565b6106d6818484610699565b505050565b5b818110156106fa576106ef6000826106c3565b6001810190506106dc565b5050565b601f82111561073f57610710816105df565b610719846105f4565b81016020851015610728578190505b61073c610734856105f4565b8301826106db565b50505b505050565b600082821c905092915050565b600061076260001984600802610744565b1980831691505092915050565b600061077b8383610751565b9150826002028217905092915050565b61079482610545565b67ffffffffffffffff8111156107ad576107ac610550565b5b6107b782546105ae565b6107c28282856106fe565b600060209050601f8311600181146107f557600084156107e3578287015190505b6107ed858261076f565b865550610855565b601f198416610803866105df565b60005b8281101561082b57848901518255600182019150602085019450602081019050610806565b868310156108485784890151610844601f891682610751565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108888261085d565b9050919050565b6108988161087d565b82525050565b60006020820190506108b3600083018461088f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108f3826104e2565b91506108fe836104e2565b9250828201905080821115610916576109156108b9565b5b92915050565b610925816104e2565b82525050565b6000606082019050610940600083018661088f565b61094d602083018561091c565b61095a604083018461091c565b949350505050565b6000602082019050610977600083018461091c565b92915050565b61240a8061098c6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063bd31a4d81161007c578063bd31a4d814610348578063c9d27afe14610366578063da35c66414610382578063dd62ed3e146103a0578063f15c3fd4146103d0578063f2fde38b146103ee57610137565b8063715018a6146102b65780638da5cb5b146102c057806395d89b41146102de5780639713de52146102fc578063a9059cbb1461031857610137565b80631bbef399116100ff5780631bbef399146101fc57806323b872dd1461021a5780632615a6461461024a578063313ce5671461026857806370a082311461028657610137565b8063013cf08b1461013c57806306fdde0314610174578063095ea7b3146101925780630d61b519146101c257806318160ddd146101de575b600080fd5b6101566004803603810190610151919061182c565b61040a565b60405161016b999897969594939291906118c4565b60405180910390f35b61017c6104b2565b60405161018991906119e1565b60405180910390f35b6101ac60048036038101906101a79190611a2f565b610544565b6040516101b99190611a6f565b60405180910390f35b6101dc60048036038101906101d7919061182c565b610567565b005b6101e6610843565b6040516101f39190611a8a565b60405180910390f35b61020461084d565b6040516102119190611a6f565b60405180910390f35b610234600480360381019061022f9190611aa5565b6108dc565b6040516102419190611a6f565b60405180910390f35b61025261090b565b60405161025f9190611a8a565b60405180910390f35b610270610911565b60405161027d9190611b14565b60405180910390f35b6102a0600480360381019061029b9190611b2f565b61091a565b6040516102ad9190611a8a565b60405180910390f35b6102be610962565b005b6102c8610976565b6040516102d59190611b5c565b60405180910390f35b6102e66109a0565b6040516102f391906119e1565b60405180910390f35b61031660048036038101906103119190611ba3565b610a32565b005b610332600480360381019061032d9190611a2f565b610c30565b60405161033f9190611a6f565b60405180910390f35b610350610c8c565b60405161035d9190611a8a565b60405180910390f35b610380600480360381019061037b9190611bf6565b610c92565b005b61038a610ec6565b6040516103979190611a8a565b60405180910390f35b6103ba60048036038101906103b59190611c36565b610ecc565b6040516103c79190611a8a565b60405180910390f35b6103d8610f53565b6040516103e59190611a8a565b60405180910390f35b61040860048036038101906104039190611b2f565b610f59565b005b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff16905089565b6060600380546104c190611ca5565b80601f01602080910402602001604051908101604052809291908181526020018280546104ed90611ca5565b801561053a5780601f1061050f5761010080835404028352916020019161053a565b820191906000526020600020905b81548152906001019060200180831161051d57829003601f168201915b5050505050905090565b60008061054f610fdf565b905061055c818585610fe7565b600191505092915050565b600060076000838152602001908152602001600020905080600701544310156105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90611d22565b60405180910390fd5b8060030160009054906101000a900460ff1615610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90611d8e565b60405180910390fd5b60008160050154826004015461062d9190611ddd565b9050600060646033836106409190611e11565b61064a9190611e82565b9050808360040154106107ae578260080160009054906101000a900460ff16156107035782600201543073ffffffffffffffffffffffffffffffffffffffff163110156106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390611eff565b60405180910390fd5b6106fe8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460020154610ff9565b6107a9565b82600201546107358460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661091a565b1015610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90611f6b565b60405180910390fd5b6107a88360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846002015461107b565b5b6107e9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611ffd565b60405180910390fd5b60018360030160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f846040516108359190611a8a565b60405180910390a150505050565b6000600254905090565b600080600190505b60065481116108d35760085460076000838152602001908152602001600020600601546108829190611ddd565b431080156108b157506007600082815260200190815260200160002060030160009054906101000a900460ff16155b156108c05760019150506108d9565b80806108cb9061201d565b915050610855565b50600090505b90565b6000806108e7610fdf565b90506108f48582856110fd565b6108ff858585611191565b60019150509392505050565b60085481565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61096a611285565b610974600061130c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109af90611ca5565b80601f01602080910402602001604051908101604052809291908181526020018280546109db90611ca5565b8015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b5050505050905090565b600a54610a3e3361091a565b1015610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a76906120d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae590612143565b60405180910390fd5b60066000815480929190610b019061201d565b919050555060006007600060065481526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160020181905550438160060181905550818160080160006101000a81548160ff02191690831515021790555060095443610be19190611ddd565b81600701819055507fbca082239c403ccd62fa76215509fa481657bc5adf238019415351e5edb6d05d60065433868686604051610c22959493929190612163565b60405180910390a150505050565b6000610c3a61084d565b15610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190612202565b60405180910390fd5b610c8483836113d2565b905092915050565b600a5481565b60006007600084815260200190815260200160002090506008548160060154610cbb9190611ddd565b4310610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf39061226e565b60405180910390fd5b6000610d073361091a565b11610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e906122da565b60405180910390fd5b8060090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90612346565b60405180910390fd5b6000610de13361091a565b905060008190508315610e0e5780836004016000828254610e029190611ddd565b92505081905550610e2a565b80836005016000828254610e229190611ddd565b925050819055505b60018360090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f853386604051610eb793929190612366565b60405180910390a15050505050565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60095481565b610f61611285565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fd35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fca9190611b5c565b60405180910390fd5b610fdc8161130c565b50565b600033905090565b610ff483838360016113f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361106b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110629190611b5c565b60405180910390fd5b611077600083836115cc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ed5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110e49190611b5c565b60405180910390fd5b6110f9826000836115cc565b5050565b60006111098484610ecc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461118b578181101561117b578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111729392919061239d565b60405180910390fd5b61118a848484840360006113f5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112035760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111fa9190611b5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112755760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161126c9190611b5c565b60405180910390fd5b6112808383836115cc565b505050565b61128d610fdf565b73ffffffffffffffffffffffffffffffffffffffff166112ab610976565b73ffffffffffffffffffffffffffffffffffffffff161461130a576112ce610fdf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113019190611b5c565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806113dd610fdf565b90506113ea818585611191565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114675760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161145e9190611b5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d95760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d09190611b5c565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156115c6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115bd9190611a8a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361161e5780600260008282546116129190611ddd565b925050819055506116f1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116a19392919061239d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361173a5780600260008282540392505081905550611787565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117e49190611a8a565b60405180910390a3505050565b600080fd5b6000819050919050565b611809816117f6565b811461181457600080fd5b50565b60008135905061182681611800565b92915050565b600060208284031215611842576118416117f1565b5b600061185084828501611817565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061188482611859565b9050919050565b61189481611879565b82525050565b6118a3816117f6565b82525050565b60008115159050919050565b6118be816118a9565b82525050565b6000610120820190506118da600083018c61188b565b6118e7602083018b61188b565b6118f4604083018a61189a565b61190160608301896118b5565b61190e608083018861189a565b61191b60a083018761189a565b61192860c083018661189a565b61193560e083018561189a565b6119436101008301846118b5565b9a9950505050505050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561198b578082015181840152602081019050611970565b60008484015250505050565b6000601f19601f8301169050919050565b60006119b382611951565b6119bd818561195c565b93506119cd81856020860161196d565b6119d681611997565b840191505092915050565b600060208201905081810360008301526119fb81846119a8565b905092915050565b611a0c81611879565b8114611a1757600080fd5b50565b600081359050611a2981611a03565b92915050565b60008060408385031215611a4657611a456117f1565b5b6000611a5485828601611a1a565b9250506020611a6585828601611817565b9150509250929050565b6000602082019050611a8460008301846118b5565b92915050565b6000602082019050611a9f600083018461189a565b92915050565b600080600060608486031215611abe57611abd6117f1565b5b6000611acc86828701611a1a565b9350506020611add86828701611a1a565b9250506040611aee86828701611817565b9150509250925092565b600060ff82169050919050565b611b0e81611af8565b82525050565b6000602082019050611b296000830184611b05565b92915050565b600060208284031215611b4557611b446117f1565b5b6000611b5384828501611a1a565b91505092915050565b6000602082019050611b71600083018461188b565b92915050565b611b80816118a9565b8114611b8b57600080fd5b50565b600081359050611b9d81611b77565b92915050565b600080600060608486031215611bbc57611bbb6117f1565b5b6000611bca86828701611a1a565b9350506020611bdb86828701611817565b9250506040611bec86828701611b8e565b9150509250925092565b60008060408385031215611c0d57611c0c6117f1565b5b6000611c1b85828601611817565b9250506020611c2c85828601611b8e565b9150509250929050565b60008060408385031215611c4d57611c4c6117f1565b5b6000611c5b85828601611a1a565b9250506020611c6c85828601611a1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cbd57607f821691505b602082108103611cd057611ccf611c76565b5b50919050565b7f457865637574696f6e20706572696f6420686173206e6f742073746172746564600082015250565b6000611d0c60208361195c565b9150611d1782611cd6565b602082019050919050565b60006020820190508181036000830152611d3b81611cff565b9050919050565b7f50726f706f73616c20616c726561647920657865637574656400000000000000600082015250565b6000611d7860198361195c565b9150611d8382611d42565b602082019050919050565b60006020820190508181036000830152611da781611d6b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611de8826117f6565b9150611df3836117f6565b9250828201905080821115611e0b57611e0a611dae565b5b92915050565b6000611e1c826117f6565b9150611e27836117f6565b9250828202611e35816117f6565b91508282048414831517611e4c57611e4b611dae565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e8d826117f6565b9150611e98836117f6565b925082611ea857611ea7611e53565b5b828204905092915050565b7f4e6f7420656e6f7567682062616c616e636520746f206d696e74000000000000600082015250565b6000611ee9601a8361195c565b9150611ef482611eb3565b602082019050919050565b60006020820190508181036000830152611f1881611edc565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f206275726e000000000000600082015250565b6000611f55601a8361195c565b9150611f6082611f1f565b602082019050919050565b60006020820190508181036000830152611f8481611f48565b9050919050565b7f50726f706f73616c20646964206e6f74206d656574206d616a6f72697479207460008201527f68726573686f6c64000000000000000000000000000000000000000000000000602082015250565b6000611fe760288361195c565b9150611ff282611f8b565b604082019050919050565b6000602082019050818103600083015261201681611fda565b9050919050565b6000612028826117f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361205a57612059611dae565b5b600182019050919050565b7f4e6f7420656e6f75676820746f6b656e7320746f206372656174652070726f7060008201527f6f73616c00000000000000000000000000000000000000000000000000000000602082015250565b60006120c160248361195c565b91506120cc82612065565b604082019050919050565b600060208201905081810360008301526120f0816120b4565b9050919050565b7f496e76616c696420746172676574206164647265737300000000000000000000600082015250565b600061212d60168361195c565b9150612138826120f7565b602082019050919050565b6000602082019050818103600083015261215c81612120565b9050919050565b600060a082019050612178600083018861189a565b612185602083018761188b565b612192604083018661188b565b61219f606083018561189a565b6121ac60808301846118b5565b9695505050505050565b7f43616e6e6f74207472616e7366657220647572696e6720766f74696e67000000600082015250565b60006121ec601d8361195c565b91506121f7826121b6565b602082019050919050565b6000602082019050818103600083015261221b816121df565b9050919050565b7f566f74696e6720706572696f642068617320656e646564000000000000000000600082015250565b600061225860178361195c565b915061226382612222565b602082019050919050565b600060208201905081810360008301526122878161224b565b9050919050565b7f4e6f20746f6b656e7320746f20766f7465000000000000000000000000000000600082015250565b60006122c460118361195c565b91506122cf8261228e565b602082019050919050565b600060208201905081810360008301526122f3816122b7565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000612330600d8361195c565b915061233b826122fa565b602082019050919050565b6000602082019050818103600083015261235f81612323565b9050919050565b600060608201905061237b600083018661189a565b612388602083018561188b565b61239560408301846118b5565b949350505050565b60006060820190506123b2600083018661188b565b6123bf602083018561189a565b6123cc604083018461189a565b94935050505056fea2646970667358221220bfabc7d26d2699d252faa8cf14cb848ccfe19c4b6c7f7631a17fbf8646458f3664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xAFC8 PUSH1 0x8 SSTORE PUSH2 0x12C PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D96 CODESIZE SUB DUP1 PUSH2 0x2D96 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x518 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73756A616C666C61736800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5349000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x78B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x78B JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x153 DUP2 PUSH2 0x16A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x164 CALLER DUP3 PUSH2 0x230 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x97D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x30A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x396 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x426 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x473 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F5 DUP2 PUSH2 0x4E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x512 DUP2 PUSH2 0x4EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x4DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x53C DUP5 DUP3 DUP6 ADD PUSH2 0x503 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x57F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x641 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x64B DUP7 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x688 PUSH2 0x683 PUSH2 0x67E DUP5 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A2 DUP4 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0x6AE DUP3 PUSH2 0x68F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x611 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x6D6 DUP2 DUP5 DUP5 PUSH2 0x699 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FA JUMPI PUSH2 0x6EF PUSH1 0x0 DUP3 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x73F JUMPI PUSH2 0x710 DUP2 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x719 DUP5 PUSH2 0x5F4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x728 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x73C PUSH2 0x734 DUP6 PUSH2 0x5F4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6DB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x744 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x794 DUP3 PUSH2 0x545 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x550 JUMP JUMPDEST JUMPDEST PUSH2 0x7B7 DUP3 SLOAD PUSH2 0x5AE JUMP JUMPDEST PUSH2 0x7C2 DUP3 DUP3 DUP6 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x7E3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7ED DUP6 DUP3 PUSH2 0x76F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x803 DUP7 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x82B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x806 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x848 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x844 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x751 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x888 DUP3 PUSH2 0x85D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x898 DUP2 PUSH2 0x87D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x88F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F3 DUP3 PUSH2 0x4E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FE DUP4 PUSH2 0x4E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x916 JUMPI PUSH2 0x915 PUSH2 0x8B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x925 DUP2 PUSH2 0x4E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x940 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x88F JUMP JUMPDEST PUSH2 0x94D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x91C JUMP JUMPDEST PUSH2 0x95A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x91C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x977 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x91C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x240A DUP1 PUSH2 0x98C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBD31A4D8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBD31A4D8 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xDA35C664 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF15C3FD4 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3EE JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x9713DE52 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x318 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1BBEF399 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x1BBEF399 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2615A646 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4C1 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4ED SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x53A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x50F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x51D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x54F PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x7 ADD SLOAD NUMBER LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x33 DUP4 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x64A SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x4 ADD SLOAD LT PUSH2 0x7AE JUMPI DUP3 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x703 JUMPI DUP3 PUSH1 0x2 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FE DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x735 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91A JUMP JUMPDEST LT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x1F6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A8 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x107B JUMP JUMPDEST JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F DUP5 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x8D3 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST NUMBER LT DUP1 ISZERO PUSH2 0x8B1 JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x8D9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x8CB SWAP1 PUSH2 0x201D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x855 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8E7 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH2 0x8F4 DUP6 DUP3 DUP6 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x8FF DUP6 DUP6 DUP6 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96A PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x974 PUSH1 0x0 PUSH2 0x130C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9AF SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9DB SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xA3E CALLER PUSH2 0x91A JUMP JUMPDEST LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA76 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE5 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB01 SWAP1 PUSH2 0x201D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x9 SLOAD NUMBER PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xBCA082239C403CCD62FA76215509FA481657BC5ADF238019415351E5EDB6D05D PUSH1 0x6 SLOAD CALLER DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3A PUSH2 0x84D JUMP JUMPDEST ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x2202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC84 DUP4 DUP4 PUSH2 0x13D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x8 SLOAD DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST NUMBER LT PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD07 CALLER PUSH2 0x91A JUMP JUMPDEST GT PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3E SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDE1 CALLER PUSH2 0x91A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP4 ISZERO PUSH2 0xE0E JUMPI DUP1 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE2A JUMP JUMPDEST DUP1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x9 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF2913DBE661EE2ACC4A046D8FBCDC792373BDA34C41C6086484B5345E5785E5F DUP6 CALLER DUP7 PUSH1 0x40 MLOAD PUSH2 0xEB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF61 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDC DUP2 PUSH2 0x130C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1077 PUSH1 0x0 DUP4 DUP4 PUSH2 0x15CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10ED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F9 DUP3 PUSH1 0x0 DUP4 PUSH2 0x15CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1109 DUP5 DUP5 PUSH2 0xECC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x118B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x117B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118A DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x13F5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1203 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1275 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1280 DUP4 DUP4 DUP4 PUSH2 0x15CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x128D PUSH2 0xFDF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12AB PUSH2 0x976 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x130A JUMPI PUSH2 0x12CE PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1301 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13DD PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH2 0x13EA DUP2 DUP6 DUP6 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1467 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15C6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x161E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1612 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16AA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1787 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17E4 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1809 DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1826 DUP2 PUSH2 0x1800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1850 DUP5 DUP3 DUP6 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1884 DUP3 PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1894 DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18A3 DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BE DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x18DA PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x18E7 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x18F4 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1901 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x190E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x191B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1928 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1935 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1943 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B3 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x19BD DUP2 DUP6 PUSH2 0x195C JUMP JUMPDEST SWAP4 POP PUSH2 0x19CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196D JUMP JUMPDEST PUSH2 0x19D6 DUP2 PUSH2 0x1997 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19FB DUP2 DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A0C DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1A03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A54 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABD PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ACC DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ADD DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AEE DUP7 DUP3 DUP8 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0E DUP2 PUSH2 0x1AF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x1B44 PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBC JUMPI PUSH2 0x1BBB PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDB DUP7 DUP3 DUP8 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEC DUP7 DUP3 DUP8 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0D JUMPI PUSH2 0x1C0C PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1B DUP6 DUP3 DUP7 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2C DUP6 DUP3 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C6C DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CBD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CD0 JUMPI PUSH2 0x1CCF PUSH2 0x1C76 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457865637574696F6E20706572696F6420686173206E6F742073746172746564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0C PUSH1 0x20 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D17 DUP3 PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D3B DUP2 PUSH2 0x1CFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D78 PUSH1 0x19 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D83 DUP3 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA7 DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF3 DUP4 PUSH2 0x17F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x1DAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1C DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E27 DUP4 PUSH2 0x17F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E35 DUP2 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E4C JUMPI PUSH2 0x1E4B PUSH2 0x1DAE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8D DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E98 DUP4 PUSH2 0x17F6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EA8 JUMPI PUSH2 0x1EA7 PUSH2 0x1E53 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F206D696E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 PUSH1 0x1A DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF4 DUP3 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F18 DUP2 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F206275726E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F55 PUSH1 0x1A DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F60 DUP3 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F84 DUP2 PUSH2 0x1F48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20646964206E6F74206D656574206D616A6F726974792074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68726573686F6C64000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE7 PUSH1 0x28 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF2 DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2016 DUP2 PUSH2 0x1FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x205A JUMPI PUSH2 0x2059 PUSH2 0x1DAE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320746F206372656174652070726F70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F73616C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 PUSH1 0x24 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x20CC DUP3 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F0 DUP2 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212D PUSH1 0x16 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x2138 DUP3 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215C DUP2 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2178 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x2185 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x2192 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x219F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x21AC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220647572696E6720766F74696E67000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EC PUSH1 0x1D DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x21F7 DUP3 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221B DUP2 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F74696E6720706572696F642068617320656E646564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2258 PUSH1 0x17 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x2263 DUP3 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2287 DUP2 PUSH2 0x224B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20766F7465000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C4 PUSH1 0x11 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x22CF DUP3 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F3 DUP2 PUSH2 0x22B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766F74656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2330 PUSH1 0xD DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x233B DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 PUSH2 0x2323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x237B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x2388 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x2395 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x23BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x23CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x189A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xAB 0xC7 0xD2 PUSH14 0x2699D252FAA8CF14CB848CCFE19C 0x4B PUSH13 0x7F7631A17FBF8646458F366473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "174:4380:6:-:0;;;708:5;670:43;;795:3;755:43;;875:1;844:32;;1156:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1233:4;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1251:32:6::2;1257:10;1269:13;1251:5;;;:32;;:::i;:::-;1156:135:::0;174:4380;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;174:4380:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 4071,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5109,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4219,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4741,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4089,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4063,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4349,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4876,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4497,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5580,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3788,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1348,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2330,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createProposal_1116": {
									"entryPoint": 2610,
									"id": 1116,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 2321,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@executeProposal_1314": {
									"entryPoint": 1383,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@executionDelayInBlocks_977": {
									"entryPoint": 3923,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isVoting_1377": {
									"entryPoint": 2125,
									"id": 1377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 1202,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2422,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proposalCount_966": {
									"entryPoint": 3782,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proposals_971": {
									"entryPoint": 1034,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2402,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requiredVotes_980": {
									"entryPoint": 3212,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2464,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 2115,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2268,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3929,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1338": {
									"entryPoint": 3120,
									"id": 1338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 5074,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vote_1205": {
									"entryPoint": 3218,
									"id": 1205,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@votingPeriodInBlocks_974": {
									"entryPoint": 2315,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bool": {
									"entryPoint": 7075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6340,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 9062,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf": {
									"entryPoint": 8630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd": {
									"entryPoint": 7490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a": {
									"entryPoint": 7859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63": {
									"entryPoint": 8293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23113:7",
										"nodeType": "YulBlock",
										"src": "0:23113:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "756:263:7",
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:7",
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nativeSrc": "804:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nativeSrc": "804:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nativeSrc": "773:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nativeSrc": "769:32:7",
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nativeSrc": "766:119:7",
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nativeSrc": "895:117:7",
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nativeSrc": "910:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:7",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:7",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:7",
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nativeSrc": "970:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nativeSrc": "949:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:7",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:7",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:7",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nativeSrc": "1070:81:7",
													"nodeType": "YulBlock",
													"src": "1070:81:7",
													"statements": [
														{
															"nativeSrc": "1080:65:7",
															"nodeType": "YulAssignment",
															"src": "1080:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:7"
																},
																"nativeSrc": "1091:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:7",
														"nodeType": "YulTypedName",
														"src": "1052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:7",
														"nodeType": "YulTypedName",
														"src": "1062:7:7",
														"type": ""
													}
												],
												"src": "1025:126:7"
											},
											{
												"body": {
													"nativeSrc": "1202:51:7",
													"nodeType": "YulBlock",
													"src": "1202:51:7",
													"statements": [
														{
															"nativeSrc": "1212:35:7",
															"nodeType": "YulAssignment",
															"src": "1212:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:7"
																},
																"nativeSrc": "1223:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:7",
														"nodeType": "YulTypedName",
														"src": "1184:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:7",
														"nodeType": "YulTypedName",
														"src": "1194:7:7",
														"type": ""
													}
												],
												"src": "1157:96:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1448:53:7",
													"nodeType": "YulBlock",
													"src": "1448:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1465:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1465:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1488:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1488:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1470:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1470:17:7"
																		},
																		"nativeSrc": "1470:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:7"
																},
																"nativeSrc": "1458:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1458:37:7"
															},
															"nativeSrc": "1458:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1458:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1383:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1436:5:7",
														"nodeType": "YulTypedName",
														"src": "1436:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1443:3:7",
														"nodeType": "YulTypedName",
														"src": "1443:3:7",
														"type": ""
													}
												],
												"src": "1383:118:7"
											},
											{
												"body": {
													"nativeSrc": "1549:48:7",
													"nodeType": "YulBlock",
													"src": "1549:48:7",
													"statements": [
														{
															"nativeSrc": "1559:32:7",
															"nodeType": "YulAssignment",
															"src": "1559:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1584:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1584:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1577:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1577:6:7"
																		},
																		"nativeSrc": "1577:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1570:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1570:6:7"
																},
																"nativeSrc": "1570:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1570:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1559:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1559:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1507:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1531:5:7",
														"nodeType": "YulTypedName",
														"src": "1531:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1541:7:7",
														"nodeType": "YulTypedName",
														"src": "1541:7:7",
														"type": ""
													}
												],
												"src": "1507:90:7"
											},
											{
												"body": {
													"nativeSrc": "1662:50:7",
													"nodeType": "YulBlock",
													"src": "1662:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1679:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1679:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1699:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1699:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1684:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1684:14:7"
																		},
																		"nativeSrc": "1684:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1684:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1672:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1672:6:7"
																},
																"nativeSrc": "1672:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1672:34:7"
															},
															"nativeSrc": "1672:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1672:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1603:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1650:5:7",
														"nodeType": "YulTypedName",
														"src": "1650:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1657:3:7",
														"nodeType": "YulTypedName",
														"src": "1657:3:7",
														"type": ""
													}
												],
												"src": "1603:109:7"
											},
											{
												"body": {
													"nativeSrc": "2028:774:7",
													"nodeType": "YulBlock",
													"src": "2028:774:7",
													"statements": [
														{
															"nativeSrc": "2038:27:7",
															"nodeType": "YulAssignment",
															"src": "2038:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2050:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2050:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2061:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2061:3:7",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2046:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2046:3:7"
																},
																"nativeSrc": "2046:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2046:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2038:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2038:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2119:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2119:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2132:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2132:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2143:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2143:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2128:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:7"
																		},
																		"nativeSrc": "2128:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2128:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2075:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2075:43:7"
																},
																"nativeSrc": "2075:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2075:71:7"
															},
															"nativeSrc": "2075:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2075:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2200:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2200:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2213:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2213:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2224:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2224:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2209:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:7"
																		},
																		"nativeSrc": "2209:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2209:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2156:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2156:43:7"
																},
																"nativeSrc": "2156:72:7",
																"nodeType": "YulFunctionCall",
																"src": "2156:72:7"
															},
															"nativeSrc": "2156:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "2156:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2282:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2282:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2295:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2295:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2306:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2306:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2291:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:7"
																		},
																		"nativeSrc": "2291:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2238:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:43:7"
																},
																"nativeSrc": "2238:72:7",
																"nodeType": "YulFunctionCall",
																"src": "2238:72:7"
															},
															"nativeSrc": "2238:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "2238:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2358:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2382:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2382:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2367:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:7"
																		},
																		"nativeSrc": "2367:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2320:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "2320:37:7"
																},
																"nativeSrc": "2320:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2320:66:7"
															},
															"nativeSrc": "2320:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "2320:66:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "2440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2440:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2453:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2453:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2464:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2464:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2449:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2449:3:7"
																		},
																		"nativeSrc": "2449:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2449:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2396:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2396:43:7"
																},
																"nativeSrc": "2396:73:7",
																"nodeType": "YulFunctionCall",
																"src": "2396:73:7"
															},
															"nativeSrc": "2396:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "2396:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "2523:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2536:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2547:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2547:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2479:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2479:43:7"
																},
																"nativeSrc": "2479:73:7",
																"nodeType": "YulFunctionCall",
																"src": "2479:73:7"
															},
															"nativeSrc": "2479:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "2479:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "2606:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2630:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2630:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2615:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:7"
																		},
																		"nativeSrc": "2615:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2562:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:43:7"
																},
																"nativeSrc": "2562:73:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:73:7"
															},
															"nativeSrc": "2562:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "2562:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "2689:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2713:3:7",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:7"
																		},
																		"nativeSrc": "2698:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2645:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2645:43:7"
																},
																"nativeSrc": "2645:73:7",
																"nodeType": "YulFunctionCall",
																"src": "2645:73:7"
															},
															"nativeSrc": "2645:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "2645:73:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "2766:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2779:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2779:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2790:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2790:3:7",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2775:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2775:3:7"
																		},
																		"nativeSrc": "2775:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2775:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2728:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "2728:37:7"
																},
																"nativeSrc": "2728:67:7",
																"nodeType": "YulFunctionCall",
																"src": "2728:67:7"
															},
															"nativeSrc": "2728:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "2728:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "1718:1084:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:7",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "1948:6:7",
														"nodeType": "YulTypedName",
														"src": "1948:6:7",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "1956:6:7",
														"nodeType": "YulTypedName",
														"src": "1956:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1964:6:7",
														"nodeType": "YulTypedName",
														"src": "1964:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1972:6:7",
														"nodeType": "YulTypedName",
														"src": "1972:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1980:6:7",
														"nodeType": "YulTypedName",
														"src": "1980:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1988:6:7",
														"nodeType": "YulTypedName",
														"src": "1988:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1996:6:7",
														"nodeType": "YulTypedName",
														"src": "1996:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2004:6:7",
														"nodeType": "YulTypedName",
														"src": "2004:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2012:6:7",
														"nodeType": "YulTypedName",
														"src": "2012:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2023:4:7",
														"nodeType": "YulTypedName",
														"src": "2023:4:7",
														"type": ""
													}
												],
												"src": "1718:1084:7"
											},
											{
												"body": {
													"nativeSrc": "2867:40:7",
													"nodeType": "YulBlock",
													"src": "2867:40:7",
													"statements": [
														{
															"nativeSrc": "2878:22:7",
															"nodeType": "YulAssignment",
															"src": "2878:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2894:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2888:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2888:5:7"
																},
																"nativeSrc": "2888:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2888:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2808:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2850:5:7",
														"nodeType": "YulTypedName",
														"src": "2850:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2808:99:7"
											},
											{
												"body": {
													"nativeSrc": "3009:73:7",
													"nodeType": "YulBlock",
													"src": "3009:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3026:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3026:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3031:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3031:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3019:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:7"
																},
																"nativeSrc": "3019:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3019:19:7"
															},
															"nativeSrc": "3019:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3019:19:7"
														},
														{
															"nativeSrc": "3047:29:7",
															"nodeType": "YulAssignment",
															"src": "3047:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3066:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3066:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3071:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3071:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:7"
																},
																"nativeSrc": "3062:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3062:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3047:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "3047:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2913:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2981:3:7",
														"nodeType": "YulTypedName",
														"src": "2981:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2986:6:7",
														"nodeType": "YulTypedName",
														"src": "2986:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2997:11:7",
														"nodeType": "YulTypedName",
														"src": "2997:11:7",
														"type": ""
													}
												],
												"src": "2913:169:7"
											},
											{
												"body": {
													"nativeSrc": "3150:186:7",
													"nodeType": "YulBlock",
													"src": "3150:186:7",
													"statements": [
														{
															"nativeSrc": "3161:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3161:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3170:1:7",
																"nodeType": "YulLiteral",
																"src": "3170:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3165:1:7",
																	"nodeType": "YulTypedName",
																	"src": "3165:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3230:63:7",
																"nodeType": "YulBlock",
																"src": "3230:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "3255:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3255:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3260:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3260:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3251:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3251:3:7"
																					},
																					"nativeSrc": "3251:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3251:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "3274:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3274:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "3279:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "3279:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3270:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:7"
																							},
																							"nativeSrc": "3270:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3270:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3264:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3264:5:7"
																					},
																					"nativeSrc": "3264:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3264:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3244:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3244:6:7"
																			},
																			"nativeSrc": "3244:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3244:39:7"
																		},
																		"nativeSrc": "3244:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3244:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3191:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3191:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3194:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3194:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3188:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3188:2:7"
																},
																"nativeSrc": "3188:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3188:13:7"
															},
															"nativeSrc": "3180:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3202:19:7",
																"nodeType": "YulBlock",
																"src": "3202:19:7",
																"statements": [
																	{
																		"nativeSrc": "3204:15:7",
																		"nodeType": "YulAssignment",
																		"src": "3204:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3213:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "3213:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3216:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3216:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3209:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3209:3:7"
																			},
																			"nativeSrc": "3209:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3204:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3204:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3184:3:7",
																"nodeType": "YulBlock",
																"src": "3184:3:7",
																"statements": []
															},
															"src": "3180:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3313:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3313:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3318:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3318:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3309:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3309:3:7"
																		},
																		"nativeSrc": "3309:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3327:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3327:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:7"
																},
																"nativeSrc": "3302:27:7",
																"nodeType": "YulFunctionCall",
																"src": "3302:27:7"
															},
															"nativeSrc": "3302:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "3302:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3088:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3132:3:7",
														"nodeType": "YulTypedName",
														"src": "3132:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3137:3:7",
														"nodeType": "YulTypedName",
														"src": "3137:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3142:6:7",
														"nodeType": "YulTypedName",
														"src": "3142:6:7",
														"type": ""
													}
												],
												"src": "3088:248:7"
											},
											{
												"body": {
													"nativeSrc": "3390:54:7",
													"nodeType": "YulBlock",
													"src": "3390:54:7",
													"statements": [
														{
															"nativeSrc": "3400:38:7",
															"nodeType": "YulAssignment",
															"src": "3400:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3418:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3418:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3425:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3425:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3414:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3414:3:7"
																		},
																		"nativeSrc": "3414:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3414:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3434:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3434:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3430:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:7"
																		},
																		"nativeSrc": "3430:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3430:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3410:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3410:3:7"
																},
																"nativeSrc": "3410:28:7",
																"nodeType": "YulFunctionCall",
																"src": "3410:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3400:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3342:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3373:5:7",
														"nodeType": "YulTypedName",
														"src": "3373:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3383:6:7",
														"nodeType": "YulTypedName",
														"src": "3383:6:7",
														"type": ""
													}
												],
												"src": "3342:102:7"
											},
											{
												"body": {
													"nativeSrc": "3542:285:7",
													"nodeType": "YulBlock",
													"src": "3542:285:7",
													"statements": [
														{
															"nativeSrc": "3552:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3552:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3599:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3599:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3566:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3566:32:7"
																},
																"nativeSrc": "3566:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3566:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3556:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3556:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3614:78:7",
															"nodeType": "YulAssignment",
															"src": "3614:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3680:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3680:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3685:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3685:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3621:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3621:58:7"
																},
																"nativeSrc": "3621:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3621:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3614:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3614:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3740:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3740:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3747:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3747:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:7"
																		},
																		"nativeSrc": "3736:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3754:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3754:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3759:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3759:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3701:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "3701:34:7"
																},
																"nativeSrc": "3701:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3701:65:7"
															},
															"nativeSrc": "3701:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3701:65:7"
														},
														{
															"nativeSrc": "3775:46:7",
															"nodeType": "YulAssignment",
															"src": "3775:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3786:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3786:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3813:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3791:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "3791:21:7"
																		},
																		"nativeSrc": "3791:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3791:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3782:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3782:3:7"
																},
																"nativeSrc": "3782:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3782:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3775:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3775:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3450:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3523:5:7",
														"nodeType": "YulTypedName",
														"src": "3523:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3530:3:7",
														"nodeType": "YulTypedName",
														"src": "3530:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3538:3:7",
														"nodeType": "YulTypedName",
														"src": "3538:3:7",
														"type": ""
													}
												],
												"src": "3450:377:7"
											},
											{
												"body": {
													"nativeSrc": "3951:195:7",
													"nodeType": "YulBlock",
													"src": "3951:195:7",
													"statements": [
														{
															"nativeSrc": "3961:26:7",
															"nodeType": "YulAssignment",
															"src": "3961:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3973:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3973:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3984:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3984:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:7"
																},
																"nativeSrc": "3969:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3969:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3961:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3961:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4008:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4008:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4019:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4019:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4004:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:7"
																		},
																		"nativeSrc": "4004:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4004:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4027:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4027:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4033:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4023:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:7"
																		},
																		"nativeSrc": "4023:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4023:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3997:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3997:6:7"
																},
																"nativeSrc": "3997:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3997:47:7"
															},
															"nativeSrc": "3997:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3997:47:7"
														},
														{
															"nativeSrc": "4053:86:7",
															"nodeType": "YulAssignment",
															"src": "4053:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4125:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4125:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4134:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4134:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4061:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "4061:63:7"
																},
																"nativeSrc": "4061:78:7",
																"nodeType": "YulFunctionCall",
																"src": "4061:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4053:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4053:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3833:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3923:9:7",
														"nodeType": "YulTypedName",
														"src": "3923:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3935:6:7",
														"nodeType": "YulTypedName",
														"src": "3935:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3946:4:7",
														"nodeType": "YulTypedName",
														"src": "3946:4:7",
														"type": ""
													}
												],
												"src": "3833:313:7"
											},
											{
												"body": {
													"nativeSrc": "4195:79:7",
													"nodeType": "YulBlock",
													"src": "4195:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4252:16:7",
																"nodeType": "YulBlock",
																"src": "4252:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4261:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4261:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4264:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4264:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4254:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4254:6:7"
																			},
																			"nativeSrc": "4254:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:12:7"
																		},
																		"nativeSrc": "4254:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4218:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4218:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4243:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4243:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4225:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4225:17:7"
																				},
																				"nativeSrc": "4225:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4225:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4215:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4215:2:7"
																		},
																		"nativeSrc": "4215:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4215:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4208:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:7"
																},
																"nativeSrc": "4208:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4208:43:7"
															},
															"nativeSrc": "4205:63:7",
															"nodeType": "YulIf",
															"src": "4205:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4152:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4188:5:7",
														"nodeType": "YulTypedName",
														"src": "4188:5:7",
														"type": ""
													}
												],
												"src": "4152:122:7"
											},
											{
												"body": {
													"nativeSrc": "4332:87:7",
													"nodeType": "YulBlock",
													"src": "4332:87:7",
													"statements": [
														{
															"nativeSrc": "4342:29:7",
															"nodeType": "YulAssignment",
															"src": "4342:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4364:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4364:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4351:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4351:12:7"
																},
																"nativeSrc": "4351:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4351:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4342:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4407:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4407:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4380:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:26:7"
																},
																"nativeSrc": "4380:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:33:7"
															},
															"nativeSrc": "4380:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4380:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4280:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4310:6:7",
														"nodeType": "YulTypedName",
														"src": "4310:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4318:3:7",
														"nodeType": "YulTypedName",
														"src": "4318:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4326:5:7",
														"nodeType": "YulTypedName",
														"src": "4326:5:7",
														"type": ""
													}
												],
												"src": "4280:139:7"
											},
											{
												"body": {
													"nativeSrc": "4508:391:7",
													"nodeType": "YulBlock",
													"src": "4508:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4554:83:7",
																"nodeType": "YulBlock",
																"src": "4554:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4556:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4556:77:7"
																			},
																			"nativeSrc": "4556:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4556:79:7"
																		},
																		"nativeSrc": "4556:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4556:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4529:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4529:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4538:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4538:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4525:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4525:3:7"
																		},
																		"nativeSrc": "4525:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4525:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4550:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4550:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:7"
																},
																"nativeSrc": "4521:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4521:32:7"
															},
															"nativeSrc": "4518:119:7",
															"nodeType": "YulIf",
															"src": "4518:119:7"
														},
														{
															"nativeSrc": "4647:117:7",
															"nodeType": "YulBlock",
															"src": "4647:117:7",
															"statements": [
																{
																	"nativeSrc": "4662:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4662:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4676:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4676:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4666:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4666:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4691:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4691:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4726:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4726:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4737:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4737:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4722:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4722:3:7"
																				},
																				"nativeSrc": "4722:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4722:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4746:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4746:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4701:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4701:20:7"
																		},
																		"nativeSrc": "4701:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4701:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4691:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4691:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4774:118:7",
															"nodeType": "YulBlock",
															"src": "4774:118:7",
															"statements": [
																{
																	"nativeSrc": "4789:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4789:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4803:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4793:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4793:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4819:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4819:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4854:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4854:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4865:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4865:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4850:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4850:3:7"
																				},
																				"nativeSrc": "4850:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4850:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4874:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4874:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4829:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:20:7"
																		},
																		"nativeSrc": "4829:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4819:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4819:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4425:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4470:9:7",
														"nodeType": "YulTypedName",
														"src": "4470:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4481:7:7",
														"nodeType": "YulTypedName",
														"src": "4481:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4493:6:7",
														"nodeType": "YulTypedName",
														"src": "4493:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4501:6:7",
														"nodeType": "YulTypedName",
														"src": "4501:6:7",
														"type": ""
													}
												],
												"src": "4425:474:7"
											},
											{
												"body": {
													"nativeSrc": "4997:118:7",
													"nodeType": "YulBlock",
													"src": "4997:118:7",
													"statements": [
														{
															"nativeSrc": "5007:26:7",
															"nodeType": "YulAssignment",
															"src": "5007:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5019:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5030:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5030:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5015:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5015:3:7"
																},
																"nativeSrc": "5015:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5015:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5007:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5007:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5081:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5081:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5094:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5105:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5105:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:7"
																		},
																		"nativeSrc": "5090:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5043:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5043:37:7"
																},
																"nativeSrc": "5043:65:7",
																"nodeType": "YulFunctionCall",
																"src": "5043:65:7"
															},
															"nativeSrc": "5043:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "5043:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4905:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4969:9:7",
														"nodeType": "YulTypedName",
														"src": "4969:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4981:6:7",
														"nodeType": "YulTypedName",
														"src": "4981:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4992:4:7",
														"nodeType": "YulTypedName",
														"src": "4992:4:7",
														"type": ""
													}
												],
												"src": "4905:210:7"
											},
											{
												"body": {
													"nativeSrc": "5219:124:7",
													"nodeType": "YulBlock",
													"src": "5219:124:7",
													"statements": [
														{
															"nativeSrc": "5229:26:7",
															"nodeType": "YulAssignment",
															"src": "5229:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5241:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5241:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5252:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5237:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5237:3:7"
																},
																"nativeSrc": "5237:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5237:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5229:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5229:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5309:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5309:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5322:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5322:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5333:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5333:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5318:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5318:3:7"
																		},
																		"nativeSrc": "5318:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5318:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5265:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5265:43:7"
																},
																"nativeSrc": "5265:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5265:71:7"
															},
															"nativeSrc": "5265:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5265:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5121:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5191:9:7",
														"nodeType": "YulTypedName",
														"src": "5191:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5203:6:7",
														"nodeType": "YulTypedName",
														"src": "5203:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5214:4:7",
														"nodeType": "YulTypedName",
														"src": "5214:4:7",
														"type": ""
													}
												],
												"src": "5121:222:7"
											},
											{
												"body": {
													"nativeSrc": "5449:519:7",
													"nodeType": "YulBlock",
													"src": "5449:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5495:83:7",
																"nodeType": "YulBlock",
																"src": "5495:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5497:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5497:77:7"
																			},
																			"nativeSrc": "5497:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5497:79:7"
																		},
																		"nativeSrc": "5497:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5497:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5470:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5470:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5479:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5479:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:7"
																		},
																		"nativeSrc": "5466:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5466:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5491:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5491:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5462:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:7"
																},
																"nativeSrc": "5462:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5462:32:7"
															},
															"nativeSrc": "5459:119:7",
															"nodeType": "YulIf",
															"src": "5459:119:7"
														},
														{
															"nativeSrc": "5588:117:7",
															"nodeType": "YulBlock",
															"src": "5588:117:7",
															"statements": [
																{
																	"nativeSrc": "5603:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5603:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5617:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5617:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5607:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5607:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5632:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5632:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5667:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5667:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5678:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5678:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5663:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5663:3:7"
																				},
																				"nativeSrc": "5663:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5663:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5687:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5687:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5642:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5642:20:7"
																		},
																		"nativeSrc": "5642:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5632:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5632:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5715:118:7",
															"nodeType": "YulBlock",
															"src": "5715:118:7",
															"statements": [
																{
																	"nativeSrc": "5730:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5730:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5744:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5734:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5734:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5760:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5760:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5795:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5795:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5806:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5806:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5791:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:7"
																				},
																				"nativeSrc": "5791:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5791:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5815:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5815:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5770:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5770:20:7"
																		},
																		"nativeSrc": "5770:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5770:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5760:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5760:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5843:118:7",
															"nodeType": "YulBlock",
															"src": "5843:118:7",
															"statements": [
																{
																	"nativeSrc": "5858:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5858:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5872:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5862:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5862:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5888:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5888:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5923:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5923:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5934:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5934:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5919:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5919:3:7"
																				},
																				"nativeSrc": "5919:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5919:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5943:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5898:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5898:20:7"
																		},
																		"nativeSrc": "5898:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5898:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5888:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5888:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5349:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5403:9:7",
														"nodeType": "YulTypedName",
														"src": "5403:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5414:7:7",
														"nodeType": "YulTypedName",
														"src": "5414:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5426:6:7",
														"nodeType": "YulTypedName",
														"src": "5426:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5434:6:7",
														"nodeType": "YulTypedName",
														"src": "5434:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5442:6:7",
														"nodeType": "YulTypedName",
														"src": "5442:6:7",
														"type": ""
													}
												],
												"src": "5349:619:7"
											},
											{
												"body": {
													"nativeSrc": "6017:43:7",
													"nodeType": "YulBlock",
													"src": "6017:43:7",
													"statements": [
														{
															"nativeSrc": "6027:27:7",
															"nodeType": "YulAssignment",
															"src": "6027:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6042:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6042:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6049:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6049:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6038:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6038:3:7"
																},
																"nativeSrc": "6038:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6038:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6027:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6027:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5974:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5999:5:7",
														"nodeType": "YulTypedName",
														"src": "5999:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6009:7:7",
														"nodeType": "YulTypedName",
														"src": "6009:7:7",
														"type": ""
													}
												],
												"src": "5974:86:7"
											},
											{
												"body": {
													"nativeSrc": "6127:51:7",
													"nodeType": "YulBlock",
													"src": "6127:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6144:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6144:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6165:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6165:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6149:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "6149:15:7"
																		},
																		"nativeSrc": "6149:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6149:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6137:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:7"
																},
																"nativeSrc": "6137:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6137:35:7"
															},
															"nativeSrc": "6137:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "6137:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6066:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6115:5:7",
														"nodeType": "YulTypedName",
														"src": "6115:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6122:3:7",
														"nodeType": "YulTypedName",
														"src": "6122:3:7",
														"type": ""
													}
												],
												"src": "6066:112:7"
											},
											{
												"body": {
													"nativeSrc": "6278:120:7",
													"nodeType": "YulBlock",
													"src": "6278:120:7",
													"statements": [
														{
															"nativeSrc": "6288:26:7",
															"nodeType": "YulAssignment",
															"src": "6288:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6300:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6300:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6311:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6311:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6296:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6296:3:7"
																},
																"nativeSrc": "6296:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6296:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6288:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6288:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6364:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6364:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6377:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6388:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6388:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6373:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:7"
																		},
																		"nativeSrc": "6373:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6373:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6324:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "6324:39:7"
																},
																"nativeSrc": "6324:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6324:67:7"
															},
															"nativeSrc": "6324:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "6324:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6184:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6250:9:7",
														"nodeType": "YulTypedName",
														"src": "6250:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6262:6:7",
														"nodeType": "YulTypedName",
														"src": "6262:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6273:4:7",
														"nodeType": "YulTypedName",
														"src": "6273:4:7",
														"type": ""
													}
												],
												"src": "6184:214:7"
											},
											{
												"body": {
													"nativeSrc": "6470:263:7",
													"nodeType": "YulBlock",
													"src": "6470:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6516:83:7",
																"nodeType": "YulBlock",
																"src": "6516:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6518:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6518:77:7"
																			},
																			"nativeSrc": "6518:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6518:79:7"
																		},
																		"nativeSrc": "6518:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6518:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6491:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6491:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6500:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6487:3:7"
																		},
																		"nativeSrc": "6487:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6487:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6512:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:7"
																},
																"nativeSrc": "6483:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6483:32:7"
															},
															"nativeSrc": "6480:119:7",
															"nodeType": "YulIf",
															"src": "6480:119:7"
														},
														{
															"nativeSrc": "6609:117:7",
															"nodeType": "YulBlock",
															"src": "6609:117:7",
															"statements": [
																{
																	"nativeSrc": "6624:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6624:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6638:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6628:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6628:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6653:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6653:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6688:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6688:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6699:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6699:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6684:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6684:3:7"
																				},
																				"nativeSrc": "6684:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6684:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6708:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6708:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6663:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6663:20:7"
																		},
																		"nativeSrc": "6663:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6663:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6653:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6653:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6404:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6440:9:7",
														"nodeType": "YulTypedName",
														"src": "6440:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6451:7:7",
														"nodeType": "YulTypedName",
														"src": "6451:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6463:6:7",
														"nodeType": "YulTypedName",
														"src": "6463:6:7",
														"type": ""
													}
												],
												"src": "6404:329:7"
											},
											{
												"body": {
													"nativeSrc": "6837:124:7",
													"nodeType": "YulBlock",
													"src": "6837:124:7",
													"statements": [
														{
															"nativeSrc": "6847:26:7",
															"nodeType": "YulAssignment",
															"src": "6847:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6859:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6855:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:7"
																},
																"nativeSrc": "6855:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6855:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6847:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6847:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6927:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6940:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6951:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:7"
																		},
																		"nativeSrc": "6936:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6883:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6883:43:7"
																},
																"nativeSrc": "6883:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6883:71:7"
															},
															"nativeSrc": "6883:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6883:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6739:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6809:9:7",
														"nodeType": "YulTypedName",
														"src": "6809:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6821:6:7",
														"nodeType": "YulTypedName",
														"src": "6821:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6832:4:7",
														"nodeType": "YulTypedName",
														"src": "6832:4:7",
														"type": ""
													}
												],
												"src": "6739:222:7"
											},
											{
												"body": {
													"nativeSrc": "7007:76:7",
													"nodeType": "YulBlock",
													"src": "7007:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7061:16:7",
																"nodeType": "YulBlock",
																"src": "7061:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7070:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7070:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7073:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7073:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7063:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7063:6:7"
																			},
																			"nativeSrc": "7063:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7063:12:7"
																		},
																		"nativeSrc": "7063:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7063:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7030:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7030:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7052:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7052:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7037:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "7037:14:7"
																				},
																				"nativeSrc": "7037:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7037:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7027:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7027:2:7"
																		},
																		"nativeSrc": "7027:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7027:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7020:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:7"
																},
																"nativeSrc": "7020:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7020:40:7"
															},
															"nativeSrc": "7017:60:7",
															"nodeType": "YulIf",
															"src": "7017:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6967:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7000:5:7",
														"nodeType": "YulTypedName",
														"src": "7000:5:7",
														"type": ""
													}
												],
												"src": "6967:116:7"
											},
											{
												"body": {
													"nativeSrc": "7138:84:7",
													"nodeType": "YulBlock",
													"src": "7138:84:7",
													"statements": [
														{
															"nativeSrc": "7148:29:7",
															"nodeType": "YulAssignment",
															"src": "7148:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7170:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7157:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "7157:12:7"
																},
																"nativeSrc": "7157:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7157:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7148:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7148:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7210:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7210:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7186:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "7186:23:7"
																},
																"nativeSrc": "7186:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7186:30:7"
															},
															"nativeSrc": "7186:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7186:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7089:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7116:6:7",
														"nodeType": "YulTypedName",
														"src": "7116:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7124:3:7",
														"nodeType": "YulTypedName",
														"src": "7124:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7132:5:7",
														"nodeType": "YulTypedName",
														"src": "7132:5:7",
														"type": ""
													}
												],
												"src": "7089:133:7"
											},
											{
												"body": {
													"nativeSrc": "7325:516:7",
													"nodeType": "YulBlock",
													"src": "7325:516:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7371:83:7",
																"nodeType": "YulBlock",
																"src": "7371:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7373:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7373:77:7"
																			},
																			"nativeSrc": "7373:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7373:79:7"
																		},
																		"nativeSrc": "7373:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7373:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7346:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7346:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7355:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7355:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7342:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:7"
																		},
																		"nativeSrc": "7342:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7342:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7367:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7338:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7338:3:7"
																},
																"nativeSrc": "7338:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7338:32:7"
															},
															"nativeSrc": "7335:119:7",
															"nodeType": "YulIf",
															"src": "7335:119:7"
														},
														{
															"nativeSrc": "7464:117:7",
															"nodeType": "YulBlock",
															"src": "7464:117:7",
															"statements": [
																{
																	"nativeSrc": "7479:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7479:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7493:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7493:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7483:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7483:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7508:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7508:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7543:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7543:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7554:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7554:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7539:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7539:3:7"
																				},
																				"nativeSrc": "7539:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7539:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7563:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7563:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7518:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7518:20:7"
																		},
																		"nativeSrc": "7518:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7518:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7508:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7508:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7591:118:7",
															"nodeType": "YulBlock",
															"src": "7591:118:7",
															"statements": [
																{
																	"nativeSrc": "7606:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7606:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7620:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7620:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7610:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7610:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7636:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7636:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7671:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7671:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7682:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7682:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7667:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7667:3:7"
																				},
																				"nativeSrc": "7667:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7667:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7691:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7691:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7646:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7646:20:7"
																		},
																		"nativeSrc": "7646:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7646:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7636:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7636:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7719:115:7",
															"nodeType": "YulBlock",
															"src": "7719:115:7",
															"statements": [
																{
																	"nativeSrc": "7734:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7734:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7748:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7748:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7738:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7738:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7764:60:7",
																	"nodeType": "YulAssignment",
																	"src": "7764:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7796:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7796:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7807:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7807:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7792:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7792:3:7"
																				},
																				"nativeSrc": "7792:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7792:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7816:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7816:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7774:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7774:17:7"
																		},
																		"nativeSrc": "7774:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7774:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7764:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7764:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bool",
												"nativeSrc": "7228:613:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7279:9:7",
														"nodeType": "YulTypedName",
														"src": "7279:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7290:7:7",
														"nodeType": "YulTypedName",
														"src": "7290:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7302:6:7",
														"nodeType": "YulTypedName",
														"src": "7302:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7310:6:7",
														"nodeType": "YulTypedName",
														"src": "7310:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7318:6:7",
														"nodeType": "YulTypedName",
														"src": "7318:6:7",
														"type": ""
													}
												],
												"src": "7228:613:7"
											},
											{
												"body": {
													"nativeSrc": "7927:388:7",
													"nodeType": "YulBlock",
													"src": "7927:388:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7973:83:7",
																"nodeType": "YulBlock",
																"src": "7973:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7975:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7975:77:7"
																			},
																			"nativeSrc": "7975:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7975:79:7"
																		},
																		"nativeSrc": "7975:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7975:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7948:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7948:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7957:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7944:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:7"
																		},
																		"nativeSrc": "7944:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7944:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7969:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7969:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7940:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7940:3:7"
																},
																"nativeSrc": "7940:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7940:32:7"
															},
															"nativeSrc": "7937:119:7",
															"nodeType": "YulIf",
															"src": "7937:119:7"
														},
														{
															"nativeSrc": "8066:117:7",
															"nodeType": "YulBlock",
															"src": "8066:117:7",
															"statements": [
																{
																	"nativeSrc": "8081:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8081:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8095:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8095:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8085:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8085:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8110:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8110:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8145:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8145:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8156:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8156:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8141:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8141:3:7"
																				},
																				"nativeSrc": "8141:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8141:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8165:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8165:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8120:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8120:20:7"
																		},
																		"nativeSrc": "8120:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8120:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8110:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8110:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8193:115:7",
															"nodeType": "YulBlock",
															"src": "8193:115:7",
															"statements": [
																{
																	"nativeSrc": "8208:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8208:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8222:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8222:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8212:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8212:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8238:60:7",
																	"nodeType": "YulAssignment",
																	"src": "8238:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8270:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8270:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8281:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8281:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8266:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8266:3:7"
																				},
																				"nativeSrc": "8266:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8266:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8290:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8290:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8248:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8248:17:7"
																		},
																		"nativeSrc": "8248:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8248:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8238:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8238:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "7847:468:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7889:9:7",
														"nodeType": "YulTypedName",
														"src": "7889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7900:7:7",
														"nodeType": "YulTypedName",
														"src": "7900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7912:6:7",
														"nodeType": "YulTypedName",
														"src": "7912:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7920:6:7",
														"nodeType": "YulTypedName",
														"src": "7920:6:7",
														"type": ""
													}
												],
												"src": "7847:468:7"
											},
											{
												"body": {
													"nativeSrc": "8404:391:7",
													"nodeType": "YulBlock",
													"src": "8404:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8450:83:7",
																"nodeType": "YulBlock",
																"src": "8450:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8452:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8452:77:7"
																			},
																			"nativeSrc": "8452:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8452:79:7"
																		},
																		"nativeSrc": "8452:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8452:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8425:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8425:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8434:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8434:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8421:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:7"
																		},
																		"nativeSrc": "8421:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8421:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8446:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8417:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8417:3:7"
																},
																"nativeSrc": "8417:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8417:32:7"
															},
															"nativeSrc": "8414:119:7",
															"nodeType": "YulIf",
															"src": "8414:119:7"
														},
														{
															"nativeSrc": "8543:117:7",
															"nodeType": "YulBlock",
															"src": "8543:117:7",
															"statements": [
																{
																	"nativeSrc": "8558:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8558:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8572:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8572:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8562:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8562:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8587:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8587:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8622:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8622:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8633:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8633:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8618:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8618:3:7"
																				},
																				"nativeSrc": "8618:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8618:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8642:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8642:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8597:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8597:20:7"
																		},
																		"nativeSrc": "8597:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8597:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8587:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8587:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8670:118:7",
															"nodeType": "YulBlock",
															"src": "8670:118:7",
															"statements": [
																{
																	"nativeSrc": "8685:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8685:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8699:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8699:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8689:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8689:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8715:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8715:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8750:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8750:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8761:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8761:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8746:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8746:3:7"
																				},
																				"nativeSrc": "8746:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8746:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8770:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8770:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8725:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8725:20:7"
																		},
																		"nativeSrc": "8725:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8725:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8715:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8715:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8321:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8366:9:7",
														"nodeType": "YulTypedName",
														"src": "8366:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8377:7:7",
														"nodeType": "YulTypedName",
														"src": "8377:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8389:6:7",
														"nodeType": "YulTypedName",
														"src": "8389:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8397:6:7",
														"nodeType": "YulTypedName",
														"src": "8397:6:7",
														"type": ""
													}
												],
												"src": "8321:474:7"
											},
											{
												"body": {
													"nativeSrc": "8829:152:7",
													"nodeType": "YulBlock",
													"src": "8829:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8846:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8846:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8849:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8849:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8839:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:7"
																},
																"nativeSrc": "8839:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8839:88:7"
															},
															"nativeSrc": "8839:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8839:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8943:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8943:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8946:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8946:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:7"
																},
																"nativeSrc": "8936:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8936:15:7"
															},
															"nativeSrc": "8936:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8936:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8967:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8967:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8970:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8970:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8960:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8960:6:7"
																},
																"nativeSrc": "8960:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8960:15:7"
															},
															"nativeSrc": "8960:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8960:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8801:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8801:180:7"
											},
											{
												"body": {
													"nativeSrc": "9038:269:7",
													"nodeType": "YulBlock",
													"src": "9038:269:7",
													"statements": [
														{
															"nativeSrc": "9048:22:7",
															"nodeType": "YulAssignment",
															"src": "9048:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9062:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9062:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9068:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9058:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9058:3:7"
																},
																"nativeSrc": "9058:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9058:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:7"
																}
															]
														},
														{
															"nativeSrc": "9079:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9079:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9109:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9109:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9115:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9115:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9105:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9105:3:7"
																},
																"nativeSrc": "9105:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9105:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9083:18:7",
																	"nodeType": "YulTypedName",
																	"src": "9083:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9156:51:7",
																"nodeType": "YulBlock",
																"src": "9156:51:7",
																"statements": [
																	{
																		"nativeSrc": "9170:27:7",
																		"nodeType": "YulAssignment",
																		"src": "9170:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9184:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9184:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9192:4:7",
																					"nodeType": "YulLiteral",
																					"src": "9192:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9180:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9180:3:7"
																			},
																			"nativeSrc": "9180:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9180:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9170:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9170:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9136:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "9136:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9129:6:7"
																},
																"nativeSrc": "9129:26:7",
																"nodeType": "YulFunctionCall",
																"src": "9129:26:7"
															},
															"nativeSrc": "9126:81:7",
															"nodeType": "YulIf",
															"src": "9126:81:7"
														},
														{
															"body": {
																"nativeSrc": "9259:42:7",
																"nodeType": "YulBlock",
																"src": "9259:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9273:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9273:16:7"
																			},
																			"nativeSrc": "9273:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9273:18:7"
																		},
																		"nativeSrc": "9273:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9273:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9223:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "9223:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9246:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9246:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9254:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9243:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9243:2:7"
																		},
																		"nativeSrc": "9243:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9243:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9220:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9220:2:7"
																},
																"nativeSrc": "9220:38:7",
																"nodeType": "YulFunctionCall",
																"src": "9220:38:7"
															},
															"nativeSrc": "9217:84:7",
															"nodeType": "YulIf",
															"src": "9217:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8987:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9022:4:7",
														"nodeType": "YulTypedName",
														"src": "9022:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9031:6:7",
														"nodeType": "YulTypedName",
														"src": "9031:6:7",
														"type": ""
													}
												],
												"src": "8987:320:7"
											},
											{
												"body": {
													"nativeSrc": "9419:76:7",
													"nodeType": "YulBlock",
													"src": "9419:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9441:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9441:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9449:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9449:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:7"
																		},
																		"nativeSrc": "9437:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:14:7"
																	},
																	{
																		"hexValue": "457865637574696f6e20706572696f6420686173206e6f742073746172746564",
																		"kind": "string",
																		"nativeSrc": "9453:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9453:34:7",
																		"type": "",
																		"value": "Execution period has not started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9430:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9430:6:7"
																},
																"nativeSrc": "9430:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9430:58:7"
															},
															"nativeSrc": "9430:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9430:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4",
												"nativeSrc": "9313:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9411:6:7",
														"nodeType": "YulTypedName",
														"src": "9411:6:7",
														"type": ""
													}
												],
												"src": "9313:182:7"
											},
											{
												"body": {
													"nativeSrc": "9647:220:7",
													"nodeType": "YulBlock",
													"src": "9647:220:7",
													"statements": [
														{
															"nativeSrc": "9657:74:7",
															"nodeType": "YulAssignment",
															"src": "9657:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9723:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9723:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9728:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9728:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9664:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9664:58:7"
																},
																"nativeSrc": "9664:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9664:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9657:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9657:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9829:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9829:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4",
																	"nativeSrc": "9740:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9740:88:7"
																},
																"nativeSrc": "9740:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9740:93:7"
															},
															"nativeSrc": "9740:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9740:93:7"
														},
														{
															"nativeSrc": "9842:19:7",
															"nodeType": "YulAssignment",
															"src": "9842:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9853:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9853:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9858:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9849:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9849:3:7"
																},
																"nativeSrc": "9849:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9849:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9842:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9842:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9501:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9635:3:7",
														"nodeType": "YulTypedName",
														"src": "9635:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9643:3:7",
														"nodeType": "YulTypedName",
														"src": "9643:3:7",
														"type": ""
													}
												],
												"src": "9501:366:7"
											},
											{
												"body": {
													"nativeSrc": "10044:248:7",
													"nodeType": "YulBlock",
													"src": "10044:248:7",
													"statements": [
														{
															"nativeSrc": "10054:26:7",
															"nodeType": "YulAssignment",
															"src": "10054:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10066:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10066:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10077:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:7"
																},
																"nativeSrc": "10062:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10062:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10054:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10054:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10101:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10101:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10112:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10112:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10097:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:7"
																		},
																		"nativeSrc": "10097:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10097:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10120:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10120:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10126:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10126:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10116:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10116:3:7"
																		},
																		"nativeSrc": "10116:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10116:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:7"
																},
																"nativeSrc": "10090:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10090:47:7"
															},
															"nativeSrc": "10090:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10090:47:7"
														},
														{
															"nativeSrc": "10146:139:7",
															"nodeType": "YulAssignment",
															"src": "10146:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10280:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10280:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10154:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10154:124:7"
																},
																"nativeSrc": "10154:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10154:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10146:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10146:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9873:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10024:9:7",
														"nodeType": "YulTypedName",
														"src": "10024:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10039:4:7",
														"nodeType": "YulTypedName",
														"src": "10039:4:7",
														"type": ""
													}
												],
												"src": "9873:419:7"
											},
											{
												"body": {
													"nativeSrc": "10404:69:7",
													"nodeType": "YulBlock",
													"src": "10404:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10426:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10426:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10434:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10434:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10422:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10422:3:7"
																		},
																		"nativeSrc": "10422:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10422:14:7"
																	},
																	{
																		"hexValue": "50726f706f73616c20616c7265616479206578656375746564",
																		"kind": "string",
																		"nativeSrc": "10438:27:7",
																		"nodeType": "YulLiteral",
																		"src": "10438:27:7",
																		"type": "",
																		"value": "Proposal already executed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10415:6:7"
																},
																"nativeSrc": "10415:51:7",
																"nodeType": "YulFunctionCall",
																"src": "10415:51:7"
															},
															"nativeSrc": "10415:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "10415:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd",
												"nativeSrc": "10298:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10396:6:7",
														"nodeType": "YulTypedName",
														"src": "10396:6:7",
														"type": ""
													}
												],
												"src": "10298:175:7"
											},
											{
												"body": {
													"nativeSrc": "10625:220:7",
													"nodeType": "YulBlock",
													"src": "10625:220:7",
													"statements": [
														{
															"nativeSrc": "10635:74:7",
															"nodeType": "YulAssignment",
															"src": "10635:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10701:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10701:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10706:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10706:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10642:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10642:58:7"
																},
																"nativeSrc": "10642:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10642:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10635:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10807:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10807:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd",
																	"nativeSrc": "10718:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10718:88:7"
																},
																"nativeSrc": "10718:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10718:93:7"
															},
															"nativeSrc": "10718:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10718:93:7"
														},
														{
															"nativeSrc": "10820:19:7",
															"nodeType": "YulAssignment",
															"src": "10820:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10831:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10831:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10836:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10836:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10827:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10827:3:7"
																},
																"nativeSrc": "10827:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10827:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10820:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10820:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10479:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10613:3:7",
														"nodeType": "YulTypedName",
														"src": "10613:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10621:3:7",
														"nodeType": "YulTypedName",
														"src": "10621:3:7",
														"type": ""
													}
												],
												"src": "10479:366:7"
											},
											{
												"body": {
													"nativeSrc": "11022:248:7",
													"nodeType": "YulBlock",
													"src": "11022:248:7",
													"statements": [
														{
															"nativeSrc": "11032:26:7",
															"nodeType": "YulAssignment",
															"src": "11032:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11044:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11044:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11055:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11055:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11040:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11040:3:7"
																},
																"nativeSrc": "11040:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11040:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11032:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11032:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11079:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11079:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11090:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11090:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11075:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11075:3:7"
																		},
																		"nativeSrc": "11075:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11075:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11098:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11098:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11104:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11104:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11094:3:7"
																		},
																		"nativeSrc": "11094:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11094:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11068:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11068:6:7"
																},
																"nativeSrc": "11068:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11068:47:7"
															},
															"nativeSrc": "11068:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11068:47:7"
														},
														{
															"nativeSrc": "11124:139:7",
															"nodeType": "YulAssignment",
															"src": "11124:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11258:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11258:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11132:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11132:124:7"
																},
																"nativeSrc": "11132:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11132:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11124:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11124:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10851:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11002:9:7",
														"nodeType": "YulTypedName",
														"src": "11002:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11017:4:7",
														"nodeType": "YulTypedName",
														"src": "11017:4:7",
														"type": ""
													}
												],
												"src": "10851:419:7"
											},
											{
												"body": {
													"nativeSrc": "11304:152:7",
													"nodeType": "YulBlock",
													"src": "11304:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11321:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11321:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11324:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11324:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11314:6:7"
																},
																"nativeSrc": "11314:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11314:88:7"
															},
															"nativeSrc": "11314:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11314:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11418:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11418:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11421:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11421:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11411:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11411:6:7"
																},
																"nativeSrc": "11411:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11411:15:7"
															},
															"nativeSrc": "11411:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11411:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11442:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11442:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11445:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11445:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11435:6:7"
																},
																"nativeSrc": "11435:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11435:15:7"
															},
															"nativeSrc": "11435:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11435:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11276:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11276:180:7"
											},
											{
												"body": {
													"nativeSrc": "11506:147:7",
													"nodeType": "YulBlock",
													"src": "11506:147:7",
													"statements": [
														{
															"nativeSrc": "11516:25:7",
															"nodeType": "YulAssignment",
															"src": "11516:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11539:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11539:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11521:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11521:17:7"
																},
																"nativeSrc": "11521:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11521:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11516:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11516:1:7"
																}
															]
														},
														{
															"nativeSrc": "11550:25:7",
															"nodeType": "YulAssignment",
															"src": "11550:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11573:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11573:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11555:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11555:17:7"
																},
																"nativeSrc": "11555:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11555:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11550:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11550:1:7"
																}
															]
														},
														{
															"nativeSrc": "11584:16:7",
															"nodeType": "YulAssignment",
															"src": "11584:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11595:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11595:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11598:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11598:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11591:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11591:3:7"
																},
																"nativeSrc": "11591:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11591:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11584:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11584:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11624:22:7",
																"nodeType": "YulBlock",
																"src": "11624:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11626:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11626:16:7"
																			},
																			"nativeSrc": "11626:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11626:18:7"
																		},
																		"nativeSrc": "11626:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11626:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11616:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11616:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11619:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11619:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11613:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11613:2:7"
																},
																"nativeSrc": "11613:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11613:10:7"
															},
															"nativeSrc": "11610:36:7",
															"nodeType": "YulIf",
															"src": "11610:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11462:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11493:1:7",
														"nodeType": "YulTypedName",
														"src": "11493:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11496:1:7",
														"nodeType": "YulTypedName",
														"src": "11496:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11502:3:7",
														"nodeType": "YulTypedName",
														"src": "11502:3:7",
														"type": ""
													}
												],
												"src": "11462:191:7"
											},
											{
												"body": {
													"nativeSrc": "11707:362:7",
													"nodeType": "YulBlock",
													"src": "11707:362:7",
													"statements": [
														{
															"nativeSrc": "11717:25:7",
															"nodeType": "YulAssignment",
															"src": "11717:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11740:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11740:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11722:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11722:17:7"
																},
																"nativeSrc": "11722:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11722:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11717:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11717:1:7"
																}
															]
														},
														{
															"nativeSrc": "11751:25:7",
															"nodeType": "YulAssignment",
															"src": "11751:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11774:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11774:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11756:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11756:17:7"
																},
																"nativeSrc": "11756:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11756:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11751:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11751:1:7"
																}
															]
														},
														{
															"nativeSrc": "11785:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11785:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11808:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11808:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11811:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11811:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11804:3:7"
																},
																"nativeSrc": "11804:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11804:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11789:11:7",
																	"nodeType": "YulTypedName",
																	"src": "11789:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11822:41:7",
															"nodeType": "YulAssignment",
															"src": "11822:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11851:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "11851:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11833:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11833:17:7"
																},
																"nativeSrc": "11833:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11833:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11822:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11822:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12040:22:7",
																"nodeType": "YulBlock",
																"src": "12040:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12042:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12042:16:7"
																			},
																			"nativeSrc": "12042:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12042:18:7"
																		},
																		"nativeSrc": "12042:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12042:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11973:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11973:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11966:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11966:6:7"
																				},
																				"nativeSrc": "11966:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11966:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11996:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11996:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12003:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12003:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12012:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12012:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11999:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11999:3:7"
																						},
																						"nativeSrc": "11999:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11999:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11993:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11993:2:7"
																				},
																				"nativeSrc": "11993:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11993:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11946:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11946:2:7"
																		},
																		"nativeSrc": "11946:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11946:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11926:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11926:6:7"
																},
																"nativeSrc": "11926:113:7",
																"nodeType": "YulFunctionCall",
																"src": "11926:113:7"
															},
															"nativeSrc": "11923:139:7",
															"nodeType": "YulIf",
															"src": "11923:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11659:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11690:1:7",
														"nodeType": "YulTypedName",
														"src": "11690:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11693:1:7",
														"nodeType": "YulTypedName",
														"src": "11693:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11699:7:7",
														"nodeType": "YulTypedName",
														"src": "11699:7:7",
														"type": ""
													}
												],
												"src": "11659:410:7"
											},
											{
												"body": {
													"nativeSrc": "12103:152:7",
													"nodeType": "YulBlock",
													"src": "12103:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12120:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12120:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12123:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12123:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12113:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12113:6:7"
																},
																"nativeSrc": "12113:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12113:88:7"
															},
															"nativeSrc": "12113:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12113:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12217:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12217:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12220:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12220:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12210:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12210:6:7"
																},
																"nativeSrc": "12210:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12210:15:7"
															},
															"nativeSrc": "12210:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12210:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12241:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12241:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12244:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12244:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:7"
																},
																"nativeSrc": "12234:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12234:15:7"
															},
															"nativeSrc": "12234:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12234:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12075:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12075:180:7"
											},
											{
												"body": {
													"nativeSrc": "12303:143:7",
													"nodeType": "YulBlock",
													"src": "12303:143:7",
													"statements": [
														{
															"nativeSrc": "12313:25:7",
															"nodeType": "YulAssignment",
															"src": "12313:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12336:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12336:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12318:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12318:17:7"
																},
																"nativeSrc": "12318:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12318:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12313:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12313:1:7"
																}
															]
														},
														{
															"nativeSrc": "12347:25:7",
															"nodeType": "YulAssignment",
															"src": "12347:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12370:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12370:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12352:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12352:17:7"
																},
																"nativeSrc": "12352:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12352:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12347:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12347:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12394:22:7",
																"nodeType": "YulBlock",
																"src": "12394:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12396:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12396:16:7"
																			},
																			"nativeSrc": "12396:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12396:18:7"
																		},
																		"nativeSrc": "12396:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12396:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12391:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12391:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12384:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12384:6:7"
																},
																"nativeSrc": "12384:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12384:9:7"
															},
															"nativeSrc": "12381:35:7",
															"nodeType": "YulIf",
															"src": "12381:35:7"
														},
														{
															"nativeSrc": "12426:14:7",
															"nodeType": "YulAssignment",
															"src": "12426:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12435:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12435:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12438:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12438:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12431:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12431:3:7"
																},
																"nativeSrc": "12431:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12431:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12426:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12426:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12261:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12292:1:7",
														"nodeType": "YulTypedName",
														"src": "12292:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12295:1:7",
														"nodeType": "YulTypedName",
														"src": "12295:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12301:1:7",
														"nodeType": "YulTypedName",
														"src": "12301:1:7",
														"type": ""
													}
												],
												"src": "12261:185:7"
											},
											{
												"body": {
													"nativeSrc": "12558:70:7",
													"nodeType": "YulBlock",
													"src": "12558:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12580:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12580:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12588:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12588:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12576:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12576:3:7"
																		},
																		"nativeSrc": "12576:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12576:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "12592:28:7",
																		"nodeType": "YulLiteral",
																		"src": "12592:28:7",
																		"type": "",
																		"value": "Not enough balance to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12569:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12569:6:7"
																},
																"nativeSrc": "12569:52:7",
																"nodeType": "YulFunctionCall",
																"src": "12569:52:7"
															},
															"nativeSrc": "12569:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "12569:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a",
												"nativeSrc": "12452:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12550:6:7",
														"nodeType": "YulTypedName",
														"src": "12550:6:7",
														"type": ""
													}
												],
												"src": "12452:176:7"
											},
											{
												"body": {
													"nativeSrc": "12780:220:7",
													"nodeType": "YulBlock",
													"src": "12780:220:7",
													"statements": [
														{
															"nativeSrc": "12790:74:7",
															"nodeType": "YulAssignment",
															"src": "12790:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12856:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12856:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12861:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12861:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12797:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12797:58:7"
																},
																"nativeSrc": "12797:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12797:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12790:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12790:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12962:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12962:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a",
																	"nativeSrc": "12873:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12873:88:7"
																},
																"nativeSrc": "12873:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12873:93:7"
															},
															"nativeSrc": "12873:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12873:93:7"
														},
														{
															"nativeSrc": "12975:19:7",
															"nodeType": "YulAssignment",
															"src": "12975:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12986:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12986:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12991:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12991:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12982:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12982:3:7"
																},
																"nativeSrc": "12982:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12982:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12975:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12975:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12634:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12768:3:7",
														"nodeType": "YulTypedName",
														"src": "12768:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12776:3:7",
														"nodeType": "YulTypedName",
														"src": "12776:3:7",
														"type": ""
													}
												],
												"src": "12634:366:7"
											},
											{
												"body": {
													"nativeSrc": "13177:248:7",
													"nodeType": "YulBlock",
													"src": "13177:248:7",
													"statements": [
														{
															"nativeSrc": "13187:26:7",
															"nodeType": "YulAssignment",
															"src": "13187:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13199:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13199:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13210:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13210:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13195:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13195:3:7"
																},
																"nativeSrc": "13195:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13195:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13187:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13187:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13234:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13234:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13245:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13245:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13230:3:7"
																		},
																		"nativeSrc": "13230:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13230:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13253:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13253:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13259:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13259:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:7"
																		},
																		"nativeSrc": "13249:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13249:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13223:6:7"
																},
																"nativeSrc": "13223:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13223:47:7"
															},
															"nativeSrc": "13223:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13223:47:7"
														},
														{
															"nativeSrc": "13279:139:7",
															"nodeType": "YulAssignment",
															"src": "13279:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13413:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13413:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13287:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13287:124:7"
																},
																"nativeSrc": "13287:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13287:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13279:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13279:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13006:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13157:9:7",
														"nodeType": "YulTypedName",
														"src": "13157:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13172:4:7",
														"nodeType": "YulTypedName",
														"src": "13172:4:7",
														"type": ""
													}
												],
												"src": "13006:419:7"
											},
											{
												"body": {
													"nativeSrc": "13537:70:7",
													"nodeType": "YulBlock",
													"src": "13537:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13559:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13559:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13567:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13567:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13555:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:7"
																		},
																		"nativeSrc": "13555:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13555:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f206275726e",
																		"kind": "string",
																		"nativeSrc": "13571:28:7",
																		"nodeType": "YulLiteral",
																		"src": "13571:28:7",
																		"type": "",
																		"value": "Not enough balance to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13548:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:7"
																},
																"nativeSrc": "13548:52:7",
																"nodeType": "YulFunctionCall",
																"src": "13548:52:7"
															},
															"nativeSrc": "13548:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "13548:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058",
												"nativeSrc": "13431:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13529:6:7",
														"nodeType": "YulTypedName",
														"src": "13529:6:7",
														"type": ""
													}
												],
												"src": "13431:176:7"
											},
											{
												"body": {
													"nativeSrc": "13759:220:7",
													"nodeType": "YulBlock",
													"src": "13759:220:7",
													"statements": [
														{
															"nativeSrc": "13769:74:7",
															"nodeType": "YulAssignment",
															"src": "13769:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13835:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13835:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13840:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13840:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13776:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13776:58:7"
																},
																"nativeSrc": "13776:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13776:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13769:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13941:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13941:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058",
																	"nativeSrc": "13852:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13852:88:7"
																},
																"nativeSrc": "13852:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13852:93:7"
															},
															"nativeSrc": "13852:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13852:93:7"
														},
														{
															"nativeSrc": "13954:19:7",
															"nodeType": "YulAssignment",
															"src": "13954:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13965:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13965:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13970:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13970:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13961:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13961:3:7"
																},
																"nativeSrc": "13961:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13961:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13954:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13954:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13613:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13747:3:7",
														"nodeType": "YulTypedName",
														"src": "13747:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13755:3:7",
														"nodeType": "YulTypedName",
														"src": "13755:3:7",
														"type": ""
													}
												],
												"src": "13613:366:7"
											},
											{
												"body": {
													"nativeSrc": "14156:248:7",
													"nodeType": "YulBlock",
													"src": "14156:248:7",
													"statements": [
														{
															"nativeSrc": "14166:26:7",
															"nodeType": "YulAssignment",
															"src": "14166:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14178:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14178:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14174:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14174:3:7"
																},
																"nativeSrc": "14174:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14174:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14166:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14213:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14213:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14224:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14224:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14209:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14209:3:7"
																		},
																		"nativeSrc": "14209:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14209:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14232:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14232:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14238:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14238:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14228:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14228:3:7"
																		},
																		"nativeSrc": "14228:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14228:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14202:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14202:6:7"
																},
																"nativeSrc": "14202:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14202:47:7"
															},
															"nativeSrc": "14202:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14202:47:7"
														},
														{
															"nativeSrc": "14258:139:7",
															"nodeType": "YulAssignment",
															"src": "14258:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14392:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14392:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14266:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14266:124:7"
																},
																"nativeSrc": "14266:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14266:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14258:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14258:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13985:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14136:9:7",
														"nodeType": "YulTypedName",
														"src": "14136:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14151:4:7",
														"nodeType": "YulTypedName",
														"src": "14151:4:7",
														"type": ""
													}
												],
												"src": "13985:419:7"
											},
											{
												"body": {
													"nativeSrc": "14516:121:7",
													"nodeType": "YulBlock",
													"src": "14516:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14538:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14538:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14546:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14546:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14534:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14534:3:7"
																		},
																		"nativeSrc": "14534:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14534:14:7"
																	},
																	{
																		"hexValue": "50726f706f73616c20646964206e6f74206d656574206d616a6f726974792074",
																		"kind": "string",
																		"nativeSrc": "14550:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14550:34:7",
																		"type": "",
																		"value": "Proposal did not meet majority t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14527:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14527:6:7"
																},
																"nativeSrc": "14527:58:7",
																"nodeType": "YulFunctionCall",
																"src": "14527:58:7"
															},
															"nativeSrc": "14527:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "14527:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14606:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14606:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14614:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14614:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14602:3:7"
																		},
																		"nativeSrc": "14602:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14602:15:7"
																	},
																	{
																		"hexValue": "68726573686f6c64",
																		"kind": "string",
																		"nativeSrc": "14619:10:7",
																		"nodeType": "YulLiteral",
																		"src": "14619:10:7",
																		"type": "",
																		"value": "hreshold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14595:6:7"
																},
																"nativeSrc": "14595:35:7",
																"nodeType": "YulFunctionCall",
																"src": "14595:35:7"
															},
															"nativeSrc": "14595:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "14595:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3",
												"nativeSrc": "14410:227:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14508:6:7",
														"nodeType": "YulTypedName",
														"src": "14508:6:7",
														"type": ""
													}
												],
												"src": "14410:227:7"
											},
											{
												"body": {
													"nativeSrc": "14789:220:7",
													"nodeType": "YulBlock",
													"src": "14789:220:7",
													"statements": [
														{
															"nativeSrc": "14799:74:7",
															"nodeType": "YulAssignment",
															"src": "14799:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14865:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14865:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14870:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14870:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14806:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14806:58:7"
																},
																"nativeSrc": "14806:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14806:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14799:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14799:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14971:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14971:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3",
																	"nativeSrc": "14882:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14882:88:7"
																},
																"nativeSrc": "14882:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14882:93:7"
															},
															"nativeSrc": "14882:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14882:93:7"
														},
														{
															"nativeSrc": "14984:19:7",
															"nodeType": "YulAssignment",
															"src": "14984:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14995:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14995:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15000:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15000:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14991:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14991:3:7"
																},
																"nativeSrc": "14991:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14991:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14984:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14984:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14643:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14777:3:7",
														"nodeType": "YulTypedName",
														"src": "14777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14785:3:7",
														"nodeType": "YulTypedName",
														"src": "14785:3:7",
														"type": ""
													}
												],
												"src": "14643:366:7"
											},
											{
												"body": {
													"nativeSrc": "15186:248:7",
													"nodeType": "YulBlock",
													"src": "15186:248:7",
													"statements": [
														{
															"nativeSrc": "15196:26:7",
															"nodeType": "YulAssignment",
															"src": "15196:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15208:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15208:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15219:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15219:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15204:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15204:3:7"
																},
																"nativeSrc": "15204:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15204:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15196:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15196:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15243:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15243:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15254:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15254:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15239:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15239:3:7"
																		},
																		"nativeSrc": "15239:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15239:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15262:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15262:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15268:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15268:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15258:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15258:3:7"
																		},
																		"nativeSrc": "15258:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15258:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15232:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15232:6:7"
																},
																"nativeSrc": "15232:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15232:47:7"
															},
															"nativeSrc": "15232:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15232:47:7"
														},
														{
															"nativeSrc": "15288:139:7",
															"nodeType": "YulAssignment",
															"src": "15288:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15422:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15422:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15296:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15296:124:7"
																},
																"nativeSrc": "15296:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15296:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15288:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15288:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15015:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15166:9:7",
														"nodeType": "YulTypedName",
														"src": "15166:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15181:4:7",
														"nodeType": "YulTypedName",
														"src": "15181:4:7",
														"type": ""
													}
												],
												"src": "15015:419:7"
											},
											{
												"body": {
													"nativeSrc": "15483:190:7",
													"nodeType": "YulBlock",
													"src": "15483:190:7",
													"statements": [
														{
															"nativeSrc": "15493:33:7",
															"nodeType": "YulAssignment",
															"src": "15493:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15520:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15520:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15502:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15502:17:7"
																},
																"nativeSrc": "15502:24:7",
																"nodeType": "YulFunctionCall",
																"src": "15502:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15493:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15493:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15616:22:7",
																"nodeType": "YulBlock",
																"src": "15616:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15618:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15618:16:7"
																			},
																			"nativeSrc": "15618:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15618:18:7"
																		},
																		"nativeSrc": "15618:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15618:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15541:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15541:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15548:66:7",
																		"nodeType": "YulLiteral",
																		"src": "15548:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15538:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15538:2:7"
																},
																"nativeSrc": "15538:77:7",
																"nodeType": "YulFunctionCall",
																"src": "15538:77:7"
															},
															"nativeSrc": "15535:103:7",
															"nodeType": "YulIf",
															"src": "15535:103:7"
														},
														{
															"nativeSrc": "15647:20:7",
															"nodeType": "YulAssignment",
															"src": "15647:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15658:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15658:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15665:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15665:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15654:3:7"
																},
																"nativeSrc": "15654:13:7",
																"nodeType": "YulFunctionCall",
																"src": "15654:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15647:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15647:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15440:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15469:5:7",
														"nodeType": "YulTypedName",
														"src": "15469:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15479:3:7",
														"nodeType": "YulTypedName",
														"src": "15479:3:7",
														"type": ""
													}
												],
												"src": "15440:233:7"
											},
											{
												"body": {
													"nativeSrc": "15785:117:7",
													"nodeType": "YulBlock",
													"src": "15785:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15807:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15807:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15815:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15815:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15803:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15803:3:7"
																		},
																		"nativeSrc": "15803:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15803:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320746f206372656174652070726f70",
																		"kind": "string",
																		"nativeSrc": "15819:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15819:34:7",
																		"type": "",
																		"value": "Not enough tokens to create prop"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15796:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15796:6:7"
																},
																"nativeSrc": "15796:58:7",
																"nodeType": "YulFunctionCall",
																"src": "15796:58:7"
															},
															"nativeSrc": "15796:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "15796:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15875:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15875:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15883:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15883:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15871:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15871:3:7"
																		},
																		"nativeSrc": "15871:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15871:15:7"
																	},
																	{
																		"hexValue": "6f73616c",
																		"kind": "string",
																		"nativeSrc": "15888:6:7",
																		"nodeType": "YulLiteral",
																		"src": "15888:6:7",
																		"type": "",
																		"value": "osal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15864:6:7"
																},
																"nativeSrc": "15864:31:7",
																"nodeType": "YulFunctionCall",
																"src": "15864:31:7"
															},
															"nativeSrc": "15864:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "15864:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63",
												"nativeSrc": "15679:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15777:6:7",
														"nodeType": "YulTypedName",
														"src": "15777:6:7",
														"type": ""
													}
												],
												"src": "15679:223:7"
											},
											{
												"body": {
													"nativeSrc": "16054:220:7",
													"nodeType": "YulBlock",
													"src": "16054:220:7",
													"statements": [
														{
															"nativeSrc": "16064:74:7",
															"nodeType": "YulAssignment",
															"src": "16064:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16130:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16130:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16135:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16135:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16071:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16071:58:7"
																},
																"nativeSrc": "16071:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16071:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16064:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16236:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16236:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63",
																	"nativeSrc": "16147:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16147:88:7"
																},
																"nativeSrc": "16147:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16147:93:7"
															},
															"nativeSrc": "16147:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16147:93:7"
														},
														{
															"nativeSrc": "16249:19:7",
															"nodeType": "YulAssignment",
															"src": "16249:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16260:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16260:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16265:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16265:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16256:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16256:3:7"
																},
																"nativeSrc": "16256:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16256:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16249:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16249:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15908:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16042:3:7",
														"nodeType": "YulTypedName",
														"src": "16042:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16050:3:7",
														"nodeType": "YulTypedName",
														"src": "16050:3:7",
														"type": ""
													}
												],
												"src": "15908:366:7"
											},
											{
												"body": {
													"nativeSrc": "16451:248:7",
													"nodeType": "YulBlock",
													"src": "16451:248:7",
													"statements": [
														{
															"nativeSrc": "16461:26:7",
															"nodeType": "YulAssignment",
															"src": "16461:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16473:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16473:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16484:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16484:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16469:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16469:3:7"
																},
																"nativeSrc": "16469:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16469:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16461:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16461:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16508:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16508:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16519:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16519:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16504:3:7"
																		},
																		"nativeSrc": "16504:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16504:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16527:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16527:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16533:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16523:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16523:3:7"
																		},
																		"nativeSrc": "16523:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16523:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16497:6:7"
																},
																"nativeSrc": "16497:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16497:47:7"
															},
															"nativeSrc": "16497:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16497:47:7"
														},
														{
															"nativeSrc": "16553:139:7",
															"nodeType": "YulAssignment",
															"src": "16553:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16687:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16687:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16561:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16561:124:7"
																},
																"nativeSrc": "16561:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16561:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16553:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16553:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16280:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16431:9:7",
														"nodeType": "YulTypedName",
														"src": "16431:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16446:4:7",
														"nodeType": "YulTypedName",
														"src": "16446:4:7",
														"type": ""
													}
												],
												"src": "16280:419:7"
											},
											{
												"body": {
													"nativeSrc": "16811:66:7",
													"nodeType": "YulBlock",
													"src": "16811:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16833:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16833:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16841:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16841:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16829:3:7"
																		},
																		"nativeSrc": "16829:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16829:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207461726765742061646472657373",
																		"kind": "string",
																		"nativeSrc": "16845:24:7",
																		"nodeType": "YulLiteral",
																		"src": "16845:24:7",
																		"type": "",
																		"value": "Invalid target address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16822:6:7"
																},
																"nativeSrc": "16822:48:7",
																"nodeType": "YulFunctionCall",
																"src": "16822:48:7"
															},
															"nativeSrc": "16822:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "16822:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556",
												"nativeSrc": "16705:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16803:6:7",
														"nodeType": "YulTypedName",
														"src": "16803:6:7",
														"type": ""
													}
												],
												"src": "16705:172:7"
											},
											{
												"body": {
													"nativeSrc": "17029:220:7",
													"nodeType": "YulBlock",
													"src": "17029:220:7",
													"statements": [
														{
															"nativeSrc": "17039:74:7",
															"nodeType": "YulAssignment",
															"src": "17039:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17105:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17105:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17110:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17110:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17046:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17046:58:7"
																},
																"nativeSrc": "17046:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17046:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17039:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17039:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17211:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17211:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556",
																	"nativeSrc": "17122:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17122:88:7"
																},
																"nativeSrc": "17122:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17122:93:7"
															},
															"nativeSrc": "17122:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17122:93:7"
														},
														{
															"nativeSrc": "17224:19:7",
															"nodeType": "YulAssignment",
															"src": "17224:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17235:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17235:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17240:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17240:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17231:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17231:3:7"
																},
																"nativeSrc": "17231:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17231:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17224:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17224:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16883:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17017:3:7",
														"nodeType": "YulTypedName",
														"src": "17017:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17025:3:7",
														"nodeType": "YulTypedName",
														"src": "17025:3:7",
														"type": ""
													}
												],
												"src": "16883:366:7"
											},
											{
												"body": {
													"nativeSrc": "17426:248:7",
													"nodeType": "YulBlock",
													"src": "17426:248:7",
													"statements": [
														{
															"nativeSrc": "17436:26:7",
															"nodeType": "YulAssignment",
															"src": "17436:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17448:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17459:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17459:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17444:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17444:3:7"
																},
																"nativeSrc": "17444:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17444:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17436:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17436:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17483:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17483:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17494:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17494:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17479:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17479:3:7"
																		},
																		"nativeSrc": "17479:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17479:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17502:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17502:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17508:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17508:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17498:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17498:3:7"
																		},
																		"nativeSrc": "17498:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17498:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17472:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17472:6:7"
																},
																"nativeSrc": "17472:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17472:47:7"
															},
															"nativeSrc": "17472:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17472:47:7"
														},
														{
															"nativeSrc": "17528:139:7",
															"nodeType": "YulAssignment",
															"src": "17528:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17662:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17662:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17536:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17536:124:7"
																},
																"nativeSrc": "17536:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17536:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17528:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17528:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17255:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17406:9:7",
														"nodeType": "YulTypedName",
														"src": "17406:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17421:4:7",
														"nodeType": "YulTypedName",
														"src": "17421:4:7",
														"type": ""
													}
												],
												"src": "17255:419:7"
											},
											{
												"body": {
													"nativeSrc": "17884:448:7",
													"nodeType": "YulBlock",
													"src": "17884:448:7",
													"statements": [
														{
															"nativeSrc": "17894:27:7",
															"nodeType": "YulAssignment",
															"src": "17894:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17906:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17906:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17917:3:7",
																		"nodeType": "YulLiteral",
																		"src": "17917:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17902:3:7"
																},
																"nativeSrc": "17902:19:7",
																"nodeType": "YulFunctionCall",
																"src": "17902:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17894:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17894:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17975:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17975:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17988:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17988:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17999:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17999:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17984:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17984:3:7"
																		},
																		"nativeSrc": "17984:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17984:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17931:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17931:43:7"
																},
																"nativeSrc": "17931:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17931:71:7"
															},
															"nativeSrc": "17931:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17931:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18056:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18056:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18069:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18069:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18080:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18080:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18065:3:7"
																		},
																		"nativeSrc": "18065:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18065:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18012:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18012:43:7"
																},
																"nativeSrc": "18012:72:7",
																"nodeType": "YulFunctionCall",
																"src": "18012:72:7"
															},
															"nativeSrc": "18012:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "18012:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18138:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18138:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18151:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18151:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18162:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18162:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18147:3:7"
																		},
																		"nativeSrc": "18147:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18147:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18094:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18094:43:7"
																},
																"nativeSrc": "18094:72:7",
																"nodeType": "YulFunctionCall",
																"src": "18094:72:7"
															},
															"nativeSrc": "18094:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "18094:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18220:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18220:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18233:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18233:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18244:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18244:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18229:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18229:3:7"
																		},
																		"nativeSrc": "18229:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18229:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18176:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18176:43:7"
																},
																"nativeSrc": "18176:72:7",
																"nodeType": "YulFunctionCall",
																"src": "18176:72:7"
															},
															"nativeSrc": "18176:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "18176:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "18296:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18296:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18309:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18309:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18320:3:7",
																				"nodeType": "YulLiteral",
																				"src": "18320:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18305:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18305:3:7"
																		},
																		"nativeSrc": "18305:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18305:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "18258:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "18258:37:7"
																},
																"nativeSrc": "18258:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18258:67:7"
															},
															"nativeSrc": "18258:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "18258:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "17680:652:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17824:9:7",
														"nodeType": "YulTypedName",
														"src": "17824:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17836:6:7",
														"nodeType": "YulTypedName",
														"src": "17836:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17844:6:7",
														"nodeType": "YulTypedName",
														"src": "17844:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17852:6:7",
														"nodeType": "YulTypedName",
														"src": "17852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17860:6:7",
														"nodeType": "YulTypedName",
														"src": "17860:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17868:6:7",
														"nodeType": "YulTypedName",
														"src": "17868:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17879:4:7",
														"nodeType": "YulTypedName",
														"src": "17879:4:7",
														"type": ""
													}
												],
												"src": "17680:652:7"
											},
											{
												"body": {
													"nativeSrc": "18444:73:7",
													"nodeType": "YulBlock",
													"src": "18444:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18466:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18474:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18474:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18462:3:7"
																		},
																		"nativeSrc": "18462:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18462:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220647572696e6720766f74696e67",
																		"kind": "string",
																		"nativeSrc": "18478:31:7",
																		"nodeType": "YulLiteral",
																		"src": "18478:31:7",
																		"type": "",
																		"value": "Cannot transfer during voting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18455:6:7"
																},
																"nativeSrc": "18455:55:7",
																"nodeType": "YulFunctionCall",
																"src": "18455:55:7"
															},
															"nativeSrc": "18455:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "18455:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf",
												"nativeSrc": "18338:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18436:6:7",
														"nodeType": "YulTypedName",
														"src": "18436:6:7",
														"type": ""
													}
												],
												"src": "18338:179:7"
											},
											{
												"body": {
													"nativeSrc": "18669:220:7",
													"nodeType": "YulBlock",
													"src": "18669:220:7",
													"statements": [
														{
															"nativeSrc": "18679:74:7",
															"nodeType": "YulAssignment",
															"src": "18679:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18745:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18745:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18750:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18750:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18686:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18686:58:7"
																},
																"nativeSrc": "18686:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18686:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18679:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18851:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf",
																	"nativeSrc": "18762:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18762:88:7"
																},
																"nativeSrc": "18762:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18762:93:7"
															},
															"nativeSrc": "18762:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18762:93:7"
														},
														{
															"nativeSrc": "18864:19:7",
															"nodeType": "YulAssignment",
															"src": "18864:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18875:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18875:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18880:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18871:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18871:3:7"
																},
																"nativeSrc": "18871:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18871:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18864:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18523:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18657:3:7",
														"nodeType": "YulTypedName",
														"src": "18657:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18665:3:7",
														"nodeType": "YulTypedName",
														"src": "18665:3:7",
														"type": ""
													}
												],
												"src": "18523:366:7"
											},
											{
												"body": {
													"nativeSrc": "19066:248:7",
													"nodeType": "YulBlock",
													"src": "19066:248:7",
													"statements": [
														{
															"nativeSrc": "19076:26:7",
															"nodeType": "YulAssignment",
															"src": "19076:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19088:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19088:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19099:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19099:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19084:3:7"
																},
																"nativeSrc": "19084:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19084:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19076:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19076:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19123:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19134:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19134:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19119:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19119:3:7"
																		},
																		"nativeSrc": "19119:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19119:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19142:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19142:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19148:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19148:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19138:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19138:3:7"
																		},
																		"nativeSrc": "19138:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19138:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19112:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19112:6:7"
																},
																"nativeSrc": "19112:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19112:47:7"
															},
															"nativeSrc": "19112:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19112:47:7"
														},
														{
															"nativeSrc": "19168:139:7",
															"nodeType": "YulAssignment",
															"src": "19168:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19302:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19302:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19176:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19176:124:7"
																},
																"nativeSrc": "19176:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19176:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19168:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19168:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18895:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19046:9:7",
														"nodeType": "YulTypedName",
														"src": "19046:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19061:4:7",
														"nodeType": "YulTypedName",
														"src": "19061:4:7",
														"type": ""
													}
												],
												"src": "18895:419:7"
											},
											{
												"body": {
													"nativeSrc": "19426:67:7",
													"nodeType": "YulBlock",
													"src": "19426:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19448:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19448:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19456:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19456:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19444:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19444:3:7"
																		},
																		"nativeSrc": "19444:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19444:14:7"
																	},
																	{
																		"hexValue": "566f74696e6720706572696f642068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "19460:25:7",
																		"nodeType": "YulLiteral",
																		"src": "19460:25:7",
																		"type": "",
																		"value": "Voting period has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19437:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19437:6:7"
																},
																"nativeSrc": "19437:49:7",
																"nodeType": "YulFunctionCall",
																"src": "19437:49:7"
															},
															"nativeSrc": "19437:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "19437:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58",
												"nativeSrc": "19320:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19418:6:7",
														"nodeType": "YulTypedName",
														"src": "19418:6:7",
														"type": ""
													}
												],
												"src": "19320:173:7"
											},
											{
												"body": {
													"nativeSrc": "19645:220:7",
													"nodeType": "YulBlock",
													"src": "19645:220:7",
													"statements": [
														{
															"nativeSrc": "19655:74:7",
															"nodeType": "YulAssignment",
															"src": "19655:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19721:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19721:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19726:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19662:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19662:58:7"
																},
																"nativeSrc": "19662:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19662:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19655:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19655:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19827:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19827:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58",
																	"nativeSrc": "19738:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19738:88:7"
																},
																"nativeSrc": "19738:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19738:93:7"
															},
															"nativeSrc": "19738:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19738:93:7"
														},
														{
															"nativeSrc": "19840:19:7",
															"nodeType": "YulAssignment",
															"src": "19840:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19851:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19856:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19856:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19847:3:7"
																},
																"nativeSrc": "19847:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19847:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19840:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19840:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19499:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19633:3:7",
														"nodeType": "YulTypedName",
														"src": "19633:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19641:3:7",
														"nodeType": "YulTypedName",
														"src": "19641:3:7",
														"type": ""
													}
												],
												"src": "19499:366:7"
											},
											{
												"body": {
													"nativeSrc": "20042:248:7",
													"nodeType": "YulBlock",
													"src": "20042:248:7",
													"statements": [
														{
															"nativeSrc": "20052:26:7",
															"nodeType": "YulAssignment",
															"src": "20052:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20064:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20064:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20075:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20075:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20060:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20060:3:7"
																},
																"nativeSrc": "20060:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20060:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20052:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20052:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20099:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20099:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20110:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20110:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20095:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20095:3:7"
																		},
																		"nativeSrc": "20095:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20095:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20118:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20118:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20124:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20124:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20114:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20114:3:7"
																		},
																		"nativeSrc": "20114:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20114:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20088:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20088:6:7"
																},
																"nativeSrc": "20088:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20088:47:7"
															},
															"nativeSrc": "20088:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20088:47:7"
														},
														{
															"nativeSrc": "20144:139:7",
															"nodeType": "YulAssignment",
															"src": "20144:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20278:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20278:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20152:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20152:124:7"
																},
																"nativeSrc": "20152:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20152:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20144:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20144:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19871:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20022:9:7",
														"nodeType": "YulTypedName",
														"src": "20022:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20037:4:7",
														"nodeType": "YulTypedName",
														"src": "20037:4:7",
														"type": ""
													}
												],
												"src": "19871:419:7"
											},
											{
												"body": {
													"nativeSrc": "20402:61:7",
													"nodeType": "YulBlock",
													"src": "20402:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20424:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20424:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20432:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20432:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20420:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20420:3:7"
																		},
																		"nativeSrc": "20420:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20420:14:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f20766f7465",
																		"kind": "string",
																		"nativeSrc": "20436:19:7",
																		"nodeType": "YulLiteral",
																		"src": "20436:19:7",
																		"type": "",
																		"value": "No tokens to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20413:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20413:6:7"
																},
																"nativeSrc": "20413:43:7",
																"nodeType": "YulFunctionCall",
																"src": "20413:43:7"
															},
															"nativeSrc": "20413:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "20413:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9",
												"nativeSrc": "20296:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20394:6:7",
														"nodeType": "YulTypedName",
														"src": "20394:6:7",
														"type": ""
													}
												],
												"src": "20296:167:7"
											},
											{
												"body": {
													"nativeSrc": "20615:220:7",
													"nodeType": "YulBlock",
													"src": "20615:220:7",
													"statements": [
														{
															"nativeSrc": "20625:74:7",
															"nodeType": "YulAssignment",
															"src": "20625:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20691:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20691:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20696:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20696:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20632:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "20632:58:7"
																},
																"nativeSrc": "20632:67:7",
																"nodeType": "YulFunctionCall",
																"src": "20632:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20625:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20625:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20797:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20797:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9",
																	"nativeSrc": "20708:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "20708:88:7"
																},
																"nativeSrc": "20708:93:7",
																"nodeType": "YulFunctionCall",
																"src": "20708:93:7"
															},
															"nativeSrc": "20708:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "20708:93:7"
														},
														{
															"nativeSrc": "20810:19:7",
															"nodeType": "YulAssignment",
															"src": "20810:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20821:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20826:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20826:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20817:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20817:3:7"
																},
																"nativeSrc": "20817:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20817:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20810:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20810:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20469:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20603:3:7",
														"nodeType": "YulTypedName",
														"src": "20603:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20611:3:7",
														"nodeType": "YulTypedName",
														"src": "20611:3:7",
														"type": ""
													}
												],
												"src": "20469:366:7"
											},
											{
												"body": {
													"nativeSrc": "21012:248:7",
													"nodeType": "YulBlock",
													"src": "21012:248:7",
													"statements": [
														{
															"nativeSrc": "21022:26:7",
															"nodeType": "YulAssignment",
															"src": "21022:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21034:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21034:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21045:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21045:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21030:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21030:3:7"
																},
																"nativeSrc": "21030:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21030:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21022:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21022:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21069:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21069:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21080:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21080:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21065:3:7"
																		},
																		"nativeSrc": "21065:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21065:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21088:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "21088:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21094:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21094:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21084:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21084:3:7"
																		},
																		"nativeSrc": "21084:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21084:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21058:6:7"
																},
																"nativeSrc": "21058:47:7",
																"nodeType": "YulFunctionCall",
																"src": "21058:47:7"
															},
															"nativeSrc": "21058:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "21058:47:7"
														},
														{
															"nativeSrc": "21114:139:7",
															"nodeType": "YulAssignment",
															"src": "21114:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21248:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21248:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21122:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "21122:124:7"
																},
																"nativeSrc": "21122:131:7",
																"nodeType": "YulFunctionCall",
																"src": "21122:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21114:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21114:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20841:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20992:9:7",
														"nodeType": "YulTypedName",
														"src": "20992:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21007:4:7",
														"nodeType": "YulTypedName",
														"src": "21007:4:7",
														"type": ""
													}
												],
												"src": "20841:419:7"
											},
											{
												"body": {
													"nativeSrc": "21372:57:7",
													"nodeType": "YulBlock",
													"src": "21372:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21394:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "21394:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21402:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21402:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21390:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21390:3:7"
																		},
																		"nativeSrc": "21390:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21390:14:7"
																	},
																	{
																		"hexValue": "416c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "21406:15:7",
																		"nodeType": "YulLiteral",
																		"src": "21406:15:7",
																		"type": "",
																		"value": "Already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21383:6:7"
																},
																"nativeSrc": "21383:39:7",
																"nodeType": "YulFunctionCall",
																"src": "21383:39:7"
															},
															"nativeSrc": "21383:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "21383:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
												"nativeSrc": "21266:163:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21364:6:7",
														"nodeType": "YulTypedName",
														"src": "21364:6:7",
														"type": ""
													}
												],
												"src": "21266:163:7"
											},
											{
												"body": {
													"nativeSrc": "21581:220:7",
													"nodeType": "YulBlock",
													"src": "21581:220:7",
													"statements": [
														{
															"nativeSrc": "21591:74:7",
															"nodeType": "YulAssignment",
															"src": "21591:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21657:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21657:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21662:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21662:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21598:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "21598:58:7"
																},
																"nativeSrc": "21598:67:7",
																"nodeType": "YulFunctionCall",
																"src": "21598:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21591:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21591:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21763:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21763:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																	"nativeSrc": "21674:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "21674:88:7"
																},
																"nativeSrc": "21674:93:7",
																"nodeType": "YulFunctionCall",
																"src": "21674:93:7"
															},
															"nativeSrc": "21674:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "21674:93:7"
														},
														{
															"nativeSrc": "21776:19:7",
															"nodeType": "YulAssignment",
															"src": "21776:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21787:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21787:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21792:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21792:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21783:3:7"
																},
																"nativeSrc": "21783:12:7",
																"nodeType": "YulFunctionCall",
																"src": "21783:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21776:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21435:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21569:3:7",
														"nodeType": "YulTypedName",
														"src": "21569:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21577:3:7",
														"nodeType": "YulTypedName",
														"src": "21577:3:7",
														"type": ""
													}
												],
												"src": "21435:366:7"
											},
											{
												"body": {
													"nativeSrc": "21978:248:7",
													"nodeType": "YulBlock",
													"src": "21978:248:7",
													"statements": [
														{
															"nativeSrc": "21988:26:7",
															"nodeType": "YulAssignment",
															"src": "21988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22000:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22000:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21996:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21996:3:7"
																},
																"nativeSrc": "21996:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21988:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22035:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22035:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22046:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22046:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22031:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22031:3:7"
																		},
																		"nativeSrc": "22031:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22031:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22054:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "22054:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22060:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22060:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22050:3:7"
																		},
																		"nativeSrc": "22050:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22050:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22024:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22024:6:7"
																},
																"nativeSrc": "22024:47:7",
																"nodeType": "YulFunctionCall",
																"src": "22024:47:7"
															},
															"nativeSrc": "22024:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "22024:47:7"
														},
														{
															"nativeSrc": "22080:139:7",
															"nodeType": "YulAssignment",
															"src": "22080:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22214:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22214:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22088:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "22088:124:7"
																},
																"nativeSrc": "22088:131:7",
																"nodeType": "YulFunctionCall",
																"src": "22088:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22080:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22080:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21807:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21958:9:7",
														"nodeType": "YulTypedName",
														"src": "21958:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21973:4:7",
														"nodeType": "YulTypedName",
														"src": "21973:4:7",
														"type": ""
													}
												],
												"src": "21807:419:7"
											},
											{
												"body": {
													"nativeSrc": "22380:282:7",
													"nodeType": "YulBlock",
													"src": "22380:282:7",
													"statements": [
														{
															"nativeSrc": "22390:26:7",
															"nodeType": "YulAssignment",
															"src": "22390:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22402:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22402:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22413:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22413:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22398:3:7"
																},
																"nativeSrc": "22398:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22398:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22390:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22390:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22470:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22470:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22483:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22483:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22494:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22494:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22479:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22479:3:7"
																		},
																		"nativeSrc": "22479:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22479:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22426:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22426:43:7"
																},
																"nativeSrc": "22426:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22426:71:7"
															},
															"nativeSrc": "22426:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22426:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22551:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22551:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22564:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22564:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22575:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22575:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22560:3:7"
																		},
																		"nativeSrc": "22560:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22560:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22507:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22507:43:7"
																},
																"nativeSrc": "22507:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22507:72:7"
															},
															"nativeSrc": "22507:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22507:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22651:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22651:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22636:3:7"
																		},
																		"nativeSrc": "22636:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22636:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "22589:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "22589:37:7"
																},
																"nativeSrc": "22589:66:7",
																"nodeType": "YulFunctionCall",
																"src": "22589:66:7"
															},
															"nativeSrc": "22589:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "22589:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "22232:430:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22336:9:7",
														"nodeType": "YulTypedName",
														"src": "22336:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22348:6:7",
														"nodeType": "YulTypedName",
														"src": "22348:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22356:6:7",
														"nodeType": "YulTypedName",
														"src": "22356:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22364:6:7",
														"nodeType": "YulTypedName",
														"src": "22364:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22375:4:7",
														"nodeType": "YulTypedName",
														"src": "22375:4:7",
														"type": ""
													}
												],
												"src": "22232:430:7"
											},
											{
												"body": {
													"nativeSrc": "22822:288:7",
													"nodeType": "YulBlock",
													"src": "22822:288:7",
													"statements": [
														{
															"nativeSrc": "22832:26:7",
															"nodeType": "YulAssignment",
															"src": "22832:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22844:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22844:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22855:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22855:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22840:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22840:3:7"
																},
																"nativeSrc": "22840:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22840:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22832:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22832:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22912:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22912:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22925:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22925:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22936:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22936:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22921:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22921:3:7"
																		},
																		"nativeSrc": "22921:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22921:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22868:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22868:43:7"
																},
																"nativeSrc": "22868:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22868:71:7"
															},
															"nativeSrc": "22868:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22868:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22993:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22993:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23006:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23006:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23017:2:7",
																				"nodeType": "YulLiteral",
																				"src": "23017:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23002:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23002:3:7"
																		},
																		"nativeSrc": "23002:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23002:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22949:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22949:43:7"
																},
																"nativeSrc": "22949:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22949:72:7"
															},
															"nativeSrc": "22949:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22949:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23075:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23075:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23088:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23088:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23099:2:7",
																				"nodeType": "YulLiteral",
																				"src": "23099:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23084:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23084:3:7"
																		},
																		"nativeSrc": "23084:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23084:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23031:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "23031:43:7"
																},
																"nativeSrc": "23031:72:7",
																"nodeType": "YulFunctionCall",
																"src": "23031:72:7"
															},
															"nativeSrc": "23031:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "23031:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22668:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22778:9:7",
														"nodeType": "YulTypedName",
														"src": "22778:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22790:6:7",
														"nodeType": "YulTypedName",
														"src": "22790:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22798:6:7",
														"nodeType": "YulTypedName",
														"src": "22798:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22806:6:7",
														"nodeType": "YulTypedName",
														"src": "22806:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22817:4:7",
														"nodeType": "YulTypedName",
														"src": "22817:4:7",
														"type": ""
													}
												],
												"src": "22668:442:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Execution period has not started\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal already executed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal did not meet majority t\")\n\n        mstore(add(memPtr, 32), \"hreshold\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens to create prop\")\n\n        mstore(add(memPtr, 32), \"osal\")\n\n    }\n\n    function abi_encode_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid target address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer during voting\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58(memPtr) {\n\n        mstore(add(memPtr, 0), \"Voting period has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to vote\")\n\n    }\n\n    function abi_encode_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already voted\")\n\n    }\n\n    function abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063bd31a4d81161007c578063bd31a4d814610348578063c9d27afe14610366578063da35c66414610382578063dd62ed3e146103a0578063f15c3fd4146103d0578063f2fde38b146103ee57610137565b8063715018a6146102b65780638da5cb5b146102c057806395d89b41146102de5780639713de52146102fc578063a9059cbb1461031857610137565b80631bbef399116100ff5780631bbef399146101fc57806323b872dd1461021a5780632615a6461461024a578063313ce5671461026857806370a082311461028657610137565b8063013cf08b1461013c57806306fdde0314610174578063095ea7b3146101925780630d61b519146101c257806318160ddd146101de575b600080fd5b6101566004803603810190610151919061182c565b61040a565b60405161016b999897969594939291906118c4565b60405180910390f35b61017c6104b2565b60405161018991906119e1565b60405180910390f35b6101ac60048036038101906101a79190611a2f565b610544565b6040516101b99190611a6f565b60405180910390f35b6101dc60048036038101906101d7919061182c565b610567565b005b6101e6610843565b6040516101f39190611a8a565b60405180910390f35b61020461084d565b6040516102119190611a6f565b60405180910390f35b610234600480360381019061022f9190611aa5565b6108dc565b6040516102419190611a6f565b60405180910390f35b61025261090b565b60405161025f9190611a8a565b60405180910390f35b610270610911565b60405161027d9190611b14565b60405180910390f35b6102a0600480360381019061029b9190611b2f565b61091a565b6040516102ad9190611a8a565b60405180910390f35b6102be610962565b005b6102c8610976565b6040516102d59190611b5c565b60405180910390f35b6102e66109a0565b6040516102f391906119e1565b60405180910390f35b61031660048036038101906103119190611ba3565b610a32565b005b610332600480360381019061032d9190611a2f565b610c30565b60405161033f9190611a6f565b60405180910390f35b610350610c8c565b60405161035d9190611a8a565b60405180910390f35b610380600480360381019061037b9190611bf6565b610c92565b005b61038a610ec6565b6040516103979190611a8a565b60405180910390f35b6103ba60048036038101906103b59190611c36565b610ecc565b6040516103c79190611a8a565b60405180910390f35b6103d8610f53565b6040516103e59190611a8a565b60405180910390f35b61040860048036038101906104039190611b2f565b610f59565b005b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff16905089565b6060600380546104c190611ca5565b80601f01602080910402602001604051908101604052809291908181526020018280546104ed90611ca5565b801561053a5780601f1061050f5761010080835404028352916020019161053a565b820191906000526020600020905b81548152906001019060200180831161051d57829003601f168201915b5050505050905090565b60008061054f610fdf565b905061055c818585610fe7565b600191505092915050565b600060076000838152602001908152602001600020905080600701544310156105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90611d22565b60405180910390fd5b8060030160009054906101000a900460ff1615610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90611d8e565b60405180910390fd5b60008160050154826004015461062d9190611ddd565b9050600060646033836106409190611e11565b61064a9190611e82565b9050808360040154106107ae578260080160009054906101000a900460ff16156107035782600201543073ffffffffffffffffffffffffffffffffffffffff163110156106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390611eff565b60405180910390fd5b6106fe8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460020154610ff9565b6107a9565b82600201546107358460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661091a565b1015610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90611f6b565b60405180910390fd5b6107a88360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846002015461107b565b5b6107e9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611ffd565b60405180910390fd5b60018360030160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f846040516108359190611a8a565b60405180910390a150505050565b6000600254905090565b600080600190505b60065481116108d35760085460076000838152602001908152602001600020600601546108829190611ddd565b431080156108b157506007600082815260200190815260200160002060030160009054906101000a900460ff16155b156108c05760019150506108d9565b80806108cb9061201d565b915050610855565b50600090505b90565b6000806108e7610fdf565b90506108f48582856110fd565b6108ff858585611191565b60019150509392505050565b60085481565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61096a611285565b610974600061130c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109af90611ca5565b80601f01602080910402602001604051908101604052809291908181526020018280546109db90611ca5565b8015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b5050505050905090565b600a54610a3e3361091a565b1015610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a76906120d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae590612143565b60405180910390fd5b60066000815480929190610b019061201d565b919050555060006007600060065481526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160020181905550438160060181905550818160080160006101000a81548160ff02191690831515021790555060095443610be19190611ddd565b81600701819055507fbca082239c403ccd62fa76215509fa481657bc5adf238019415351e5edb6d05d60065433868686604051610c22959493929190612163565b60405180910390a150505050565b6000610c3a61084d565b15610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190612202565b60405180910390fd5b610c8483836113d2565b905092915050565b600a5481565b60006007600084815260200190815260200160002090506008548160060154610cbb9190611ddd565b4310610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf39061226e565b60405180910390fd5b6000610d073361091a565b11610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e906122da565b60405180910390fd5b8060090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90612346565b60405180910390fd5b6000610de13361091a565b905060008190508315610e0e5780836004016000828254610e029190611ddd565b92505081905550610e2a565b80836005016000828254610e229190611ddd565b925050819055505b60018360090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f853386604051610eb793929190612366565b60405180910390a15050505050565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60095481565b610f61611285565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fd35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fca9190611b5c565b60405180910390fd5b610fdc8161130c565b50565b600033905090565b610ff483838360016113f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361106b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110629190611b5c565b60405180910390fd5b611077600083836115cc565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ed5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110e49190611b5c565b60405180910390fd5b6110f9826000836115cc565b5050565b60006111098484610ecc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461118b578181101561117b578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111729392919061239d565b60405180910390fd5b61118a848484840360006113f5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112035760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111fa9190611b5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112755760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161126c9190611b5c565b60405180910390fd5b6112808383836115cc565b505050565b61128d610fdf565b73ffffffffffffffffffffffffffffffffffffffff166112ab610976565b73ffffffffffffffffffffffffffffffffffffffff161461130a576112ce610fdf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113019190611b5c565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806113dd610fdf565b90506113ea818585611191565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114675760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161145e9190611b5c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d95760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d09190611b5c565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156115c6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115bd9190611a8a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361161e5780600260008282546116129190611ddd565b925050819055506116f1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116a19392919061239d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361173a5780600260008282540392505081905550611787565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117e49190611a8a565b60405180910390a3505050565b600080fd5b6000819050919050565b611809816117f6565b811461181457600080fd5b50565b60008135905061182681611800565b92915050565b600060208284031215611842576118416117f1565b5b600061185084828501611817565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061188482611859565b9050919050565b61189481611879565b82525050565b6118a3816117f6565b82525050565b60008115159050919050565b6118be816118a9565b82525050565b6000610120820190506118da600083018c61188b565b6118e7602083018b61188b565b6118f4604083018a61189a565b61190160608301896118b5565b61190e608083018861189a565b61191b60a083018761189a565b61192860c083018661189a565b61193560e083018561189a565b6119436101008301846118b5565b9a9950505050505050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561198b578082015181840152602081019050611970565b60008484015250505050565b6000601f19601f8301169050919050565b60006119b382611951565b6119bd818561195c565b93506119cd81856020860161196d565b6119d681611997565b840191505092915050565b600060208201905081810360008301526119fb81846119a8565b905092915050565b611a0c81611879565b8114611a1757600080fd5b50565b600081359050611a2981611a03565b92915050565b60008060408385031215611a4657611a456117f1565b5b6000611a5485828601611a1a565b9250506020611a6585828601611817565b9150509250929050565b6000602082019050611a8460008301846118b5565b92915050565b6000602082019050611a9f600083018461189a565b92915050565b600080600060608486031215611abe57611abd6117f1565b5b6000611acc86828701611a1a565b9350506020611add86828701611a1a565b9250506040611aee86828701611817565b9150509250925092565b600060ff82169050919050565b611b0e81611af8565b82525050565b6000602082019050611b296000830184611b05565b92915050565b600060208284031215611b4557611b446117f1565b5b6000611b5384828501611a1a565b91505092915050565b6000602082019050611b71600083018461188b565b92915050565b611b80816118a9565b8114611b8b57600080fd5b50565b600081359050611b9d81611b77565b92915050565b600080600060608486031215611bbc57611bbb6117f1565b5b6000611bca86828701611a1a565b9350506020611bdb86828701611817565b9250506040611bec86828701611b8e565b9150509250925092565b60008060408385031215611c0d57611c0c6117f1565b5b6000611c1b85828601611817565b9250506020611c2c85828601611b8e565b9150509250929050565b60008060408385031215611c4d57611c4c6117f1565b5b6000611c5b85828601611a1a565b9250506020611c6c85828601611a1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cbd57607f821691505b602082108103611cd057611ccf611c76565b5b50919050565b7f457865637574696f6e20706572696f6420686173206e6f742073746172746564600082015250565b6000611d0c60208361195c565b9150611d1782611cd6565b602082019050919050565b60006020820190508181036000830152611d3b81611cff565b9050919050565b7f50726f706f73616c20616c726561647920657865637574656400000000000000600082015250565b6000611d7860198361195c565b9150611d8382611d42565b602082019050919050565b60006020820190508181036000830152611da781611d6b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611de8826117f6565b9150611df3836117f6565b9250828201905080821115611e0b57611e0a611dae565b5b92915050565b6000611e1c826117f6565b9150611e27836117f6565b9250828202611e35816117f6565b91508282048414831517611e4c57611e4b611dae565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e8d826117f6565b9150611e98836117f6565b925082611ea857611ea7611e53565b5b828204905092915050565b7f4e6f7420656e6f7567682062616c616e636520746f206d696e74000000000000600082015250565b6000611ee9601a8361195c565b9150611ef482611eb3565b602082019050919050565b60006020820190508181036000830152611f1881611edc565b9050919050565b7f4e6f7420656e6f7567682062616c616e636520746f206275726e000000000000600082015250565b6000611f55601a8361195c565b9150611f6082611f1f565b602082019050919050565b60006020820190508181036000830152611f8481611f48565b9050919050565b7f50726f706f73616c20646964206e6f74206d656574206d616a6f72697479207460008201527f68726573686f6c64000000000000000000000000000000000000000000000000602082015250565b6000611fe760288361195c565b9150611ff282611f8b565b604082019050919050565b6000602082019050818103600083015261201681611fda565b9050919050565b6000612028826117f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361205a57612059611dae565b5b600182019050919050565b7f4e6f7420656e6f75676820746f6b656e7320746f206372656174652070726f7060008201527f6f73616c00000000000000000000000000000000000000000000000000000000602082015250565b60006120c160248361195c565b91506120cc82612065565b604082019050919050565b600060208201905081810360008301526120f0816120b4565b9050919050565b7f496e76616c696420746172676574206164647265737300000000000000000000600082015250565b600061212d60168361195c565b9150612138826120f7565b602082019050919050565b6000602082019050818103600083015261215c81612120565b9050919050565b600060a082019050612178600083018861189a565b612185602083018761188b565b612192604083018661188b565b61219f606083018561189a565b6121ac60808301846118b5565b9695505050505050565b7f43616e6e6f74207472616e7366657220647572696e6720766f74696e67000000600082015250565b60006121ec601d8361195c565b91506121f7826121b6565b602082019050919050565b6000602082019050818103600083015261221b816121df565b9050919050565b7f566f74696e6720706572696f642068617320656e646564000000000000000000600082015250565b600061225860178361195c565b915061226382612222565b602082019050919050565b600060208201905081810360008301526122878161224b565b9050919050565b7f4e6f20746f6b656e7320746f20766f7465000000000000000000000000000000600082015250565b60006122c460118361195c565b91506122cf8261228e565b602082019050919050565b600060208201905081810360008301526122f3816122b7565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000612330600d8361195c565b915061233b826122fa565b602082019050919050565b6000602082019050818103600083015261235f81612323565b9050919050565b600060608201905061237b600083018661189a565b612388602083018561188b565b61239560408301846118b5565b949350505050565b60006060820190506123b2600083018661188b565b6123bf602083018561189a565b6123cc604083018461189a565b94935050505056fea2646970667358221220bfabc7d26d2699d252faa8cf14cb848ccfe19c4b6c7f7631a17fbf8646458f3664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xBD31A4D8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xBD31A4D8 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xDA35C664 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xF15C3FD4 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3EE JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x9713DE52 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x318 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1BBEF399 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x1BBEF399 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2615A646 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0xC92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4C1 SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4ED SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x53A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x50F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x51D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x54F PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH2 0x55C DUP2 DUP6 DUP6 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x7 ADD SLOAD NUMBER LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0x62D SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x33 DUP4 PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x64A SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x4 ADD SLOAD LT PUSH2 0x7AE JUMPI DUP3 PUSH1 0x8 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x703 JUMPI DUP3 PUSH1 0x2 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP1 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FE DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x735 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91A JUMP JUMPDEST LT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x1F6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A8 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x107B JUMP JUMPDEST JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F DUP5 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x8D3 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST NUMBER LT DUP1 ISZERO PUSH2 0x8B1 JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x8D9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x8CB SWAP1 PUSH2 0x201D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x855 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8E7 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH2 0x8F4 DUP6 DUP3 DUP6 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x8FF DUP6 DUP6 DUP6 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96A PUSH2 0x1285 JUMP JUMPDEST PUSH2 0x974 PUSH1 0x0 PUSH2 0x130C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9AF SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9DB SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xA3E CALLER PUSH2 0x91A JUMP JUMPDEST LT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA76 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE5 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB01 SWAP1 PUSH2 0x201D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x8 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x9 SLOAD NUMBER PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xBCA082239C403CCD62FA76215509FA481657BC5ADF238019415351E5EDB6D05D PUSH1 0x6 SLOAD CALLER DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3A PUSH2 0x84D JUMP JUMPDEST ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC71 SWAP1 PUSH2 0x2202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC84 DUP4 DUP4 PUSH2 0x13D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x8 SLOAD DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0xCBB SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST NUMBER LT PUSH2 0xCFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP1 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD07 CALLER PUSH2 0x91A JUMP JUMPDEST GT PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3E SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDE1 CALLER PUSH2 0x91A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP4 ISZERO PUSH2 0xE0E JUMPI DUP1 DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE2A JUMP JUMPDEST DUP1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x9 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF2913DBE661EE2ACC4A046D8FBCDC792373BDA34C41C6086484B5345E5785E5F DUP6 CALLER DUP7 PUSH1 0x40 MLOAD PUSH2 0xEB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF61 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDC DUP2 PUSH2 0x130C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1077 PUSH1 0x0 DUP4 DUP4 PUSH2 0x15CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10ED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F9 DUP3 PUSH1 0x0 DUP4 PUSH2 0x15CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1109 DUP5 DUP5 PUSH2 0xECC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x118B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x117B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118A DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x13F5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1203 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1275 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1280 DUP4 DUP4 DUP4 PUSH2 0x15CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x128D PUSH2 0xFDF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12AB PUSH2 0x976 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x130A JUMPI PUSH2 0x12CE PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1301 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13DD PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP PUSH2 0x13EA DUP2 DUP6 DUP6 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1467 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15C6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15BD SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x161E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1612 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16AA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1787 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17E4 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1809 DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1826 DUP2 PUSH2 0x1800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1850 DUP5 DUP3 DUP6 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1884 DUP3 PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1894 DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18A3 DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BE DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x18DA PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x18E7 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x18F4 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1901 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x190E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x191B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1928 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1935 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1943 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x198B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B3 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH2 0x19BD DUP2 DUP6 PUSH2 0x195C JUMP JUMPDEST SWAP4 POP PUSH2 0x19CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x196D JUMP JUMPDEST PUSH2 0x19D6 DUP2 PUSH2 0x1997 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19FB DUP2 DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A0C DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1A03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A54 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABD PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ACC DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ADD DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AEE DUP7 DUP3 DUP8 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0E DUP2 PUSH2 0x1AF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x1B44 PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x18A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBC JUMPI PUSH2 0x1BBB PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDB DUP7 DUP3 DUP8 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEC DUP7 DUP3 DUP8 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C0D JUMPI PUSH2 0x1C0C PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1B DUP6 DUP3 DUP7 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2C DUP6 DUP3 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x17F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5B DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C6C DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CBD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CD0 JUMPI PUSH2 0x1CCF PUSH2 0x1C76 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457865637574696F6E20706572696F6420686173206E6F742073746172746564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0C PUSH1 0x20 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D17 DUP3 PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D3B DUP2 PUSH2 0x1CFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D78 PUSH1 0x19 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D83 DUP3 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA7 DUP2 PUSH2 0x1D6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF3 DUP4 PUSH2 0x17F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x1DAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E1C DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E27 DUP4 PUSH2 0x17F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E35 DUP2 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E4C JUMPI PUSH2 0x1E4B PUSH2 0x1DAE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E8D DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E98 DUP4 PUSH2 0x17F6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EA8 JUMPI PUSH2 0x1EA7 PUSH2 0x1E53 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F206D696E74000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 PUSH1 0x1A DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF4 DUP3 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F18 DUP2 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F206275726E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F55 PUSH1 0x1A DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F60 DUP3 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F84 DUP2 PUSH2 0x1F48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F706F73616C20646964206E6F74206D656574206D616A6F726974792074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68726573686F6C64000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE7 PUSH1 0x28 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF2 DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2016 DUP2 PUSH2 0x1FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x205A JUMPI PUSH2 0x2059 PUSH2 0x1DAE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320746F206372656174652070726F70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F73616C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 PUSH1 0x24 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x20CC DUP3 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F0 DUP2 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212D PUSH1 0x16 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x2138 DUP3 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215C DUP2 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2178 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x2185 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x2192 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x219F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x21AC PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220647572696E6720766F74696E67000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EC PUSH1 0x1D DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x21F7 DUP3 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221B DUP2 PUSH2 0x21DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F74696E6720706572696F642068617320656E646564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2258 PUSH1 0x17 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x2263 DUP3 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2287 DUP2 PUSH2 0x224B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20766F7465000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C4 PUSH1 0x11 DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x22CF DUP3 PUSH2 0x228E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F3 DUP2 PUSH2 0x22B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920766F74656400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2330 PUSH1 0xD DUP4 PUSH2 0x195C JUMP JUMPDEST SWAP2 POP PUSH2 0x233B DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 PUSH2 0x2323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x237B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x2388 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x2395 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x188B JUMP JUMPDEST PUSH2 0x23BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x23CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x189A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xAB 0xC7 0xD2 PUSH14 0x2699D252FAA8CF14CB848CCFE19C 0x4B PUSH13 0x7F7631A17FBF8646458F366473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "174:4380:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2752:1275:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4250:301:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;670:43:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1299:726:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4035:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;844:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2033:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;583:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:43:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:45:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;2752:1275:6:-;2815:25;2843:9;:21;2853:10;2843:21;;;;;;;;;;;2815:49;;2899:8;:23;;;2883:12;:39;;2875:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2979:8;:17;;;;;;;;;;;;2978:18;2970:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3039:18;3080:8;:21;;;3060:8;:17;;;:41;;;;:::i;:::-;3039:62;;3112:25;3160:3;3154:2;3141:10;:15;;;;:::i;:::-;3140:23;;;;:::i;:::-;3112:51;;3223:17;3202:8;:17;;;:38;3198:739;;3261:8;:18;;;;;;;;;;;;3257:517;;;3399:8;:15;;;3382:4;3374:21;;;:40;;3366:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3464:41;3470:8;:17;;;;;;;;;;;;3489:8;:15;;;3464:5;:41::i;:::-;3257:517;;;3652:8;:15;;;3620:28;3630:8;:17;;;;;;;;;;;;3620:9;:28::i;:::-;:47;;3612:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3717:41;3723:8;:17;;;;;;;;;;;;3742:8;:15;;;3717:5;:41::i;:::-;3257:517;3198:739;;;3875:50;;;;;;;;;;:::i;:::-;;;;;;;;3198:739;3969:4;3949:8;:17;;;:24;;;;;;;;;;;;;;;;;;3991:28;4008:10;3991:28;;;;;;:::i;:::-;;;;;;;;2804:1223;;;2752:1275;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;4250:301:6:-;4291:4;4313:9;4325:1;4313:13;;4308:213;4333:13;;4328:1;:18;4308:213;;4416:20;;4387:9;:12;4397:1;4387:12;;;;;;;;;;;:26;;;:49;;;;:::i;:::-;4372:12;:64;:90;;;;;4441:9;:12;4451:1;4441:12;;;;;;;;;;;:21;;;;;;;;;;;;4440:22;4372:90;4368:142;;;4490:4;4483:11;;;;;4368:142;4348:3;;;;;:::i;:::-;;;;4308:213;;;;4538:5;4531:12;;4250:301;;:::o;5039:244:2:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;670:43:6:-;;;;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1299:726:6:-;1422:13;;1397:21;1407:10;1397:9;:21::i;:::-;:38;;1389:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1513:1;1495:20;;:6;:20;;;1487:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1555:13;;:15;;;;;;;;;:::i;:::-;;;;;;1581:25;1609:9;:24;1619:13;;1609:24;;;;;;;;;;;1581:52;;1664:10;1644:8;:17;;;:30;;;;;;;;;;;;;;;;;;1703:6;1685:8;:15;;;:24;;;;;;;;;;;;;;;;;;1738:6;1720:8;:15;;:24;;;;1780:12;1755:8;:22;;:37;;;;1824:9;1803:8;:18;;;:30;;;;;;;;;;;;;;;;;;1885:22;;1870:12;:37;;;;:::i;:::-;1844:8;:23;;:63;;;;1948:69;1964:13;;1979:10;1991:6;1999;2007:9;1948:69;;;;;;;;;;:::i;:::-;;;;;;;;1378:647;1299:726;;;:::o;4035:207::-;4113:4;4139:10;:8;:10::i;:::-;4138:11;4130:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4201:33;4216:9;4227:6;4201:14;:33::i;:::-;4194:40;;4035:207;;;;:::o;844:32::-;;;;:::o;2033:711::-;2099:25;2127:9;:21;2137:10;2127:21;;;;;;;;;;;2099:49;;2207:20;;2182:8;:22;;;:45;;;;:::i;:::-;2167:12;:60;2159:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2298:1;2274:21;2284:10;2274:9;:21::i;:::-;:25;2266:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2341:8;:15;;:27;2357:10;2341:27;;;;;;;;;;;;;;;;;;;;;;;;;2340:28;2332:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2399:20;2422:21;2432:10;2422:9;:21::i;:::-;2399:44;;2454:17;2474:12;2454:32;;2503:7;2499:137;;;2548:9;2527:8;:17;;;:30;;;;;;;:::i;:::-;;;;;;;;2499:137;;;2615:9;2590:8;:21;;;:34;;;;;;;:::i;:::-;;;;;;;;2499:137;2676:4;2646:8;:15;;:27;2662:10;2646:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2698:38;2704:10;2716;2728:7;2698:38;;;;;;;;:::i;:::-;;;;;;;;2088:656;;;2033:711;;:::o;583:28::-;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;755:43:6:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:90::-;1541:7;1584:5;1577:13;1570:21;1559:32;;1507:90;;;:::o;1603:109::-;1684:21;1699:5;1684:21;:::i;:::-;1679:3;1672:34;1603:109;;:::o;1718:1084::-;2023:4;2061:3;2050:9;2046:19;2038:27;;2075:71;2143:1;2132:9;2128:17;2119:6;2075:71;:::i;:::-;2156:72;2224:2;2213:9;2209:18;2200:6;2156:72;:::i;:::-;2238;2306:2;2295:9;2291:18;2282:6;2238:72;:::i;:::-;2320:66;2382:2;2371:9;2367:18;2358:6;2320:66;:::i;:::-;2396:73;2464:3;2453:9;2449:19;2440:6;2396:73;:::i;:::-;2479;2547:3;2536:9;2532:19;2523:6;2479:73;:::i;:::-;2562;2630:3;2619:9;2615:19;2606:6;2562:73;:::i;:::-;2645;2713:3;2702:9;2698:19;2689:6;2645:73;:::i;:::-;2728:67;2790:3;2779:9;2775:19;2766:6;2728:67;:::i;:::-;1718:1084;;;;;;;;;;;;:::o;2808:99::-;2860:6;2894:5;2888:12;2878:22;;2808:99;;;:::o;2913:169::-;2997:11;3031:6;3026:3;3019:19;3071:4;3066:3;3062:14;3047:29;;2913:169;;;;:::o;3088:248::-;3170:1;3180:113;3194:6;3191:1;3188:13;3180:113;;;3279:1;3274:3;3270:11;3264:18;3260:1;3255:3;3251:11;3244:39;3216:2;3213:1;3209:10;3204:15;;3180:113;;;3327:1;3318:6;3313:3;3309:16;3302:27;3150:186;3088:248;;;:::o;3342:102::-;3383:6;3434:2;3430:7;3425:2;3418:5;3414:14;3410:28;3400:38;;3342:102;;;:::o;3450:377::-;3538:3;3566:39;3599:5;3566:39;:::i;:::-;3621:71;3685:6;3680:3;3621:71;:::i;:::-;3614:78;;3701:65;3759:6;3754:3;3747:4;3740:5;3736:16;3701:65;:::i;:::-;3791:29;3813:6;3791:29;:::i;:::-;3786:3;3782:39;3775:46;;3542:285;3450:377;;;;:::o;3833:313::-;3946:4;3984:2;3973:9;3969:18;3961:26;;4033:9;4027:4;4023:20;4019:1;4008:9;4004:17;3997:47;4061:78;4134:4;4125:6;4061:78;:::i;:::-;4053:86;;3833:313;;;;:::o;4152:122::-;4225:24;4243:5;4225:24;:::i;:::-;4218:5;4215:35;4205:63;;4264:1;4261;4254:12;4205:63;4152:122;:::o;4280:139::-;4326:5;4364:6;4351:20;4342:29;;4380:33;4407:5;4380:33;:::i;:::-;4280:139;;;;:::o;4425:474::-;4493:6;4501;4550:2;4538:9;4529:7;4525:23;4521:32;4518:119;;;4556:79;;:::i;:::-;4518:119;4676:1;4701:53;4746:7;4737:6;4726:9;4722:22;4701:53;:::i;:::-;4691:63;;4647:117;4803:2;4829:53;4874:7;4865:6;4854:9;4850:22;4829:53;:::i;:::-;4819:63;;4774:118;4425:474;;;;;:::o;4905:210::-;4992:4;5030:2;5019:9;5015:18;5007:26;;5043:65;5105:1;5094:9;5090:17;5081:6;5043:65;:::i;:::-;4905:210;;;;:::o;5121:222::-;5214:4;5252:2;5241:9;5237:18;5229:26;;5265:71;5333:1;5322:9;5318:17;5309:6;5265:71;:::i;:::-;5121:222;;;;:::o;5349:619::-;5426:6;5434;5442;5491:2;5479:9;5470:7;5466:23;5462:32;5459:119;;;5497:79;;:::i;:::-;5459:119;5617:1;5642:53;5687:7;5678:6;5667:9;5663:22;5642:53;:::i;:::-;5632:63;;5588:117;5744:2;5770:53;5815:7;5806:6;5795:9;5791:22;5770:53;:::i;:::-;5760:63;;5715:118;5872:2;5898:53;5943:7;5934:6;5923:9;5919:22;5898:53;:::i;:::-;5888:63;;5843:118;5349:619;;;;;:::o;5974:86::-;6009:7;6049:4;6042:5;6038:16;6027:27;;5974:86;;;:::o;6066:112::-;6149:22;6165:5;6149:22;:::i;:::-;6144:3;6137:35;6066:112;;:::o;6184:214::-;6273:4;6311:2;6300:9;6296:18;6288:26;;6324:67;6388:1;6377:9;6373:17;6364:6;6324:67;:::i;:::-;6184:214;;;;:::o;6404:329::-;6463:6;6512:2;6500:9;6491:7;6487:23;6483:32;6480:119;;;6518:79;;:::i;:::-;6480:119;6638:1;6663:53;6708:7;6699:6;6688:9;6684:22;6663:53;:::i;:::-;6653:63;;6609:117;6404:329;;;;:::o;6739:222::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6883:71;6951:1;6940:9;6936:17;6927:6;6883:71;:::i;:::-;6739:222;;;;:::o;6967:116::-;7037:21;7052:5;7037:21;:::i;:::-;7030:5;7027:32;7017:60;;7073:1;7070;7063:12;7017:60;6967:116;:::o;7089:133::-;7132:5;7170:6;7157:20;7148:29;;7186:30;7210:5;7186:30;:::i;:::-;7089:133;;;;:::o;7228:613::-;7302:6;7310;7318;7367:2;7355:9;7346:7;7342:23;7338:32;7335:119;;;7373:79;;:::i;:::-;7335:119;7493:1;7518:53;7563:7;7554:6;7543:9;7539:22;7518:53;:::i;:::-;7508:63;;7464:117;7620:2;7646:53;7691:7;7682:6;7671:9;7667:22;7646:53;:::i;:::-;7636:63;;7591:118;7748:2;7774:50;7816:7;7807:6;7796:9;7792:22;7774:50;:::i;:::-;7764:60;;7719:115;7228:613;;;;;:::o;7847:468::-;7912:6;7920;7969:2;7957:9;7948:7;7944:23;7940:32;7937:119;;;7975:79;;:::i;:::-;7937:119;8095:1;8120:53;8165:7;8156:6;8145:9;8141:22;8120:53;:::i;:::-;8110:63;;8066:117;8222:2;8248:50;8290:7;8281:6;8270:9;8266:22;8248:50;:::i;:::-;8238:60;;8193:115;7847:468;;;;;:::o;8321:474::-;8389:6;8397;8446:2;8434:9;8425:7;8421:23;8417:32;8414:119;;;8452:79;;:::i;:::-;8414:119;8572:1;8597:53;8642:7;8633:6;8622:9;8618:22;8597:53;:::i;:::-;8587:63;;8543:117;8699:2;8725:53;8770:7;8761:6;8750:9;8746:22;8725:53;:::i;:::-;8715:63;;8670:118;8321:474;;;;;:::o;8801:180::-;8849:77;8846:1;8839:88;8946:4;8943:1;8936:15;8970:4;8967:1;8960:15;8987:320;9031:6;9068:1;9062:4;9058:12;9048:22;;9115:1;9109:4;9105:12;9136:18;9126:81;;9192:4;9184:6;9180:17;9170:27;;9126:81;9254:2;9246:6;9243:14;9223:18;9220:38;9217:84;;9273:18;;:::i;:::-;9217:84;9038:269;8987:320;;;:::o;9313:182::-;9453:34;9449:1;9441:6;9437:14;9430:58;9313:182;:::o;9501:366::-;9643:3;9664:67;9728:2;9723:3;9664:67;:::i;:::-;9657:74;;9740:93;9829:3;9740:93;:::i;:::-;9858:2;9853:3;9849:12;9842:19;;9501:366;;;:::o;9873:419::-;10039:4;10077:2;10066:9;10062:18;10054:26;;10126:9;10120:4;10116:20;10112:1;10101:9;10097:17;10090:47;10154:131;10280:4;10154:131;:::i;:::-;10146:139;;9873:419;;;:::o;10298:175::-;10438:27;10434:1;10426:6;10422:14;10415:51;10298:175;:::o;10479:366::-;10621:3;10642:67;10706:2;10701:3;10642:67;:::i;:::-;10635:74;;10718:93;10807:3;10718:93;:::i;:::-;10836:2;10831:3;10827:12;10820:19;;10479:366;;;:::o;10851:419::-;11017:4;11055:2;11044:9;11040:18;11032:26;;11104:9;11098:4;11094:20;11090:1;11079:9;11075:17;11068:47;11132:131;11258:4;11132:131;:::i;:::-;11124:139;;10851:419;;;:::o;11276:180::-;11324:77;11321:1;11314:88;11421:4;11418:1;11411:15;11445:4;11442:1;11435:15;11462:191;11502:3;11521:20;11539:1;11521:20;:::i;:::-;11516:25;;11555:20;11573:1;11555:20;:::i;:::-;11550:25;;11598:1;11595;11591:9;11584:16;;11619:3;11616:1;11613:10;11610:36;;;11626:18;;:::i;:::-;11610:36;11462:191;;;;:::o;11659:410::-;11699:7;11722:20;11740:1;11722:20;:::i;:::-;11717:25;;11756:20;11774:1;11756:20;:::i;:::-;11751:25;;11811:1;11808;11804:9;11833:30;11851:11;11833:30;:::i;:::-;11822:41;;12012:1;12003:7;11999:15;11996:1;11993:22;11973:1;11966:9;11946:83;11923:139;;12042:18;;:::i;:::-;11923:139;11707:362;11659:410;;;;:::o;12075:180::-;12123:77;12120:1;12113:88;12220:4;12217:1;12210:15;12244:4;12241:1;12234:15;12261:185;12301:1;12318:20;12336:1;12318:20;:::i;:::-;12313:25;;12352:20;12370:1;12352:20;:::i;:::-;12347:25;;12391:1;12381:35;;12396:18;;:::i;:::-;12381:35;12438:1;12435;12431:9;12426:14;;12261:185;;;;:::o;12452:176::-;12592:28;12588:1;12580:6;12576:14;12569:52;12452:176;:::o;12634:366::-;12776:3;12797:67;12861:2;12856:3;12797:67;:::i;:::-;12790:74;;12873:93;12962:3;12873:93;:::i;:::-;12991:2;12986:3;12982:12;12975:19;;12634:366;;;:::o;13006:419::-;13172:4;13210:2;13199:9;13195:18;13187:26;;13259:9;13253:4;13249:20;13245:1;13234:9;13230:17;13223:47;13287:131;13413:4;13287:131;:::i;:::-;13279:139;;13006:419;;;:::o;13431:176::-;13571:28;13567:1;13559:6;13555:14;13548:52;13431:176;:::o;13613:366::-;13755:3;13776:67;13840:2;13835:3;13776:67;:::i;:::-;13769:74;;13852:93;13941:3;13852:93;:::i;:::-;13970:2;13965:3;13961:12;13954:19;;13613:366;;;:::o;13985:419::-;14151:4;14189:2;14178:9;14174:18;14166:26;;14238:9;14232:4;14228:20;14224:1;14213:9;14209:17;14202:47;14266:131;14392:4;14266:131;:::i;:::-;14258:139;;13985:419;;;:::o;14410:227::-;14550:34;14546:1;14538:6;14534:14;14527:58;14619:10;14614:2;14606:6;14602:15;14595:35;14410:227;:::o;14643:366::-;14785:3;14806:67;14870:2;14865:3;14806:67;:::i;:::-;14799:74;;14882:93;14971:3;14882:93;:::i;:::-;15000:2;14995:3;14991:12;14984:19;;14643:366;;;:::o;15015:419::-;15181:4;15219:2;15208:9;15204:18;15196:26;;15268:9;15262:4;15258:20;15254:1;15243:9;15239:17;15232:47;15296:131;15422:4;15296:131;:::i;:::-;15288:139;;15015:419;;;:::o;15440:233::-;15479:3;15502:24;15520:5;15502:24;:::i;:::-;15493:33;;15548:66;15541:5;15538:77;15535:103;;15618:18;;:::i;:::-;15535:103;15665:1;15658:5;15654:13;15647:20;;15440:233;;;:::o;15679:223::-;15819:34;15815:1;15807:6;15803:14;15796:58;15888:6;15883:2;15875:6;15871:15;15864:31;15679:223;:::o;15908:366::-;16050:3;16071:67;16135:2;16130:3;16071:67;:::i;:::-;16064:74;;16147:93;16236:3;16147:93;:::i;:::-;16265:2;16260:3;16256:12;16249:19;;15908:366;;;:::o;16280:419::-;16446:4;16484:2;16473:9;16469:18;16461:26;;16533:9;16527:4;16523:20;16519:1;16508:9;16504:17;16497:47;16561:131;16687:4;16561:131;:::i;:::-;16553:139;;16280:419;;;:::o;16705:172::-;16845:24;16841:1;16833:6;16829:14;16822:48;16705:172;:::o;16883:366::-;17025:3;17046:67;17110:2;17105:3;17046:67;:::i;:::-;17039:74;;17122:93;17211:3;17122:93;:::i;:::-;17240:2;17235:3;17231:12;17224:19;;16883:366;;;:::o;17255:419::-;17421:4;17459:2;17448:9;17444:18;17436:26;;17508:9;17502:4;17498:20;17494:1;17483:9;17479:17;17472:47;17536:131;17662:4;17536:131;:::i;:::-;17528:139;;17255:419;;;:::o;17680:652::-;17879:4;17917:3;17906:9;17902:19;17894:27;;17931:71;17999:1;17988:9;17984:17;17975:6;17931:71;:::i;:::-;18012:72;18080:2;18069:9;18065:18;18056:6;18012:72;:::i;:::-;18094;18162:2;18151:9;18147:18;18138:6;18094:72;:::i;:::-;18176;18244:2;18233:9;18229:18;18220:6;18176:72;:::i;:::-;18258:67;18320:3;18309:9;18305:19;18296:6;18258:67;:::i;:::-;17680:652;;;;;;;;:::o;18338:179::-;18478:31;18474:1;18466:6;18462:14;18455:55;18338:179;:::o;18523:366::-;18665:3;18686:67;18750:2;18745:3;18686:67;:::i;:::-;18679:74;;18762:93;18851:3;18762:93;:::i;:::-;18880:2;18875:3;18871:12;18864:19;;18523:366;;;:::o;18895:419::-;19061:4;19099:2;19088:9;19084:18;19076:26;;19148:9;19142:4;19138:20;19134:1;19123:9;19119:17;19112:47;19176:131;19302:4;19176:131;:::i;:::-;19168:139;;18895:419;;;:::o;19320:173::-;19460:25;19456:1;19448:6;19444:14;19437:49;19320:173;:::o;19499:366::-;19641:3;19662:67;19726:2;19721:3;19662:67;:::i;:::-;19655:74;;19738:93;19827:3;19738:93;:::i;:::-;19856:2;19851:3;19847:12;19840:19;;19499:366;;;:::o;19871:419::-;20037:4;20075:2;20064:9;20060:18;20052:26;;20124:9;20118:4;20114:20;20110:1;20099:9;20095:17;20088:47;20152:131;20278:4;20152:131;:::i;:::-;20144:139;;19871:419;;;:::o;20296:167::-;20436:19;20432:1;20424:6;20420:14;20413:43;20296:167;:::o;20469:366::-;20611:3;20632:67;20696:2;20691:3;20632:67;:::i;:::-;20625:74;;20708:93;20797:3;20708:93;:::i;:::-;20826:2;20821:3;20817:12;20810:19;;20469:366;;;:::o;20841:419::-;21007:4;21045:2;21034:9;21030:18;21022:26;;21094:9;21088:4;21084:20;21080:1;21069:9;21065:17;21058:47;21122:131;21248:4;21122:131;:::i;:::-;21114:139;;20841:419;;;:::o;21266:163::-;21406:15;21402:1;21394:6;21390:14;21383:39;21266:163;:::o;21435:366::-;21577:3;21598:67;21662:2;21657:3;21598:67;:::i;:::-;21591:74;;21674:93;21763:3;21674:93;:::i;:::-;21792:2;21787:3;21783:12;21776:19;;21435:366;;;:::o;21807:419::-;21973:4;22011:2;22000:9;21996:18;21988:26;;22060:9;22054:4;22050:20;22046:1;22035:9;22031:17;22024:47;22088:131;22214:4;22088:131;:::i;:::-;22080:139;;21807:419;;;:::o;22232:430::-;22375:4;22413:2;22402:9;22398:18;22390:26;;22426:71;22494:1;22483:9;22479:17;22470:6;22426:71;:::i;:::-;22507:72;22575:2;22564:9;22560:18;22551:6;22507:72;:::i;:::-;22589:66;22651:2;22640:9;22636:18;22627:6;22589:66;:::i;:::-;22232:430;;;;;;:::o;22668:442::-;22817:4;22855:2;22844:9;22840:18;22832:26;;22868:71;22936:1;22925:9;22921:17;22912:6;22868:71;:::i;:::-;22949:72;23017:2;23006:9;23002:18;22993:6;22949:72;:::i;:::-;23031;23099:2;23088:9;23084:18;23075:6;23031:72;:::i;:::-;22668:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1845200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1052",
								"createProposal(address,uint256,bool)": "infinite",
								"decimals()": "432",
								"executeProposal(uint256)": "infinite",
								"executionDelayInBlocks()": "639",
								"isVoting()": "infinite",
								"name()": "infinite",
								"owner()": "667",
								"proposalCount()": "595",
								"proposals(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"requiredVotes()": "551",
								"symbol()": "infinite",
								"totalSupply()": "649",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vote(uint256,bool)": "infinite",
								"votingPeriodInBlocks()": "596"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 708,
									"end": 713,
									"name": "PUSH",
									"source": 6,
									"value": "AFC8"
								},
								{
									"begin": 670,
									"end": 713,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 670,
									"end": 713,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 795,
									"end": 798,
									"name": "PUSH",
									"source": 6,
									"value": "12C"
								},
								{
									"begin": 755,
									"end": 798,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 755,
									"end": 798,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 875,
									"end": 876,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 844,
									"end": 876,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 844,
									"end": 876,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1156,
									"end": 1291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1233,
									"end": 1237,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "73756A616C666C61736800000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5349000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1251,
									"end": 1283,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1257,
									"end": 1267,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1282,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1256,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1256,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1256,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1283,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1283,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1283,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1251,
									"end": 1283,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1291,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4554,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfabc7d26d2699d252faa8cf14cb848ccfe19c4b6c7f7631a17fbf8646458f3664736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "BD31A4D8"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "BD31A4D8"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "C9D27AFE"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "DA35C664"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "F15C3FD4"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "9713DE52"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "1BBEF399"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "1BBEF399"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "2615A646"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "13CF08B"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "D61B519"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 618,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 618,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 618,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2752,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2752,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4250,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4250,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 670,
											"end": 713,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 670,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 670,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1299,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1299,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4035,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4035,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4035,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 844,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 844,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2033,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2033,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 583,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 583,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 755,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 755,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 755,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 618,
											"end": 663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 618,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2864,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2895,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2922,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2875,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2875,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2979,
											"end": 2996,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2970,
											"end": 3026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2970,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3101,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3080,
											"end": 3101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3101,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3060,
											"end": 3101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3060,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3101,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3060,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3163,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3154,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3141,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3140,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3210,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3219,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3219,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3240,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3414,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3399,
											"end": 3414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3414,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3386,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3395,
											"name": "BALANCE",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3414,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3414,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3366,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3366,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3470,
											"end": 3478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3497,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3504,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3489,
											"end": 3504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3504,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3464,
											"end": 3505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3505,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3464,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3630,
											"end": 3638,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3620,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3667,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3667,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3612,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3612,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3723,
											"end": 3731,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3750,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3757,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3742,
											"end": 3757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3717,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3758,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3717,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3257,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3875,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3925,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3198,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3973,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3949,
											"end": 3957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F"
										},
										{
											"begin": 4008,
											"end": 4018,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3991,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 4027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 4027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 4027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4346,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4333,
											"end": 4346,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4346,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4416,
											"end": 4436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4396,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4387,
											"end": 4436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4387,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4436,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4387,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4384,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4436,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4441,
											"end": 4462,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4372,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4510,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4368,
											"end": 4510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4494,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4483,
											"end": 4494,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4510,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4368,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4348,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 670,
											"end": 713,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 670,
											"end": 713,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 670,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1407,
											"end": 1417,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1397,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1418,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1397,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1435,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1435,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1389,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1389,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1487,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1487,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1555,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1674,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1700,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1685,
											"end": 1700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1792,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1885,
											"end": 1907,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1882,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1870,
											"end": 1907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1870,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1907,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1870,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1907,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "PUSH",
											"source": 6,
											"value": "BCA082239C403CCD62FA76215509FA481657BC5ADF238019415351E5EDB6D05D"
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1989,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2005,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1948,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2017,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 2025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 2025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4139,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4139,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4149,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4139,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4149,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4130,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4216,
											"end": 4225,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4201,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4234,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4201,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 844,
											"end": 876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2136,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2147,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2148,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2207,
											"end": 2227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2204,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2182,
											"end": 2204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2204,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2182,
											"end": 2227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2182,
											"end": 2227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2227,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2182,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2179,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2227,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2159,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2159,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2284,
											"end": 2294,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2274,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2295,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2274,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2266,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2266,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2367,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2341,
											"end": 2368,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2332,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2332,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2432,
											"end": 2442,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2422,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2527,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2598,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2590,
											"end": 2611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2590,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2499,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2646,
											"end": 2654,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2646,
											"end": 2661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2672,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "F2913DBE661EE2ACC4A046D8FBCDC792373BDA34C41C6086484B5345E5785E5F"
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2726,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2735,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2698,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2736,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 611,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 583,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 755,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 755,
											"end": 798,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 755,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1470,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1591,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1684,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 1684,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1682,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2050,
											"end": 2059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2046,
											"end": 2065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2075,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2146,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2075,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2224,
											"end": 2226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2156,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2228,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2156,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 2306,
											"end": 2308,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2238,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2310,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 2238,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2382,
											"end": 2384,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2320,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2386,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2320,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2464,
											"end": 2467,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2396,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2469,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2396,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2479,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2552,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2479,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2630,
											"end": 2633,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2562,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2635,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2562,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2645,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2718,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 2645,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2766,
											"end": 2772,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 2728,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2795,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 2728,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 2802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2907,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2808,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3082,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2913,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2997,
											"end": 3008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3082,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3088,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3201,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3258,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3180,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3316,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3436,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3430,
											"end": 3437,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3427,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3418,
											"end": 3423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3438,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3827,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3450,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3566,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3605,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 3566,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3621,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 3621,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3692,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3745,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3701,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3791,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3820,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 3791,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3789,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3775,
											"end": 3821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3827,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3827,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3833,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 3950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 3987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4043,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4061,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4139,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4061,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 4146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4152,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4243,
											"end": 4248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4225,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4249,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4225,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4218,
											"end": 4223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4215,
											"end": 4250,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4205,
											"end": 4268,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4264,
											"end": 4265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4262,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4266,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4268,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4205,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4371,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4407,
											"end": 4412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4380,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4413,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4380,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4547,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4536,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4548,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4521,
											"end": 4553,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4637,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 4518,
											"end": 4637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 4556,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4556,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4635,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 4556,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4637,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 4518,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 4746,
											"end": 4753,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4735,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4701,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4754,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 4701,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4691,
											"end": 4754,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4691,
											"end": 4754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 4874,
											"end": 4881,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4829,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4882,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 4829,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 4882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 4882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 4892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5115,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4905,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 4996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5105,
											"end": 5106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5087,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5043,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5108,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5043,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5115,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5343,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5121,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 5333,
											"end": 5334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5315,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5265,
											"end": 5336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5336,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 5265,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5477,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5489,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5462,
											"end": 5494,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5459,
											"end": 5578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5497,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 5497,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5576,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5497,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5578,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5459,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 5687,
											"end": 5694,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5676,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5663,
											"end": 5685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5642,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5642,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5642,
											"end": 5695,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 5642,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5588,
											"end": 5705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 5815,
											"end": 5822,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5770,
											"end": 5823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5823,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 5770,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5823,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5898,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 5943,
											"end": 5950,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5932,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5919,
											"end": 5941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5898,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5898,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5898,
											"end": 5951,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 5898,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5843,
											"end": 5961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6060,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5974,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6042,
											"end": 6047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6054,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6060,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 6060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6178,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6066,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6165,
											"end": 6170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6149,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6171,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6149,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6398,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6184,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6273,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6300,
											"end": 6309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 6324,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6391,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 6324,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6398,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6733,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6404,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6500,
											"end": 6509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6515,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6599,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 6480,
											"end": 6599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6518,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 6518,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6518,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6518,
											"end": 6597,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 6518,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6599,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 6480,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 6708,
											"end": 6715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6697,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 6663,
											"end": 6716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6716,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 6663,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6733,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6961,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6739,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6873,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6883,
											"end": 6954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 6883,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6961,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 7083,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6967,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7052,
											"end": 7057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7037,
											"end": 7058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7037,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7059,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7017,
											"end": 7077,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7063,
											"end": 7075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7077,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7017,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 7083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7222,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7089,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7157,
											"end": 7177,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 7210,
											"end": 7215,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7186,
											"end": 7216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7216,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 7186,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7222,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7310,
											"end": 7316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7369,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7355,
											"end": 7364,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7346,
											"end": 7353,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7365,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7338,
											"end": 7370,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7335,
											"end": 7454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7335,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7335,
											"end": 7454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7373,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7373,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7373,
											"end": 7452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7373,
											"end": 7452,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7373,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7335,
											"end": 7454,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 7335,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 7563,
											"end": 7570,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7552,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7518,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 7518,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7571,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7620,
											"end": 7622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 7691,
											"end": 7698,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7680,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 7646,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7699,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 7646,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7750,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7774,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 7816,
											"end": 7823,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7774,
											"end": 7824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7824,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 7774,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7764,
											"end": 7824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7764,
											"end": 7824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7719,
											"end": 7834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7912,
											"end": 7918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7969,
											"end": 7971,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 7967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7940,
											"end": 7972,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 8056,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 7937,
											"end": 8056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7975,
											"end": 8054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7975,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 8056,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 7937,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8145,
											"end": 8154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8141,
											"end": 8163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 8120,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8120,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8173,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 8290,
											"end": 8297,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8279,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8266,
											"end": 8288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 8248,
											"end": 8298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8298,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 8248,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8193,
											"end": 8308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7847,
											"end": 8315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8397,
											"end": 8403,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8434,
											"end": 8443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8444,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8449,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8452,
											"end": 8531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 8452,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 8414,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 8642,
											"end": 8649,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 8640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8597,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 8597,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8587,
											"end": 8650,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8587,
											"end": 8650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8725,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 8770,
											"end": 8777,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8750,
											"end": 8759,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8746,
											"end": 8768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8725,
											"end": 8778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8778,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 8725,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8981,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8801,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 8926,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8846,
											"end": 8847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8943,
											"end": 8944,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8936,
											"end": 8951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8974,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8967,
											"end": 8968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8960,
											"end": 8975,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9307,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 8987,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9069,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9062,
											"end": 9066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9070,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9115,
											"end": 9116,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9109,
											"end": 9113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9105,
											"end": 9117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9136,
											"end": 9154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 9126,
											"end": 9207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9197,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9197,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9207,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 9126,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9243,
											"end": 9257,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9258,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9217,
											"end": 9301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9217,
											"end": 9301,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9273,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 9273,
											"end": 9291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9291,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9273,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9217,
											"end": 9301,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9217,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9495,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 9313,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9453,
											"end": 9487,
											"name": "PUSH",
											"source": 7,
											"value": "457865637574696F6E20706572696F6420686173206E6F742073746172746564"
										},
										{
											"begin": 9449,
											"end": 9450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9437,
											"end": 9451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9867,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9501,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9643,
											"end": 9646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9664,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 9728,
											"end": 9730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9723,
											"end": 9726,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9664,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 9731,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 9664,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9731,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 9829,
											"end": 9832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 9740,
											"end": 9833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9740,
											"end": 9833,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 9740,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9849,
											"end": 9861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 9861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 9861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 10292,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 9873,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10039,
											"end": 10043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10066,
											"end": 10075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10136,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10110,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10090,
											"end": 10137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10280,
											"end": 10284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 10154,
											"end": 10285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10285,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10154,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 10292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 10292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 10292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 10292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10298,
											"end": 10473,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 10298,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10438,
											"end": 10465,
											"name": "PUSH",
											"source": 7,
											"value": "50726F706F73616C20616C726561647920657865637574656400000000000000"
										},
										{
											"begin": 10434,
											"end": 10435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10426,
											"end": 10432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10415,
											"end": 10466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10298,
											"end": 10473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10298,
											"end": 10473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10845,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 10479,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10621,
											"end": 10624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 10701,
											"end": 10704,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 10642,
											"end": 10709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10642,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10635,
											"end": 10709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10635,
											"end": 10709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 10807,
											"end": 10810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 10718,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10811,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 10718,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10836,
											"end": 10838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10831,
											"end": 10834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11270,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 10851,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11057,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11044,
											"end": 11053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11104,
											"end": 11113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11098,
											"end": 11102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11094,
											"end": 11114,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11068,
											"end": 11115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11132,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11258,
											"end": 11262,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11132,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 11132,
											"end": 11263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11132,
											"end": 11263,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11132,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11263,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 11270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11276,
											"end": 11456,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 11276,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11324,
											"end": 11401,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11321,
											"end": 11322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11421,
											"end": 11425,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11418,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11411,
											"end": 11426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11449,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11442,
											"end": 11443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11435,
											"end": 11450,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11653,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 11462,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11502,
											"end": 11505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11521,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11539,
											"end": 11540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11521,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11521,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11521,
											"end": 11541,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11521,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11573,
											"end": 11574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11555,
											"end": 11575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11575,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11555,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11550,
											"end": 11575,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11550,
											"end": 11575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11598,
											"end": 11599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11591,
											"end": 11600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11584,
											"end": 11600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11619,
											"end": 11622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11616,
											"end": 11617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11623,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11646,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11610,
											"end": 11646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 11626,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11610,
											"end": 11646,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11610,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 12069,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 11659,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 11706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11740,
											"end": 11741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11722,
											"end": 11742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11717,
											"end": 11742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11717,
											"end": 11742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11774,
											"end": 11775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11756,
											"end": 11776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11751,
											"end": 11776,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11751,
											"end": 11776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11811,
											"end": 11812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11808,
											"end": 11809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 11813,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 11851,
											"end": 11862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11833,
											"end": 11863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11833,
											"end": 11863,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 11833,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12003,
											"end": 12010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11999,
											"end": 12014,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11996,
											"end": 11997,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11993,
											"end": 12015,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11973,
											"end": 11974,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11966,
											"end": 11975,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11946,
											"end": 12029,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11923,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 11923,
											"end": 12062,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 12042,
											"end": 12060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12042,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11923,
											"end": 12062,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 11923,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 12069,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 12069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 12069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 12069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 12069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12255,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12075,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12123,
											"end": 12200,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12113,
											"end": 12201,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12220,
											"end": 12224,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12210,
											"end": 12225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12248,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12234,
											"end": 12249,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12446,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 12261,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12301,
											"end": 12302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 12336,
											"end": 12337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12318,
											"end": 12338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12338,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 12318,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12313,
											"end": 12338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12313,
											"end": 12338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 12370,
											"end": 12371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12352,
											"end": 12372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12372,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 12352,
											"end": 12372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12372,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12391,
											"end": 12392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12381,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 12381,
											"end": 12416,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12396,
											"end": 12414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12381,
											"end": 12416,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 12381,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12431,
											"end": 12440,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12446,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12261,
											"end": 12446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12628,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12452,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12592,
											"end": 12620,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F7567682062616C616E636520746F206D696E74000000000000"
										},
										{
											"begin": 12588,
											"end": 12589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12580,
											"end": 12586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12569,
											"end": 12621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 13000,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 12634,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12776,
											"end": 12779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 12861,
											"end": 12863,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 12856,
											"end": 12859,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 12797,
											"end": 12864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12864,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 12797,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12790,
											"end": 12864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12790,
											"end": 12864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 12962,
											"end": 12965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 12873,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12966,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 12873,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12991,
											"end": 12993,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12986,
											"end": 12989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12982,
											"end": 12994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12975,
											"end": 12994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12975,
											"end": 12994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 13000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 13000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 13000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12634,
											"end": 13000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13006,
											"end": 13425,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 13006,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13172,
											"end": 13176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13199,
											"end": 13208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13195,
											"end": 13213,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13187,
											"end": 13213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13187,
											"end": 13213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13259,
											"end": 13268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13253,
											"end": 13257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13269,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13245,
											"end": 13246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13243,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13230,
											"end": 13247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 13413,
											"end": 13417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 13287,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13287,
											"end": 13418,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 13287,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13279,
											"end": 13418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13279,
											"end": 13418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13006,
											"end": 13425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13006,
											"end": 13425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13006,
											"end": 13425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13006,
											"end": 13425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13431,
											"end": 13607,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13431,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13571,
											"end": 13599,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F7567682062616C616E636520746F206275726E000000000000"
										},
										{
											"begin": 13567,
											"end": 13568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13555,
											"end": 13569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13431,
											"end": 13607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13431,
											"end": 13607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13613,
											"end": 13979,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 13613,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13755,
											"end": 13758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13776,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 13840,
											"end": 13842,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 13835,
											"end": 13838,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13776,
											"end": 13843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 13776,
											"end": 13843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13776,
											"end": 13843,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 13776,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13769,
											"end": 13843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13769,
											"end": 13843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 13941,
											"end": 13944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13852,
											"end": 13945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13945,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 13852,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 13972,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13965,
											"end": 13968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13961,
											"end": 13973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13954,
											"end": 13973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13954,
											"end": 13973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13613,
											"end": 13979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13613,
											"end": 13979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13613,
											"end": 13979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13613,
											"end": 13979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13985,
											"end": 14404,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 13985,
											"end": 14404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14151,
											"end": 14155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14189,
											"end": 14191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14178,
											"end": 14187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14174,
											"end": 14192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14166,
											"end": 14192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14166,
											"end": 14192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14232,
											"end": 14236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14228,
											"end": 14248,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14224,
											"end": 14225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14213,
											"end": 14222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14202,
											"end": 14249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14266,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 14392,
											"end": 14396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14266,
											"end": 14397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 14266,
											"end": 14397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14266,
											"end": 14397,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 14266,
											"end": 14397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14258,
											"end": 14397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14258,
											"end": 14397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13985,
											"end": 14404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13985,
											"end": 14404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13985,
											"end": 14404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13985,
											"end": 14404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14410,
											"end": 14637,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 14410,
											"end": 14637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14550,
											"end": 14584,
											"name": "PUSH",
											"source": 7,
											"value": "50726F706F73616C20646964206E6F74206D656574206D616A6F726974792074"
										},
										{
											"begin": 14546,
											"end": 14547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14538,
											"end": 14544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14534,
											"end": 14548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14527,
											"end": 14585,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14629,
											"name": "PUSH",
											"source": 7,
											"value": "68726573686F6C64000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14614,
											"end": 14616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14606,
											"end": 14612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14602,
											"end": 14617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14595,
											"end": 14630,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14410,
											"end": 14637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14410,
											"end": 14637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14643,
											"end": 15009,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14643,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14785,
											"end": 14788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14806,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 14870,
											"end": 14872,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 14865,
											"end": 14868,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 14806,
											"end": 14873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14873,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 14806,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14799,
											"end": 14873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14882,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 14971,
											"end": 14974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14882,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 14882,
											"end": 14975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14882,
											"end": 14975,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 14882,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15000,
											"end": 15002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14995,
											"end": 14998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14991,
											"end": 15003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14984,
											"end": 15003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14984,
											"end": 15003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14643,
											"end": 15009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14643,
											"end": 15009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14643,
											"end": 15009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14643,
											"end": 15009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15434,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 15015,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15181,
											"end": 15185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15219,
											"end": 15221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15208,
											"end": 15217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15204,
											"end": 15222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15196,
											"end": 15222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15196,
											"end": 15222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15268,
											"end": 15277,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15262,
											"end": 15266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15258,
											"end": 15278,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15254,
											"end": 15255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15252,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15232,
											"end": 15279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15296,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15296,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 15296,
											"end": 15427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15296,
											"end": 15427,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 15296,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15288,
											"end": 15427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15288,
											"end": 15427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15015,
											"end": 15434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15673,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 15440,
											"end": 15673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15479,
											"end": 15482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 15520,
											"end": 15525,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15502,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 15502,
											"end": 15526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15502,
											"end": 15526,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 15502,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15493,
											"end": 15526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15493,
											"end": 15526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15614,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15541,
											"end": 15546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15538,
											"end": 15615,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15535,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 15535,
											"end": 15638,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 15618,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 15618,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15535,
											"end": 15638,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 15535,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15665,
											"end": 15666,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15658,
											"end": 15663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15654,
											"end": 15667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15673,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15440,
											"end": 15673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15679,
											"end": 15902,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 15679,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15819,
											"end": 15853,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F6B656E7320746F206372656174652070726F70"
										},
										{
											"begin": 15815,
											"end": 15816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15807,
											"end": 15813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15803,
											"end": 15817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15796,
											"end": 15854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15888,
											"end": 15894,
											"name": "PUSH",
											"source": 7,
											"value": "6F73616C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15883,
											"end": 15885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15875,
											"end": 15881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15871,
											"end": 15886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15864,
											"end": 15895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15679,
											"end": 15902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15679,
											"end": 15902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15908,
											"end": 16274,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 15908,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16050,
											"end": 16053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 16135,
											"end": 16137,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16130,
											"end": 16133,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16071,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 16071,
											"end": 16138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16071,
											"end": 16138,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 16071,
											"end": 16138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16147,
											"end": 16240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 16236,
											"end": 16239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16147,
											"end": 16240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 16147,
											"end": 16240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16147,
											"end": 16240,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 16147,
											"end": 16240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16265,
											"end": 16267,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16260,
											"end": 16263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16256,
											"end": 16268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16249,
											"end": 16268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16249,
											"end": 16268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15908,
											"end": 16274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15908,
											"end": 16274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15908,
											"end": 16274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15908,
											"end": 16274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16699,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 16280,
											"end": 16699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16446,
											"end": 16450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16484,
											"end": 16486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16473,
											"end": 16482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16469,
											"end": 16487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16461,
											"end": 16487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16461,
											"end": 16487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16533,
											"end": 16542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16527,
											"end": 16531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16508,
											"end": 16517,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16504,
											"end": 16521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16497,
											"end": 16544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16561,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 16687,
											"end": 16691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16561,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16561,
											"end": 16692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16561,
											"end": 16692,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 16561,
											"end": 16692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16553,
											"end": 16692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16553,
											"end": 16692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16705,
											"end": 16877,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 16705,
											"end": 16877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16845,
											"end": 16869,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420746172676574206164647265737300000000000000000000"
										},
										{
											"begin": 16841,
											"end": 16842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16829,
											"end": 16843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16822,
											"end": 16870,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16705,
											"end": 16877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16705,
											"end": 16877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 17249,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16883,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17025,
											"end": 17028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17046,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17110,
											"end": 17112,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 17105,
											"end": 17108,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 17046,
											"end": 17113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17113,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17046,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17039,
											"end": 17113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17039,
											"end": 17113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17211,
											"end": 17214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 17122,
											"end": 17215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17122,
											"end": 17215,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17122,
											"end": 17215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17240,
											"end": 17242,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17235,
											"end": 17238,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17231,
											"end": 17243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17224,
											"end": 17243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17224,
											"end": 17243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 17249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 17249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 17249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16883,
											"end": 17249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17674,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 17255,
											"end": 17674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17421,
											"end": 17425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17459,
											"end": 17461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17448,
											"end": 17457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17444,
											"end": 17462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17436,
											"end": 17462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17436,
											"end": 17462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17508,
											"end": 17517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17502,
											"end": 17506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17498,
											"end": 17518,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17494,
											"end": 17495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17483,
											"end": 17492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17479,
											"end": 17496,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17472,
											"end": 17519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17536,
											"end": 17667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 17662,
											"end": 17666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17536,
											"end": 17667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 17536,
											"end": 17667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17536,
											"end": 17667,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 17536,
											"end": 17667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17879,
											"end": 17883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17917,
											"end": 17920,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 17906,
											"end": 17915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17902,
											"end": 17921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17894,
											"end": 17921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17894,
											"end": 17921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 17999,
											"end": 18000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17988,
											"end": 17997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17975,
											"end": 17981,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 17931,
											"end": 18002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 18002,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 17931,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18012,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18080,
											"end": 18082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18069,
											"end": 18078,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18065,
											"end": 18083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18056,
											"end": 18062,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18012,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 18012,
											"end": 18084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18012,
											"end": 18084,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18012,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18094,
											"end": 18166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18162,
											"end": 18164,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18151,
											"end": 18160,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18147,
											"end": 18165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18144,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18094,
											"end": 18166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 18094,
											"end": 18166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18094,
											"end": 18166,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18094,
											"end": 18166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18244,
											"end": 18246,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 18233,
											"end": 18242,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18229,
											"end": 18247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18220,
											"end": 18226,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 18176,
											"end": 18248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18248,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18176,
											"end": 18248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18258,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 18320,
											"end": 18323,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 18309,
											"end": 18318,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18305,
											"end": 18324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18296,
											"end": 18302,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18258,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 18258,
											"end": 18325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18258,
											"end": 18325,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 18258,
											"end": 18325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 18332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18338,
											"end": 18517,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 18338,
											"end": 18517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18478,
											"end": 18509,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207472616E7366657220647572696E6720766F74696E67000000"
										},
										{
											"begin": 18474,
											"end": 18475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18466,
											"end": 18472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18462,
											"end": 18476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18455,
											"end": 18510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18338,
											"end": 18517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18338,
											"end": 18517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18523,
											"end": 18889,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 18523,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18665,
											"end": 18668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18686,
											"end": 18753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 18750,
											"end": 18752,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 18745,
											"end": 18748,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18686,
											"end": 18753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 18686,
											"end": 18753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18686,
											"end": 18753,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 18686,
											"end": 18753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18679,
											"end": 18753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18679,
											"end": 18753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18762,
											"end": 18855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 18851,
											"end": 18854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18762,
											"end": 18855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 18762,
											"end": 18855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18762,
											"end": 18855,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 18762,
											"end": 18855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18880,
											"end": 18882,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18875,
											"end": 18878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18871,
											"end": 18883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18864,
											"end": 18883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18864,
											"end": 18883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18523,
											"end": 18889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18523,
											"end": 18889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18523,
											"end": 18889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18523,
											"end": 18889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18895,
											"end": 19314,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 18895,
											"end": 19314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19061,
											"end": 19065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19099,
											"end": 19101,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19088,
											"end": 19097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19084,
											"end": 19102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19076,
											"end": 19102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19076,
											"end": 19102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19148,
											"end": 19157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19142,
											"end": 19146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19138,
											"end": 19158,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19134,
											"end": 19135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19123,
											"end": 19132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19119,
											"end": 19136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19112,
											"end": 19159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19176,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19302,
											"end": 19306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19176,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 19176,
											"end": 19307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19176,
											"end": 19307,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19176,
											"end": 19307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19168,
											"end": 19307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19168,
											"end": 19307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18895,
											"end": 19314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18895,
											"end": 19314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18895,
											"end": 19314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18895,
											"end": 19314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19493,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 19320,
											"end": 19493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19460,
											"end": 19485,
											"name": "PUSH",
											"source": 7,
											"value": "566F74696E6720706572696F642068617320656E646564000000000000000000"
										},
										{
											"begin": 19456,
											"end": 19457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19448,
											"end": 19454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19444,
											"end": 19458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19437,
											"end": 19486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19865,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 19499,
											"end": 19865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19641,
											"end": 19644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19662,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 19726,
											"end": 19728,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 19721,
											"end": 19724,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19662,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 19662,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19662,
											"end": 19729,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 19662,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19655,
											"end": 19729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19655,
											"end": 19729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19738,
											"end": 19831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 19827,
											"end": 19830,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19738,
											"end": 19831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 19738,
											"end": 19831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19738,
											"end": 19831,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 19738,
											"end": 19831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19856,
											"end": 19858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19851,
											"end": 19854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19847,
											"end": 19859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19840,
											"end": 19859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19840,
											"end": 19859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19871,
											"end": 20290,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 19871,
											"end": 20290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20037,
											"end": 20041,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20075,
											"end": 20077,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20064,
											"end": 20073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20060,
											"end": 20078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20052,
											"end": 20078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20052,
											"end": 20078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20124,
											"end": 20133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20118,
											"end": 20122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20114,
											"end": 20134,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20110,
											"end": 20111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20099,
											"end": 20108,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20095,
											"end": 20112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20088,
											"end": 20135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20152,
											"end": 20283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 20278,
											"end": 20282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20152,
											"end": 20283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 20152,
											"end": 20283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20152,
											"end": 20283,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 20152,
											"end": 20283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20144,
											"end": 20283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20144,
											"end": 20283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19871,
											"end": 20290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19871,
											"end": 20290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19871,
											"end": 20290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19871,
											"end": 20290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20296,
											"end": 20463,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 20296,
											"end": 20463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20436,
											"end": 20455,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20746F6B656E7320746F20766F7465000000000000000000000000000000"
										},
										{
											"begin": 20432,
											"end": 20433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20424,
											"end": 20430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20420,
											"end": 20434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20413,
											"end": 20456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20296,
											"end": 20463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20296,
											"end": 20463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20469,
											"end": 20835,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 20469,
											"end": 20835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20611,
											"end": 20614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 20696,
											"end": 20698,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 20691,
											"end": 20694,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20632,
											"end": 20699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 20632,
											"end": 20699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20632,
											"end": 20699,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 20632,
											"end": 20699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20625,
											"end": 20699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20625,
											"end": 20699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20708,
											"end": 20801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 20797,
											"end": 20800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20708,
											"end": 20801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 20708,
											"end": 20801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20708,
											"end": 20801,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 20708,
											"end": 20801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20826,
											"end": 20828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20821,
											"end": 20824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20817,
											"end": 20829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20810,
											"end": 20829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20810,
											"end": 20829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20469,
											"end": 20835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20469,
											"end": 20835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20469,
											"end": 20835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20469,
											"end": 20835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 21260,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 20841,
											"end": 21260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21007,
											"end": 21011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21045,
											"end": 21047,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21034,
											"end": 21043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21030,
											"end": 21048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21022,
											"end": 21048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21022,
											"end": 21048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21094,
											"end": 21103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21088,
											"end": 21092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21084,
											"end": 21104,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21080,
											"end": 21081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21069,
											"end": 21078,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21065,
											"end": 21082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21058,
											"end": 21105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 21248,
											"end": 21252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 21122,
											"end": 21253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21122,
											"end": 21253,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 21122,
											"end": 21253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21114,
											"end": 21253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21114,
											"end": 21253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 21260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 21260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 21260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20841,
											"end": 21260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21429,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 21266,
											"end": 21429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21406,
											"end": 21421,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920766F74656400000000000000000000000000000000000000"
										},
										{
											"begin": 21402,
											"end": 21403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21394,
											"end": 21400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21390,
											"end": 21404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21383,
											"end": 21422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21266,
											"end": 21429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21435,
											"end": 21801,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 21435,
											"end": 21801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21577,
											"end": 21580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21598,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 21662,
											"end": 21664,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 21657,
											"end": 21660,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21598,
											"end": 21665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 21598,
											"end": 21665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21598,
											"end": 21665,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 21598,
											"end": 21665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21591,
											"end": 21665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21591,
											"end": 21665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21674,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 21763,
											"end": 21766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21674,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 21674,
											"end": 21767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21674,
											"end": 21767,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 21674,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21792,
											"end": 21794,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21787,
											"end": 21790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21776,
											"end": 21795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21776,
											"end": 21795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21435,
											"end": 21801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21435,
											"end": 21801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21435,
											"end": 21801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21435,
											"end": 21801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 22226,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 21807,
											"end": 22226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21973,
											"end": 21977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22011,
											"end": 22013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22000,
											"end": 22009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21996,
											"end": 22014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21988,
											"end": 22014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21988,
											"end": 22014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22060,
											"end": 22069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22054,
											"end": 22058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22050,
											"end": 22070,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 22046,
											"end": 22047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22031,
											"end": 22048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22024,
											"end": 22071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22088,
											"end": 22219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 22214,
											"end": 22218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22088,
											"end": 22219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 22088,
											"end": 22219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22088,
											"end": 22219,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 22088,
											"end": 22219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22080,
											"end": 22219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22080,
											"end": 22219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 22226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 22226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 22226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21807,
											"end": 22226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22375,
											"end": 22379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22413,
											"end": 22415,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 22402,
											"end": 22411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22398,
											"end": 22416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22390,
											"end": 22416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22390,
											"end": 22416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22426,
											"end": 22497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 22494,
											"end": 22495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22483,
											"end": 22492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22479,
											"end": 22496,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22470,
											"end": 22476,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22426,
											"end": 22497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 22426,
											"end": 22497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22426,
											"end": 22497,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 22426,
											"end": 22497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22507,
											"end": 22579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 22575,
											"end": 22577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22564,
											"end": 22573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22560,
											"end": 22578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22551,
											"end": 22557,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22507,
											"end": 22579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 22507,
											"end": 22579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22507,
											"end": 22579,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 22507,
											"end": 22579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 22651,
											"end": 22653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22640,
											"end": 22649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22636,
											"end": 22654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22627,
											"end": 22633,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 22589,
											"end": 22655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22589,
											"end": 22655,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 22589,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22232,
											"end": 22662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22817,
											"end": 22821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22855,
											"end": 22857,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 22844,
											"end": 22853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22840,
											"end": 22858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22832,
											"end": 22858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22832,
											"end": 22858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22868,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 22936,
											"end": 22937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22925,
											"end": 22934,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22921,
											"end": 22938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22912,
											"end": 22918,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22868,
											"end": 22939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 22868,
											"end": 22939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22868,
											"end": 22939,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 22868,
											"end": 22939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22949,
											"end": 23021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 23017,
											"end": 23019,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23006,
											"end": 23015,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23002,
											"end": 23020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22993,
											"end": 22999,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22949,
											"end": 23021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 22949,
											"end": 23021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22949,
											"end": 23021,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 22949,
											"end": 23021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23031,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 23099,
											"end": 23101,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23088,
											"end": 23097,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23084,
											"end": 23102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23075,
											"end": 23081,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23031,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 23031,
											"end": 23103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23031,
											"end": 23103,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 23031,
											"end": 23103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22668,
											"end": 23110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"transc.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"createProposal(address,uint256,bool)": "9713de52",
							"decimals()": "313ce567",
							"executeProposal(uint256)": "0d61b519",
							"executionDelayInBlocks()": "f15c3fd4",
							"isVoting()": "1bbef399",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proposalCount()": "da35c664",
							"proposals(uint256)": "013cf08b",
							"renounceOwnership()": "715018a6",
							"requiredVotes()": "bd31a4d8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vote(uint256,bool)": "c9d27afe",
							"votingPeriodInBlocks()": "2615a646"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMinting\",\"type\":\"bool\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMinting\",\"type\":\"bool\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionDelayInBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVoting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMinting\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriodInBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"transc.sol\":\"DecentralizedToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"transc.sol\":{\"keccak256\":\"0x7ab406ca6be13dec074d4fd99a8f172e31edac32549c77120815e57d4c0c9351\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff02ea643666878aecc706f0cf30de729e3b1ec7e55179bd67ef9a2dd5c60b31\",\"dweb:/ipfs/QmVuQg2mvcRyDhhGmAu6GtFfngCwvnYUpbmtdi6ZjcX9xj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "transc.sol:DecentralizedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "transc.sol:DecentralizedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "transc.sol:DecentralizedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "transc.sol:DecentralizedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "transc.sol:DecentralizedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "transc.sol:DecentralizedToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "transc.sol:DecentralizedToken",
								"label": "proposalCount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 971,
								"contract": "transc.sol:DecentralizedToken",
								"label": "proposals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Proposal)964_storage)"
							},
							{
								"astId": 974,
								"contract": "transc.sol:DecentralizedToken",
								"label": "votingPeriodInBlocks",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 977,
								"contract": "transc.sol:DecentralizedToken",
								"label": "executionDelayInBlocks",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 980,
								"contract": "transc.sol:DecentralizedToken",
								"label": "requiredVotes",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Proposal)964_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct DecentralizedToken.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)964_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)964_storage": {
								"encoding": "inplace",
								"label": "struct DecentralizedToken.Proposal",
								"members": [
									{
										"astId": 943,
										"contract": "transc.sol:DecentralizedToken",
										"label": "proposer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 945,
										"contract": "transc.sol:DecentralizedToken",
										"label": "target",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 947,
										"contract": "transc.sol:DecentralizedToken",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 949,
										"contract": "transc.sol:DecentralizedToken",
										"label": "executed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 951,
										"contract": "transc.sol:DecentralizedToken",
										"label": "votesFor",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 953,
										"contract": "transc.sol:DecentralizedToken",
										"label": "votesAgainst",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 955,
										"contract": "transc.sol:DecentralizedToken",
										"label": "creationBlock",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 957,
										"contract": "transc.sol:DecentralizedToken",
										"label": "executionBlock",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 959,
										"contract": "transc.sol:DecentralizedToken",
										"label": "isMinting",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									},
									{
										"astId": 963,
										"contract": "transc.sol:DecentralizedToken",
										"label": "voters",
										"offset": 0,
										"slot": "9",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "320"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"transc.sol": {
				"ast": {
					"absolutePath": "transc.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"DecentralizedToken": [
							1378
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"205:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "205:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "205:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"212:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "212:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "212:7:6"
								}
							],
							"canonicalName": "DecentralizedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1378,
							"linearizedBaseContracts": [
								1378,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "DecentralizedToken",
							"nameLocation": "183:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DecentralizedToken.Proposal",
									"id": 964,
									"members": [
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "proposer",
											"nameLocation": "262:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "254:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 942,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "254:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "289:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "281:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 944,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "281:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "314:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "306:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "336:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "331:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 948,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "331:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "363:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "355:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 950,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "355:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 953,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "390:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "382:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 952,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "382:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "creationBlock",
											"nameLocation": "421:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "413:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 954,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "413:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "executionBlock",
											"nameLocation": "453:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "445:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 956,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "isMinting",
											"nameLocation": "516:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "511:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 958,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "511:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "561:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "536:31:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 962,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "536:24:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "234:8:6",
									"nodeType": "StructDefinition",
									"scope": 1378,
									"src": "227:348:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da35c664",
									"id": 966,
									"mutability": "mutable",
									"name": "proposalCount",
									"nameLocation": "598:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "583:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 965,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 971,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "654:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "618:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
										"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal)"
									},
									"typeName": {
										"id": 970,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 967,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "626:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "618:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
											"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 969,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 968,
												"name": "Proposal",
												"nameLocations": [
													"637:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 964,
												"src": "637:8:6"
											},
											"referencedDeclaration": 964,
											"src": "637:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
												"typeString": "struct DecentralizedToken.Proposal"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2615a646",
									"id": 974,
									"mutability": "mutable",
									"name": "votingPeriodInBlocks",
									"nameLocation": "685:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "670:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "670:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3435303030",
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "708:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_45000_by_1",
											"typeString": "int_const 45000"
										},
										"value": "45000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f15c3fd4",
									"id": 977,
									"mutability": "mutable",
									"name": "executionDelayInBlocks",
									"nameLocation": "770:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "755:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 975,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "755:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 976,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "795:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd31a4d8",
									"id": 980,
									"mutability": "mutable",
									"name": "requiredVotes",
									"nameLocation": "859:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1378,
									"src": "844:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 978,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "844:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 979,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "875:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "bca082239c403ccd62fa76215509fa481657bc5adf238019415351e5edb6d05d",
									"id": 992,
									"name": "ProposalCreated",
									"nameLocation": "930:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "954:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "946:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "974:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "966:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": false,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "992:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "984:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1008:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "1000:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": false,
												"mutability": "mutable",
												"name": "isMinting",
												"nameLocation": "1021:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "1016:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:86:6"
									},
									"src": "924:108:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f",
									"id": 1000,
									"name": "Voted",
									"nameLocation": "1044:5:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1058:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1050:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "support",
												"nameLocation": "1090:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1085:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1085:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:49:6"
									},
									"src": "1038:61:6"
								},
								{
									"anonymous": false,
									"eventSelector": "712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f",
									"id": 1004,
									"name": "ProposalExecuted",
									"nameLocation": "1111:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1136:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "1128:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:20:6"
									},
									"src": "1105:43:6"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "1240:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1257:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1261:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1257:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "1269:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1251:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "1251:32:6"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "73756a616c666c617368",
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1197:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_89eabc2c691586883155df37cb652bc532171679efcc8ed75c2a3de7fb942628",
														"typeString": "literal_string \"sujalflash\""
													},
													"value": "sujalflash"
												},
												{
													"hexValue": "5349",
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1211:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a130e8c471cc6763f6bab3e303c79322fd6cbfc97e375ee32de6f4863f67d18a",
														"typeString": "literal_string \"SI\""
													},
													"value": "SI"
												}
											],
											"id": 1011,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1008,
												"name": "ERC20",
												"nameLocations": [
													"1191:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1191:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1191:25:6"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1015,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1233:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DecentralizedToken_$1378",
																"typeString": "contract DecentralizedToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_DecentralizedToken_$1378",
																"typeString": "contract DecentralizedToken"
															}
														],
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1225:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1013,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1225:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1017,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1012,
												"name": "Ownable",
												"nameLocations": [
													"1217:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1217:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1217:22:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1176:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "1168:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:23:6"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:0:6"
									},
									"scope": 1378,
									"src": "1156:135:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1378:647:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1037,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1407:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1411:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1407:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1036,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1397:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1397:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1040,
																"name": "requiredVotes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "1422:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1397:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320746f206372656174652070726f706f73616c",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1437:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63",
																"typeString": "literal_string \"Not enough tokens to create proposal\""
															},
															"value": "Not enough tokens to create proposal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f93f7d71796ee8674d970e1b0983a0192a0e6f5b3101c5dd49b54fa670b0fb63",
																"typeString": "literal_string \"Not enough tokens to create proposal\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1389:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1389:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "1389:87:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1046,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "1495:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1513:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1505:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1047,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1505:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1505:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1495:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207461726765742061646472657373",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1517:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556",
																"typeString": "literal_string \"Invalid target address\""
															},
															"value": "Invalid target address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556",
																"typeString": "literal_string \"Invalid target address\""
															}
														],
														"id": 1045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1487:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "1487:55:6"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1555:15:6",
													"subExpression": {
														"id": 1055,
														"name": "proposalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1555:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1555:15:6"
											},
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "1598:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "1581:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
															"typeString": "struct DecentralizedToken.Proposal"
														},
														"typeName": {
															"id": 1059,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1058,
																"name": "Proposal",
																"nameLocations": [
																	"1581:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 964,
																"src": "1581:8:6"
															},
															"referencedDeclaration": 964,
															"src": "1581:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"baseExpression": {
														"id": 1061,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "1609:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
															"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal storage ref)"
														}
													},
													"id": 1063,
													"indexExpression": {
														"id": 1062,
														"name": "proposalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "1619:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1609:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$964_storage",
														"typeString": "struct DecentralizedToken.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1581:52:6"
											},
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1065,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1644:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1653:8:6",
														"memberName": "proposer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "1644:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1068,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1664:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1668:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1664:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1644:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1644:30:6"
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1072,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1685:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1694:6:6",
														"memberName": "target",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "1685:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1075,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "1703:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1685:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1685:24:6"
											},
											{
												"expression": {
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1078,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1720:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1729:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "1720:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1081,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "1738:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1720:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "1720:24:6"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1084,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1755:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1764:13:6",
														"memberName": "creationBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "1755:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1087,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1786:6:6",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "1780:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1755:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1755:37:6"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1091,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1803:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1812:9:6",
														"memberName": "isMinting",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 959,
														"src": "1803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1094,
														"name": "isMinting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "1824:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1803:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1803:30:6"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1097,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1844:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1853:14:6",
														"memberName": "executionBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 957,
														"src": "1844:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1100,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1870:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1876:6:6",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "1870:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1102,
															"name": "executionDelayInBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1885:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1870:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1844:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1844:63:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1107,
															"name": "proposalCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "1964:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1979:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1983:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1979:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1991:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "1999:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1112,
															"name": "isMinting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2007:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1106,
														"name": "ProposalCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "1948:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,bool)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1948:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "EmitStatement",
												"src": "1943:74:6"
											}
										]
									},
									"functionSelector": "9713de52",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createProposal",
									"nameLocation": "1308:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1331:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1323:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1347:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1339:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "isMinting",
												"nameLocation": "1360:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1355:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1031,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1355:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:48:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:0:6"
									},
									"scope": 1378,
									"src": "1299:726:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "2088:656:6",
										"statements": [
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "2116:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "2099:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
															"typeString": "struct DecentralizedToken.Proposal"
														},
														"typeName": {
															"id": 1124,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1123,
																"name": "Proposal",
																"nameLocations": [
																	"2099:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 964,
																"src": "2099:8:6"
															},
															"referencedDeclaration": 964,
															"src": "2099:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"baseExpression": {
														"id": 1126,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2127:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
															"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal storage ref)"
														}
													},
													"id": 1128,
													"indexExpression": {
														"id": 1127,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "2137:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2127:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$964_storage",
														"typeString": "struct DecentralizedToken.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2099:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1131,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2167:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2173:6:6",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "2167:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1133,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "2182:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																			"typeString": "struct DecentralizedToken.Proposal storage pointer"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2191:13:6",
																	"memberName": "creationBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 955,
																	"src": "2182:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1135,
																	"name": "votingPeriodInBlocks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "2207:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2182:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2167:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720706572696f642068617320656e646564",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58",
																"typeString": "literal_string \"Voting period has ended\""
															},
															"value": "Voting period has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d17960adc50e68efad98c8b1e8480a6c86ed99481b8b37b0fc6df9396be90c58",
																"typeString": "literal_string \"Voting period has ended\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2159:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2159:96:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1143,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2284:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2288:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2284:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1142,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2274:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2274:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2298:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2274:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f20766f7465",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2301:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9",
																"typeString": "literal_string \"No tokens to vote\""
															},
															"value": "No tokens to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_824133654506f10a4f01c9f90ea8c64e0c5603376bd2f191fdab4c36e943ddd9",
																"typeString": "literal_string \"No tokens to vote\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2266:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2266:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "2266:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2340:28:6",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 1152,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "2341:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																			"typeString": "struct DecentralizedToken.Proposal storage pointer"
																		}
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2350:6:6",
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 963,
																	"src": "2341:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1156,
																"indexExpression": {
																	"expression": {
																		"id": 1154,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2357:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2361:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2357:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2341:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f746564",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2370:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															},
															"value": "Already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2332:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "2332:54:6"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "voterBalance",
														"nameLocation": "2407:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "2399:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2399:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1167,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2432:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2436:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2432:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1163,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2422:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2422:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2399:44:6"
											},
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "votePower",
														"nameLocation": "2462:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "2454:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"id": 1170,
													"name": "voterBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "2474:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:32:6"
											},
											{
												"condition": {
													"id": 1172,
													"name": "support",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1120,
													"src": "2503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "2575:61:6",
													"statements": [
														{
															"expression": {
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1180,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "2590:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																			"typeString": "struct DecentralizedToken.Proposal storage pointer"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2599:12:6",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 953,
																	"src": "2590:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1183,
																	"name": "votePower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "2615:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2590:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1185,
															"nodeType": "ExpressionStatement",
															"src": "2590:34:6"
														}
													]
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "2499:137:6",
												"trueBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "2512:57:6",
													"statements": [
														{
															"expression": {
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1173,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "2527:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																			"typeString": "struct DecentralizedToken.Proposal storage pointer"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2536:8:6",
																	"memberName": "votesFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 951,
																	"src": "2527:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1176,
																	"name": "votePower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "2548:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2527:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1178,
															"nodeType": "ExpressionStatement",
															"src": "2527:30:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1188,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "2646:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																	"typeString": "struct DecentralizedToken.Proposal storage pointer"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2655:6:6",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 963,
															"src": "2646:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1193,
														"indexExpression": {
															"expression": {
																"id": 1190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2662:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2666:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2662:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2646:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2646:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "2646:34:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1198,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "2704:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2716:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2720:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2716:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "support",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "2728:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1197,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "2698:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,bool)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2698:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "2693:43:6"
											}
										]
									},
									"functionSelector": "c9d27afe",
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "2042:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2055:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2047:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "support",
												"nameLocation": "2072:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2067:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2067:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:34:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:0:6"
									},
									"scope": 1378,
									"src": "2033:711:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2804:1223:6",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "2832:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "2815:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
															"typeString": "struct DecentralizedToken.Proposal"
														},
														"typeName": {
															"id": 1211,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1210,
																"name": "Proposal",
																"nameLocations": [
																	"2815:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 964,
																"src": "2815:8:6"
															},
															"referencedDeclaration": 964,
															"src": "2815:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"baseExpression": {
														"id": 1213,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2843:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
															"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal storage ref)"
														}
													},
													"id": 1215,
													"indexExpression": {
														"id": 1214,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2853:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2843:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$964_storage",
														"typeString": "struct DecentralizedToken.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2815:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1218,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2883:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2889:6:6",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "2883:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1220,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "2899:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																		"typeString": "struct DecentralizedToken.Proposal storage pointer"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2908:14:6",
																"memberName": "executionBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "2899:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2883:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "457865637574696f6e20706572696f6420686173206e6f742073746172746564",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2924:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4",
																"typeString": "literal_string \"Execution period has not started\""
															},
															"value": "Execution period has not started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c8379a73694a10bcc5ed1bcce5612cadbc8f846897be851be7cbed17a92b7b4",
																"typeString": "literal_string \"Execution period has not started\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2875:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "2875:84:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2978:18:6",
															"subExpression": {
																"expression": {
																	"id": 1227,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "2979:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																		"typeString": "struct DecentralizedToken.Proposal storage pointer"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2988:8:6",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 949,
																"src": "2979:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f706f73616c20616c7265616479206578656375746564",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2998:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd",
																"typeString": "literal_string \"Proposal already executed\""
															},
															"value": "Proposal already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd",
																"typeString": "literal_string \"Proposal already executed\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2970:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "2970:56:6"
											},
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "totalVotes",
														"nameLocation": "3047:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "3039:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3039:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1240,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1235,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3060:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3069:8:6",
														"memberName": "votesFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 951,
														"src": "3060:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1237,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3080:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3089:12:6",
														"memberName": "votesAgainst",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 953,
														"src": "3080:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3060:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3039:62:6"
											},
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "majorityThreshold",
														"nameLocation": "3120:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "3112:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3112:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1243,
																	"name": "totalVotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "3141:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3531",
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3154:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_51_by_1",
																		"typeString": "int_const 51"
																	},
																	"value": "51"
																},
																"src": "3141:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1246,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3140:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3160:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3140:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3112:51:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1250,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3202:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3211:8:6",
														"memberName": "votesFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 951,
														"src": "3202:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1252,
														"name": "majorityThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3223:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3202:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "3791:146:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "50726f706f73616c20646964206e6f74206d656574206d616a6f72697479207468726573686f6c64",
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3882:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3",
																			"typeString": "literal_string \"Proposal did not meet majority threshold\""
																		},
																		"value": "Proposal did not meet majority threshold"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_9e3c0e3c762c35644de469e6f0730142fead357c8edf62f9ffda08cf8bae6da3",
																			"typeString": "literal_string \"Proposal did not meet majority threshold\""
																		}
																	],
																	"id": 1297,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3875:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3875:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1300,
															"nodeType": "ExpressionStatement",
															"src": "3875:50:6"
														}
													]
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "3198:739:6",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "3242:543:6",
													"statements": [
														{
															"condition": {
																"expression": {
																	"id": 1254,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "3261:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																		"typeString": "struct DecentralizedToken.Proposal storage pointer"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3270:9:6",
																"memberName": "isMinting",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 959,
																"src": "3261:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1294,
																"nodeType": "Block",
																"src": "3527:247:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1278,
																									"name": "proposal",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1212,
																									"src": "3630:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																										"typeString": "struct DecentralizedToken.Proposal storage pointer"
																									}
																								},
																								"id": 1279,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3639:8:6",
																								"memberName": "proposer",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 943,
																								"src": "3630:17:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1277,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 385,
																							"src": "3620:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 1280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3620:28:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 1281,
																							"name": "proposal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1212,
																							"src": "3652:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																								"typeString": "struct DecentralizedToken.Proposal storage pointer"
																							}
																						},
																						"id": 1282,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3661:6:6",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 947,
																						"src": "3652:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3620:47:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f7420656e6f7567682062616c616e636520746f206275726e",
																					"id": 1284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3669:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058",
																						"typeString": "literal_string \"Not enough balance to burn\""
																					},
																					"value": "Not enough balance to burn"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_72a79112365d0611f3bdbec1f566153a7d654ace9f16a6b89fb3f464db15e058",
																						"typeString": "literal_string \"Not enough balance to burn\""
																					}
																				],
																				"id": 1276,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "3612:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3612:86:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1286,
																		"nodeType": "ExpressionStatement",
																		"src": "3612:86:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1288,
																						"name": "proposal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "3723:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																							"typeString": "struct DecentralizedToken.Proposal storage pointer"
																						}
																					},
																					"id": 1289,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3732:8:6",
																					"memberName": "proposer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 943,
																					"src": "3723:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1290,
																						"name": "proposal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "3742:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																							"typeString": "struct DecentralizedToken.Proposal storage pointer"
																						}
																					},
																					"id": 1291,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3751:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 947,
																					"src": "3742:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1287,
																				"name": "_burn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "3717:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3717:41:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1293,
																		"nodeType": "ExpressionStatement",
																		"src": "3717:41:6"
																	}
																]
															},
															"id": 1295,
															"nodeType": "IfStatement",
															"src": "3257:517:6",
															"trueBody": {
																"id": 1275,
																"nodeType": "Block",
																"src": "3281:240:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"arguments": [
																								{
																									"id": 1259,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "3382:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_DecentralizedToken_$1378",
																										"typeString": "contract DecentralizedToken"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_DecentralizedToken_$1378",
																										"typeString": "contract DecentralizedToken"
																									}
																								],
																								"id": 1258,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3374:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1257,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "3374:7:6",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3374:13:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3388:7:6",
																						"memberName": "balance",
																						"nodeType": "MemberAccess",
																						"src": "3374:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 1262,
																							"name": "proposal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1212,
																							"src": "3399:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																								"typeString": "struct DecentralizedToken.Proposal storage pointer"
																							}
																						},
																						"id": 1263,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3408:6:6",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 947,
																						"src": "3399:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3374:40:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f7420656e6f7567682062616c616e636520746f206d696e74",
																					"id": 1265,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3416:28:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a",
																						"typeString": "literal_string \"Not enough balance to mint\""
																					},
																					"value": "Not enough balance to mint"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8a3f19c08634bd5e53661a08d0234deaecc607193f336267b12b608718b5af7a",
																						"typeString": "literal_string \"Not enough balance to mint\""
																					}
																				],
																				"id": 1256,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "3366:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3366:79:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1267,
																		"nodeType": "ExpressionStatement",
																		"src": "3366:79:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1269,
																						"name": "proposal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "3470:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																							"typeString": "struct DecentralizedToken.Proposal storage pointer"
																						}
																					},
																					"id": 1270,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3479:8:6",
																					"memberName": "proposer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 943,
																					"src": "3470:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1271,
																						"name": "proposal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "3489:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																							"typeString": "struct DecentralizedToken.Proposal storage pointer"
																						}
																					},
																					"id": 1272,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3498:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 947,
																					"src": "3489:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1268,
																				"name": "_mint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "3464:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3464:41:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1274,
																		"nodeType": "ExpressionStatement",
																		"src": "3464:41:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1303,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3949:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$964_storage_ptr",
																"typeString": "struct DecentralizedToken.Proposal storage pointer"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3958:8:6",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 949,
														"src": "3949:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3969:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3949:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "3949:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1310,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "4008:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1309,
														"name": "ProposalExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "3991:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3991:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "3986:33:6"
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nameLocation": "2761:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2785:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2777:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:20:6"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2804:0:6"
									},
									"scope": 1378,
									"src": "2752:1275:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "4119:123:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4138:11:6",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1325,
																	"name": "isVoting",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "4139:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4139:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207472616e7366657220647572696e6720766f74696e67",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4151:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf",
																"typeString": "literal_string \"Cannot transfer during voting\""
															},
															"value": "Cannot transfer during voting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_136d9698eb6ccb9f92b396f5af7659b062dbb1eee3ec5897469cbb93ee0878bf",
																"typeString": "literal_string \"Cannot transfer during voting\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4130:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4130:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "4130:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1333,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "4216:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1334,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "4227:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1331,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4201:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DecentralizedToken_$1378_$",
																"typeString": "type(contract super DecentralizedToken)"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4201:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4201:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1336,
												"nodeType": "Return",
												"src": "4194:40:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4044:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1320,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4095:8:6"
									},
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4061:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4053:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4080:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4072:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4052:35:6"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4113:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4113:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:6:6"
									},
									"scope": 1378,
									"src": "4035:207:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "4297:254:6",
										"statements": [
											{
												"body": {
													"id": 1372,
													"nodeType": "Block",
													"src": "4353:168:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1353,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4372:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4378:6:6",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "4372:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1355,
																					"name": "proposals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 971,
																					"src": "4387:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
																						"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal storage ref)"
																					}
																				},
																				"id": 1357,
																				"indexExpression": {
																					"id": 1356,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1344,
																					"src": "4397:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4387:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$964_storage",
																					"typeString": "struct DecentralizedToken.Proposal storage ref"
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4400:13:6",
																			"memberName": "creationBlock",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 955,
																			"src": "4387:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1359,
																			"name": "votingPeriodInBlocks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "4416:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4387:49:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4372:64:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "4440:22:6",
																	"subExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1362,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "4441:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$964_storage_$",
																					"typeString": "mapping(uint256 => struct DecentralizedToken.Proposal storage ref)"
																				}
																			},
																			"id": 1364,
																			"indexExpression": {
																				"id": 1363,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "4451:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4441:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$964_storage",
																				"typeString": "struct DecentralizedToken.Proposal storage ref"
																			}
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4454:8:6",
																		"memberName": "executed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 949,
																		"src": "4441:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4372:90:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1371,
															"nodeType": "IfStatement",
															"src": "4368:142:6",
															"trueBody": {
																"id": 1370,
																"nodeType": "Block",
																"src": "4464:46:6",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4490:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1342,
																		"id": 1369,
																		"nodeType": "Return",
																		"src": "4483:11:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "4328:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1348,
														"name": "proposalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4333:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4328:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"initializationExpression": {
													"assignments": [
														1344
													],
													"declarations": [
														{
															"constant": false,
															"id": 1344,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4321:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1373,
															"src": "4313:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1343,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4313:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1346,
													"initialValue": {
														"hexValue": "31",
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4313:13:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4348:3:6",
														"subExpression": {
															"id": 1350,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "4348:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1352,
													"nodeType": "ExpressionStatement",
													"src": "4348:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4308:213:6"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4538:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1342,
												"id": 1375,
												"nodeType": "Return",
												"src": "4531:12:6"
											}
										]
									},
									"functionSelector": "1bbef399",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVoting",
									"nameLocation": "4259:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:2:6"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4291:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4291:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4290:6:6"
									},
									"scope": 1378,
									"src": "4250:301:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1379,
							"src": "174:4380:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								992,
								1000,
								1004
							]
						}
					],
					"src": "33:4523:6"
				},
				"id": 6
			}
		}
	}
}